/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n={709:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var r=n(537),i=n.n(r),o=n(645),a=n.n(o),s=n(667),l=n.n(s),c=new URL(n(954),n.b),d=a()(i()),u=l()(c);d.push([e.id,`/**\n * Swiper 11.2.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2025 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 19, 2025\n */\n\n/* FONT_START */\n@font-face {\n  font-family: 'swiper-icons';\n  src: url(${u});\n  font-weight: 400;\n  font-style: normal;\n}\n/* FONT_END */\n:root {\n  --swiper-theme-color: #007aff;\n  /*\n  --swiper-preloader-color: var(--swiper-theme-color);\n  --swiper-wrapper-transition-timing-function: initial;\n  */\n}\n:host {\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 1;\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n  display: block;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-ios .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-horizontal {\n  touch-action: pan-y;\n}\n.swiper-vertical {\n  touch-action: pan-x;\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n  display: block;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight,\n.swiper-autoheight .swiper-slide {\n  height: auto;\n}\n.swiper-autoheight .swiper-wrapper {\n  align-items: flex-start;\n  transition-property: transform, height;\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d.swiper-css-mode .swiper-wrapper {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-wrapper {\n  transform-style: preserve-3d;\n}\n.swiper-3d {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-slide,\n.swiper-3d .swiper-cube-shadow {\n  transform-style: preserve-3d;\n}\n/* CSS Mode */\n.swiper-css-mode > .swiper-wrapper {\n  overflow: auto;\n  scrollbar-width: none;\n  /* For Firefox */\n  -ms-overflow-style: none;\n  /* For Internet Explorer and Edge */\n}\n.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {\n  display: none;\n}\n.swiper-css-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: start start;\n}\n.swiper-css-mode.swiper-horizontal > .swiper-wrapper {\n  scroll-snap-type: x mandatory;\n}\n.swiper-css-mode.swiper-vertical > .swiper-wrapper {\n  scroll-snap-type: y mandatory;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper {\n  scroll-snap-type: none;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: none;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper::before {\n  content: '';\n  flex-shrink: 0;\n  order: 9999;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: center center;\n  scroll-snap-stop: always;\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {\n  margin-inline-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {\n  height: 100%;\n  min-height: 1px;\n  width: var(--swiper-centered-offset-after);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {\n  margin-block-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {\n  width: 100%;\n  min-width: 1px;\n  height: var(--swiper-centered-offset-after);\n}\n/* Slide styles start */\n/* 3D Shadows */\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom,\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: rgba(0, 0, 0, 0.15);\n}\n.swiper-3d .swiper-slide-shadow-left {\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-right {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-top {\n  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-bottom {\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-lazy-preloader {\n  width: 42px;\n  height: 42px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -21px;\n  margin-top: -21px;\n  z-index: 10;\n  transform-origin: 50%;\n  box-sizing: border-box;\n  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));\n  border-radius: 50%;\n  border-top-color: transparent;\n}\n.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,\n.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {\n  animation: swiper-preloader-spin 1s infinite linear;\n}\n.swiper-lazy-preloader-white {\n  --swiper-preloader-color: #fff;\n}\n.swiper-lazy-preloader-black {\n  --swiper-preloader-color: #000;\n}\n@keyframes swiper-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n/* Slide styles end */\n`,"",{version:3,sources:["webpack://./node_modules/swiper/swiper.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF,eAAe;AACf;EACE,2BAA2B;EAC3B,4CAA6rE;EAC7rE,gBAAgB;EAChB,kBAAkB;AACpB;AACA,aAAa;AACb;EACE,6BAA6B;EAC7B;;;GAGC;AACH;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;AACA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,UAAU;EACV,6BAA6B;EAC7B,UAAU;EACV,cAAc;AAChB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,qFAAqF;EACrF,uBAAuB;AACzB;AACA;;;EAGE,iCAAiC;AACnC;AACA;EACE,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,8BAA8B;EAC9B,cAAc;AAChB;AACA;EACE,kBAAkB;AACpB;AACA,gBAAgB;AAChB;;EAEE,YAAY;AACd;AACA;EACE,uBAAuB;EACvB,sCAAsC;AACxC;AACA;EACE,wBAAwB;EACxB,mCAAmC;UAC3B,2BAA2B;AACrC;AACA,eAAe;AACf;EACE,mBAAmB;AACrB;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,4BAA4B;AAC9B;AACA,aAAa;AACb;EACE,cAAc;EACd,qBAAqB;EACrB,gBAAgB;EAChB,wBAAwB;EACxB,mCAAmC;AACrC;AACA;EACE,aAAa;AACf;AACA;EACE,8BAA8B;AAChC;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,sBAAsB;AACxB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,cAAc;EACd,WAAW;AACb;AACA;EACE,gCAAgC;EAChC,wBAAwB;AAC1B;AACA;EACE,yDAAyD;AAC3D;AACA;EACE,YAAY;EACZ,eAAe;EACf,0CAA0C;AAC5C;AACA;EACE,wDAAwD;AAC1D;AACA;EACE,WAAW;EACX,cAAc;EACd,2CAA2C;AAC7C;AACA,uBAAuB;AACvB,eAAe;AACf;;;;;;;;;;EAUE,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,oBAAoB;EACpB,WAAW;AACb;AACA;EACE,+BAA+B;AACjC;AACA;EACE,gFAAgF;AAClF;AACA;EACE,iFAAiF;AACnF;AACA;EACE,+EAA+E;AACjF;AACA;EACE,kFAAkF;AACpF;AACA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,kBAAkB;EAClB,iBAAiB;EACjB,WAAW;EACX,qBAAqB;EACrB,sBAAsB;EACtB,0EAA0E;EAC1E,kBAAkB;EAClB,6BAA6B;AAC/B;AACA;;EAEE,mDAAmD;AACrD;AACA;EACE,8BAA8B;AAChC;AACA;EACE,8BAA8B;AAChC;AACA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;AACA,qBAAqB",sourcesContent:["/**\n * Swiper 11.2.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2025 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 19, 2025\n */\n\n/* FONT_START */\n@font-face {\n  font-family: 'swiper-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA');\n  font-weight: 400;\n  font-style: normal;\n}\n/* FONT_END */\n:root {\n  --swiper-theme-color: #007aff;\n  /*\n  --swiper-preloader-color: var(--swiper-theme-color);\n  --swiper-wrapper-transition-timing-function: initial;\n  */\n}\n:host {\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 1;\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n  display: block;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-ios .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-horizontal {\n  touch-action: pan-y;\n}\n.swiper-vertical {\n  touch-action: pan-x;\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n  display: block;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight,\n.swiper-autoheight .swiper-slide {\n  height: auto;\n}\n.swiper-autoheight .swiper-wrapper {\n  align-items: flex-start;\n  transition-property: transform, height;\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d.swiper-css-mode .swiper-wrapper {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-wrapper {\n  transform-style: preserve-3d;\n}\n.swiper-3d {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-slide,\n.swiper-3d .swiper-cube-shadow {\n  transform-style: preserve-3d;\n}\n/* CSS Mode */\n.swiper-css-mode > .swiper-wrapper {\n  overflow: auto;\n  scrollbar-width: none;\n  /* For Firefox */\n  -ms-overflow-style: none;\n  /* For Internet Explorer and Edge */\n}\n.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {\n  display: none;\n}\n.swiper-css-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: start start;\n}\n.swiper-css-mode.swiper-horizontal > .swiper-wrapper {\n  scroll-snap-type: x mandatory;\n}\n.swiper-css-mode.swiper-vertical > .swiper-wrapper {\n  scroll-snap-type: y mandatory;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper {\n  scroll-snap-type: none;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: none;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper::before {\n  content: '';\n  flex-shrink: 0;\n  order: 9999;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: center center;\n  scroll-snap-stop: always;\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {\n  margin-inline-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {\n  height: 100%;\n  min-height: 1px;\n  width: var(--swiper-centered-offset-after);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {\n  margin-block-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {\n  width: 100%;\n  min-width: 1px;\n  height: var(--swiper-centered-offset-after);\n}\n/* Slide styles start */\n/* 3D Shadows */\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom,\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: rgba(0, 0, 0, 0.15);\n}\n.swiper-3d .swiper-slide-shadow-left {\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-right {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-top {\n  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-bottom {\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-lazy-preloader {\n  width: 42px;\n  height: 42px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -21px;\n  margin-top: -21px;\n  z-index: 10;\n  transform-origin: 50%;\n  box-sizing: border-box;\n  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));\n  border-radius: 50%;\n  border-top-color: transparent;\n}\n.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,\n.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {\n  animation: swiper-preloader-spin 1s infinite linear;\n}\n.swiper-lazy-preloader-white {\n  --swiper-preloader-color: #fff;\n}\n.swiper-lazy-preloader-black {\n  --swiper-preloader-color: #000;\n}\n@keyframes swiper-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n/* Slide styles end */\n"],sourceRoot:""}]);const m=d},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},448:(e,t,n)=>{"use strict";var r=n(294),i=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,s={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(s[e]=t,e=0;e<t.length;e++)a.add(t[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function h(e,t,n,r,i,o,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=a}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var C=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function A(e,t,n,r){var i=g.hasOwnProperty(t)?g[t]:null;(null!==i?0!==i.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!u.call(f,e)||!u.call(p,e)&&(m.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(C,v);g[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(C,v);g[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(C,v);g[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),S=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),P=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),_=Symbol.for("react.context"),D=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),k=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var j=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var F=Symbol.iterator;function M(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}var U,T=Object.assign;function R(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var N=!1;function W(e,t){if(!e||N)return"";N=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var i=t.stack.split("\n"),o=r.stack.split("\n"),a=i.length-1,s=o.length-1;1<=a&&0<=s&&i[a]!==o[s];)s--;for(;1<=a&&0<=s;a--,s--)if(i[a]!==o[s]){if(1!==a||1!==s)do{if(a--,0>--s||i[a]!==o[s]){var l="\n"+i[a].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=a&&0<=s);break}}}finally{N=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?R(e):""}function B(e){switch(e.tag){case 5:return R(e.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 1:return W(e.type,!0);default:return""}}function z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case S:return"Portal";case x:return"Profiler";case P:return"StrictMode";case O:return"Suspense";case I:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case D:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(t=e.displayName||null)?t:z(e.type)||"Memo";case k:t=e._payload,e=e._init;try{return z(e(t))}catch(e){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return z(t);case 8:return t===P?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function J(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Y(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return T({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function q(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&A(e,"checked",t,!1)}function X(e,t){Z(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function K(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return T({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function oe(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ae(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,de,ue=(de=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return de(e,t)}))}:de);function me(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var Ce=T({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(Ce[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function Ae(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function ye(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,we=null,Pe=null;function xe(e){if(e=Ai(e)){if("function"!=typeof Se)throw Error(o(280));var t=e.stateNode;t&&(t=yi(t),Se(e.stateNode,e.type,t))}}function Ee(e){we?Pe?Pe.push(e):Pe=[e]:we=e}function _e(){if(we){var e=we,t=Pe;if(Pe=we=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function De(e,t){return e(t)}function Oe(){}var Ie=!1;function Le(e,t,n){if(Ie)return e(t,n);Ie=!0;try{return De(e,t,n)}finally{Ie=!1,(null!==we||null!==Pe)&&(Oe(),_e())}}function ke(e,t){var n=e.stateNode;if(null===n)return null;var r=yi(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var je=!1;if(d)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){je=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(de){je=!1}function Me(e,t,n,r,i,o,a,s,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Ue=!1,Te=null,Re=!1,Ne=null,We={onError:function(e){Ue=!0,Te=e}};function Be(e,t,n,r,i,o,a,s,l){Ue=!1,Te=null,Me.apply(We,arguments)}function ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(ze(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=ze(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){n=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===n)return Ve(i),e;if(a===r)return Ve(i),t;a=a.sibling}throw Error(o(188))}if(n.return!==r.return)n=i,r=a;else{for(var s=!1,l=i.child;l;){if(l===n){s=!0,n=i,r=a;break}if(l===r){s=!0,r=i,n=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===n){s=!0,n=a,r=i;break}if(l===r){s=!0,r=a,n=i;break}l=l.sibling}if(!s)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Je(e):null}function Je(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Je(e);if(null!==t)return t;e=e.sibling}return null}var Qe=i.unstable_scheduleCallback,Ye=i.unstable_cancelCallback,$e=i.unstable_shouldYield,qe=i.unstable_requestPaint,Ze=i.unstable_now,Xe=i.unstable_getCurrentPriorityLevel,Ke=i.unstable_ImmediatePriority,et=i.unstable_UserBlockingPriority,tt=i.unstable_NormalPriority,nt=i.unstable_LowPriority,rt=i.unstable_IdlePriority,it=null,ot=null,at=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2,ct=64,dt=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function mt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,i=e.suspendedLanes,o=e.pingedLanes,a=268435455&n;if(0!==a){var s=a&~i;0!==s?r=ut(s):0!=(o&=a)&&(r=ut(o))}else 0!=(a=n&~i)?r=ut(a):0!==o&&(r=ut(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&i)&&((i=r&-r)>=(o=t&-t)||16===i&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)i=1<<(n=31-at(t)),r|=e[n],t&=~i;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ct(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-at(t)]=n}function vt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-at(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var At=0;function bt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var yt,St,wt,Pt,xt,Et=!1,_t=[],Dt=null,Ot=null,It=null,Lt=new Map,kt=new Map,jt=[],Ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Dt=null;break;case"dragenter":case"dragleave":Ot=null;break;case"mouseover":case"mouseout":It=null;break;case"pointerover":case"pointerout":Lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":kt.delete(t.pointerId)}}function Ut(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},null!==t&&null!==(t=Ai(t))&&St(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==i&&-1===t.indexOf(i)&&t.push(i),e)}function Tt(e){var t=vi(e.target);if(null!==t){var n=ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void xt(e.priority,(function(){wt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Rt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Ai(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);be=r,n.target.dispatchEvent(r),be=null,t.shift()}return!0}function Nt(e,t,n){Rt(e)&&n.delete(t)}function Wt(){Et=!1,null!==Dt&&Rt(Dt)&&(Dt=null),null!==Ot&&Rt(Ot)&&(Ot=null),null!==It&&Rt(It)&&(It=null),Lt.forEach(Nt),kt.forEach(Nt)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Wt)))}function zt(e){function t(t){return Bt(t,e)}if(0<_t.length){Bt(_t[0],e);for(var n=1;n<_t.length;n++){var r=_t[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Dt&&Bt(Dt,e),null!==Ot&&Bt(Ot,e),null!==It&&Bt(It,e),Lt.forEach(t),kt.forEach(t),n=0;n<jt.length;n++)(r=jt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<jt.length&&null===(n=jt[0]).blockedOn;)Tt(n),null===n.blockedOn&&jt.shift()}var Gt=b.ReactCurrentBatchConfig,Vt=!0;function Ht(e,t,n,r){var i=At,o=Gt.transition;Gt.transition=null;try{At=1,Qt(e,t,n,r)}finally{At=i,Gt.transition=o}}function Jt(e,t,n,r){var i=At,o=Gt.transition;Gt.transition=null;try{At=4,Qt(e,t,n,r)}finally{At=i,Gt.transition=o}}function Qt(e,t,n,r){if(Vt){var i=$t(e,t,n,r);if(null===i)Vr(e,t,r,Yt,n),Mt(e,r);else if(function(e,t,n,r,i){switch(t){case"focusin":return Dt=Ut(Dt,e,t,n,r,i),!0;case"dragenter":return Ot=Ut(Ot,e,t,n,r,i),!0;case"mouseover":return It=Ut(It,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return Lt.set(o,Ut(Lt.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,kt.set(o,Ut(kt.get(o)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r))r.stopPropagation();else if(Mt(e,r),4&t&&-1<Ft.indexOf(e)){for(;null!==i;){var o=Ai(i);if(null!==o&&yt(o),null===(o=$t(e,t,n,r))&&Vr(e,t,r,Yt,n),o===i)break;i=o}null!==i&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Yt=null;function $t(e,t,n,r){if(Yt=null,null!==(e=vi(e=ye(r))))if(null===(t=ze(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Ke:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Zt=null,Xt=null,Kt=null;function en(){if(Kt)return Kt;var e,t,n=Xt,r=n.length,i="value"in Zt?Zt.value:Zt.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return Kt=i.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function on(e){function t(t,n,r,i,o){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=i,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(i):i[a]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return T(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,sn,ln,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=on(cn),un=T({},cn,{view:0,detail:0}),mn=on(un),pn=T({},un,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(an=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=an=0,ln=e),an)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=on(pn),hn=on(T({},pn,{dataTransfer:0})),gn=on(T({},un,{relatedTarget:0})),Cn=on(T({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=T({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),An=on(vn),bn=on(T({},cn,{data:0})),yn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=wn[e])&&!!t[e]}function xn(){return Pn}var En=T({},un,{key:function(e){if(e.key){var t=yn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=on(En),Dn=on(T({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=on(T({},un,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),In=on(T({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=T({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),kn=on(Ln),jn=[9,13,27,32],Fn=d&&"CompositionEvent"in window,Mn=null;d&&"documentMode"in document&&(Mn=document.documentMode);var Un=d&&"TextEvent"in window&&!Mn,Tn=d&&(!Fn||Mn&&8<Mn&&11>=Mn),Rn=String.fromCharCode(32),Nn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==jn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zn=!1,Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Hn(e,t,n,r){Ee(r),0<(t=Jr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Jn=null,Qn=null;function Yn(e){Rr(e,0)}function $n(e){if(Q(bi(e)))return e}function qn(e,t){if("change"===e)return t}var Zn=!1;if(d){var Xn;if(d){var Kn="oninput"in document;if(!Kn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Kn="function"==typeof er.oninput}Xn=Kn}else Xn=!1;Zn=Xn&&(!document.documentMode||9<document.documentMode)}function tr(){Jn&&(Jn.detachEvent("onpropertychange",nr),Qn=Jn=null)}function nr(e){if("value"===e.propertyName&&$n(Qn)){var t=[];Hn(t,Qn,e,ye(e)),Le(Yn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Qn=n,(Jn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(Qn)}function or(e,t){if("click"===e)return $n(t)}function ar(e,t){if("input"===e||"change"===e)return $n(t)}var sr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function lr(e,t){if(sr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!u.call(t,i)||!sr(e[i],t[i]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function ur(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ur(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mr(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=mr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ur(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=void 0===r.end?o:Math.min(r.end,i),!e.extend&&o>r&&(i=r,r=o,o=i),i=dr(n,o);var a=dr(n,r);i&&a&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=d&&"documentMode"in document&&11>=document.documentMode,gr=null,Cr=null,vr=null,Ar=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;Ar||null==gr||gr!==Y(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&lr(vr,r)||(vr=r,0<(r=Jr(Cr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function yr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Sr={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},wr={},Pr={};function xr(e){if(wr[e])return wr[e];if(!Sr[e])return e;var t,n=Sr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Pr)return wr[e]=n[t];return e}d&&(Pr=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var Er=xr("animationend"),_r=xr("animationiteration"),Dr=xr("animationstart"),Or=xr("transitionend"),Ir=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function kr(e,t){Ir.set(e,t),l(t,[e])}for(var jr=0;jr<Lr.length;jr++){var Fr=Lr[jr];kr(Fr.toLowerCase(),"on"+(Fr[0].toUpperCase()+Fr.slice(1)))}kr(Er,"onAnimationEnd"),kr(_r,"onAnimationIteration"),kr(Dr,"onAnimationStart"),kr("dblclick","onDoubleClick"),kr("focusin","onFocus"),kr("focusout","onBlur"),kr(Or,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Mr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ur=new Set("cancel close invalid load scroll toggle".split(" ").concat(Mr));function Tr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,i,a,s,l,c){if(Be.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var d=Te;Ue=!1,Te=null,Re||(Re=!0,Ne=d)}}(r,t,void 0,e),e.currentTarget=null}function Rr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var a=r.length-1;0<=a;a--){var s=r[a],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==o&&i.isPropagationStopped())break e;Tr(i,s,c),o=l}else for(a=0;a<r.length;a++){if(l=(s=r[a]).instance,c=s.currentTarget,s=s.listener,l!==o&&i.isPropagationStopped())break e;Tr(i,s,c),o=l}}}if(Re)throw e=Ne,Re=!1,Ne=null,e}function Nr(e,t){var n=t[hi];void 0===n&&(n=t[hi]=new Set);var r=e+"__bubble";n.has(r)||(Gr(t,e,2,!1),n.add(r))}function Wr(e,t,n){var r=0;t&&(r|=4),Gr(n,e,r,t)}var Br="_reactListening"+Math.random().toString(36).slice(2);function zr(e){if(!e[Br]){e[Br]=!0,a.forEach((function(t){"selectionchange"!==t&&(Ur.has(t)||Wr(t,!1,e),Wr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Br]||(t[Br]=!0,Wr("selectionchange",!1,t))}}function Gr(e,t,n,r){switch(qt(t)){case 1:var i=Ht;break;case 4:i=Jt;break;default:i=Qt}n=i.bind(null,t,n,e),i=void 0,!je||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(i=!0),r?void 0!==i?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):void 0!==i?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,i){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var s=r.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===a)for(a=r.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;a=a.return}for(;null!==s;){if(null===(a=vi(s)))return;if(5===(l=a.tag)||6===l){r=o=a;continue e}s=s.parentNode}}r=r.return}Le((function(){var r=o,i=ye(n),a=[];e:{var s=Ir.get(e);if(void 0!==s){var l=dn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=_n;break;case"focusin":c="focus",l=gn;break;case"focusout":c="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=On;break;case Er:case _r:case Dr:l=Cn;break;case Or:l=In;break;case"scroll":l=mn;break;case"wheel":l=kn;break;case"copy":case"cut":case"paste":l=An;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Dn}var d=0!=(4&t),u=!d&&"scroll"===e,m=d?null!==s?s+"Capture":null:s;d=[];for(var p,f=r;null!==f;){var h=(p=f).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==m&&null!=(h=ke(f,m))&&d.push(Hr(f,h,p))),u)break;f=f.return}0<d.length&&(s=new l(s,c,null,n,i),a.push({event:s,listeners:d}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===be||!(c=n.relatedTarget||n.fromElement)||!vi(c)&&!c[fi])&&(l||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=n.relatedTarget||n.toElement)?vi(c):null)&&(c!==(u=ze(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(d=fn,h="onMouseLeave",m="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(d=Dn,h="onPointerLeave",m="onPointerEnter",f="pointer"),u=null==l?s:bi(l),p=null==c?s:bi(c),(s=new d(h,f+"leave",l,n,i)).target=u,s.relatedTarget=p,h=null,vi(i)===r&&((d=new d(m,f+"enter",c,n,i)).target=p,d.relatedTarget=u,h=d),u=h,l&&c)e:{for(m=c,f=0,p=d=l;p;p=Qr(p))f++;for(p=0,h=m;h;h=Qr(h))p++;for(;0<f-p;)d=Qr(d),f--;for(;0<p-f;)m=Qr(m),p--;for(;f--;){if(d===m||null!==m&&d===m.alternate)break e;d=Qr(d),m=Qr(m)}d=null}else d=null;null!==l&&Yr(a,s,l,d,!1),null!==c&&null!==u&&Yr(a,u,c,d,!0)}if("select"===(l=(s=r?bi(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=qn;else if(Vn(s))if(Zn)g=ar;else{g=ir;var C=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=or);switch(g&&(g=g(e,r))?Hn(a,g,n,i):(C&&C(e,s,r),"focusout"===e&&(C=s._wrapperState)&&C.controlled&&"number"===s.type&&ee(s,"number",s.value)),C=r?bi(r):window,e){case"focusin":(Vn(C)||"true"===C.contentEditable)&&(gr=C,Cr=r,vr=null);break;case"focusout":vr=Cr=gr=null;break;case"mousedown":Ar=!0;break;case"contextmenu":case"mouseup":case"dragend":Ar=!1,br(a,n,i);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(a,n,i)}var v;if(Fn)e:{switch(e){case"compositionstart":var A="onCompositionStart";break e;case"compositionend":A="onCompositionEnd";break e;case"compositionupdate":A="onCompositionUpdate";break e}A=void 0}else zn?Wn(e,n)&&(A="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(A="onCompositionStart");A&&(Tn&&"ko"!==n.locale&&(zn||"onCompositionStart"!==A?"onCompositionEnd"===A&&zn&&(v=en()):(Xt="value"in(Zt=i)?Zt.value:Zt.textContent,zn=!0)),0<(C=Jr(r,A)).length&&(A=new bn(A,e,null,n,i),a.push({event:A,listeners:C}),(v||null!==(v=Bn(n)))&&(A.data=v))),(v=Un?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(Nn=!0,Rn);case"textInput":return(e=t.data)===Rn&&Nn?null:e;default:return null}}(e,n):function(e,t){if(zn)return"compositionend"===e||!Fn&&Wn(e,t)?(e=en(),Kt=Xt=Zt=null,zn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Tn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Jr(r,"onBeforeInput")).length&&(i=new bn("onBeforeInput","beforeinput",null,n,i),a.push({event:i,listeners:r}),i.data=v)}Rr(a,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Jr(e,t){for(var n=t+"Capture",r=[];null!==e;){var i=e,o=i.stateNode;5===i.tag&&null!==o&&(i=o,null!=(o=ke(e,n))&&r.unshift(Hr(e,o,i)),null!=(o=ke(e,t))&&r.push(Hr(e,o,i))),e=e.return}return r}function Qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,n,r,i){for(var o=t._reactName,a=[];null!==n&&n!==r;){var s=n,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,i?null!=(l=ke(n,o))&&a.unshift(Hr(n,l,s)):i||null!=(l=ke(n,o))&&a.push(Hr(n,l,s))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}var $r=/\r\n?/g,qr=/\u0000|\uFFFD/g;function Zr(e){return("string"==typeof e?e:""+e).replace($r,"\n").replace(qr,"")}function Xr(e,t,n){if(t=Zr(t),Zr(e)!==t&&n)throw Error(o(425))}function Kr(){}var ei=null,ti=null;function ni(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ri="function"==typeof setTimeout?setTimeout:void 0,ii="function"==typeof clearTimeout?clearTimeout:void 0,oi="function"==typeof Promise?Promise:void 0,ai="function"==typeof queueMicrotask?queueMicrotask:void 0!==oi?function(e){return oi.resolve(null).then(e).catch(si)}:ri;function si(e){setTimeout((function(){throw e}))}function li(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&8===i.nodeType)if("/$"===(n=i.data)){if(0===r)return e.removeChild(i),void zt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=i}while(n);zt(t)}function ci(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function di(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ui=Math.random().toString(36).slice(2),mi="__reactFiber$"+ui,pi="__reactProps$"+ui,fi="__reactContainer$"+ui,hi="__reactEvents$"+ui,gi="__reactListeners$"+ui,Ci="__reactHandles$"+ui;function vi(e){var t=e[mi];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fi]||n[mi]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=di(e);null!==e;){if(n=e[mi])return n;e=di(e)}return t}n=(e=n).parentNode}return null}function Ai(e){return!(e=e[mi]||e[fi])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function yi(e){return e[pi]||null}var Si=[],wi=-1;function Pi(e){return{current:e}}function xi(e){0>wi||(e.current=Si[wi],Si[wi]=null,wi--)}function Ei(e,t){wi++,Si[wi]=e.current,e.current=t}var _i={},Di=Pi(_i),Oi=Pi(!1),Ii=_i;function Li(e,t){var n=e.type.contextTypes;if(!n)return _i;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ki(e){return null!=e.childContextTypes}function ji(){xi(Oi),xi(Di)}function Fi(e,t,n){if(Di.current!==_i)throw Error(o(168));Ei(Di,t),Ei(Oi,n)}function Mi(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in t))throw Error(o(108,G(e)||"Unknown",i));return T({},n,r)}function Ui(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_i,Ii=Di.current,Ei(Di,e),Ei(Oi,Oi.current),!0}function Ti(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Mi(e,t,Ii),r.__reactInternalMemoizedMergedChildContext=e,xi(Oi),xi(Di),Ei(Di,e)):xi(Oi),Ei(Oi,n)}var Ri=null,Ni=!1,Wi=!1;function Bi(e){null===Ri?Ri=[e]:Ri.push(e)}function zi(){if(!Wi&&null!==Ri){Wi=!0;var e=0,t=At;try{var n=Ri;for(At=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ri=null,Ni=!1}catch(t){throw null!==Ri&&(Ri=Ri.slice(e+1)),Qe(Ke,zi),t}finally{At=t,Wi=!1}}return null}var Gi=[],Vi=0,Hi=null,Ji=0,Qi=[],Yi=0,$i=null,qi=1,Zi="";function Xi(e,t){Gi[Vi++]=Ji,Gi[Vi++]=Hi,Hi=e,Ji=t}function Ki(e,t,n){Qi[Yi++]=qi,Qi[Yi++]=Zi,Qi[Yi++]=$i,$i=e;var r=qi;e=Zi;var i=32-at(r)-1;r&=~(1<<i),n+=1;var o=32-at(t)+i;if(30<o){var a=i-i%5;o=(r&(1<<a)-1).toString(32),r>>=a,i-=a,qi=1<<32-at(t)+i|n<<i|r,Zi=o+e}else qi=1<<o|n<<i|r,Zi=e}function eo(e){null!==e.return&&(Xi(e,1),Ki(e,1,0))}function to(e){for(;e===Hi;)Hi=Gi[--Vi],Gi[Vi]=null,Ji=Gi[--Vi],Gi[Vi]=null;for(;e===$i;)$i=Qi[--Yi],Qi[Yi]=null,Zi=Qi[--Yi],Qi[Yi]=null,qi=Qi[--Yi],Qi[Yi]=null}var no=null,ro=null,io=!1,oo=null;function ao(e,t){var n=kc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function so(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=ci(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==$i?{id:qi,overflow:Zi}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=kc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function lo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(io){var t=ro;if(t){var n=t;if(!so(e,t)){if(lo(e))throw Error(o(418));t=ci(n.nextSibling);var r=no;t&&so(e,t)?ao(r,n):(e.flags=-4097&e.flags|2,io=!1,no=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,io=!1,no=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function mo(e){if(e!==no)return!1;if(!io)return uo(e),io=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ni(e.type,e.memoizedProps)),t&&(t=ro)){if(lo(e))throw po(),Error(o(418));for(;t;)ao(e,t),t=ci(t.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=ci(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?ci(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=ci(e.nextSibling)}function fo(){ro=no=null,io=!1}function ho(e){null===oo?oo=[e]:oo.push(e)}var go=b.ReactCurrentBatchConfig;function Co(e,t){if(e&&e.defaultProps){for(var n in t=T({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var vo=Pi(null),Ao=null,bo=null,yo=null;function So(){yo=bo=Ao=null}function wo(e){var t=vo.current;xi(vo),e._currentValue=t}function Po(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function xo(e,t){Ao=e,yo=bo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(bs=!0),e.firstContext=null)}function Eo(e){var t=e._currentValue;if(yo!==e)if(e={context:e,memoizedValue:t,next:null},null===bo){if(null===Ao)throw Error(o(308));bo=e,Ao.dependencies={lanes:0,firstContext:e}}else bo=bo.next=e;return t}var _o=null;function Do(e){null===_o?_o=[e]:_o.push(e)}function Oo(e,t,n,r){var i=t.interleaved;return null===i?(n.next=n,Do(t)):(n.next=i.next,i.next=n),t.interleaved=n,Io(e,r)}function Io(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Lo=!1;function ko(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function jo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Fo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Mo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ol)){var i=r.pending;return null===i?t.next=t:(t.next=i.next,i.next=t),r.pending=t,Io(e,n)}return null===(i=r.interleaved)?(t.next=t,Do(r)):(t.next=i.next,i.next=t),r.interleaved=t,Io(e,n)}function Uo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}function To(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var i=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?i=o=a:o=o.next=a,n=n.next}while(null!==n);null===o?i=o=t:o=o.next=t}else i=o=t;return n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ro(e,t,n,r){var i=e.updateQueue;Lo=!1;var o=i.firstBaseUpdate,a=i.lastBaseUpdate,s=i.shared.pending;if(null!==s){i.shared.pending=null;var l=s,c=l.next;l.next=null,null===a?o=c:a.next=c,a=l;var d=e.alternate;null!==d&&(s=(d=d.updateQueue).lastBaseUpdate)!==a&&(null===s?d.firstBaseUpdate=c:s.next=c,d.lastBaseUpdate=l)}if(null!==o){var u=i.baseState;for(a=0,d=c=l=null,s=o;;){var m=s.lane,p=s.eventTime;if((r&m)===m){null!==d&&(d=d.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,h=s;switch(m=t,p=n,h.tag){case 1:if("function"==typeof(f=h.payload)){u=f.call(p,u,m);break e}u=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(m="function"==typeof(f=h.payload)?f.call(p,u,m):f))break e;u=T({},u,m);break e;case 2:Lo=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(m=i.effects)?i.effects=[s]:m.push(s))}else p={eventTime:p,lane:m,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===d?(c=d=p,l=u):d=d.next=p,a|=m;if(null===(s=s.next)){if(null===(s=i.shared.pending))break;s=(m=s).next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}if(null===d&&(l=u),i.baseState=l,i.firstBaseUpdate=c,i.lastBaseUpdate=d,null!==(t=i.shared.interleaved)){i=t;do{a|=i.lane,i=i.next}while(i!==t)}else null===o&&(i.shared.lanes=0);Tl|=a,e.lanes=a,e.memoizedState=u}}function No(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=n,"function"!=typeof i)throw Error(o(191,i));i.call(r)}}}var Wo=(new r.Component).refs;function Bo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:T({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var zo={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=tc(),i=nc(e),o=Fo(r,i);o.payload=t,null!=n&&(o.callback=n),null!==(t=Mo(e,o,i))&&(rc(t,e,i,r),Uo(t,e,i))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=tc(),i=nc(e),o=Fo(r,i);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=Mo(e,o,i))&&(rc(t,e,i,r),Uo(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tc(),r=nc(e),i=Fo(n,r);i.tag=2,null!=t&&(i.callback=t),null!==(t=Mo(e,i,r))&&(rc(t,e,r,n),Uo(t,e,r))}};function Go(e,t,n,r,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(i,o))}function Vo(e,t,n){var r=!1,i=_i,o=t.contextType;return"object"==typeof o&&null!==o?o=Eo(o):(i=ki(t)?Ii:Di.current,o=(r=null!=(r=t.contextTypes))?Li(e,i):_i),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=zo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function Ho(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&zo.enqueueReplaceState(t,t.state,null)}function Jo(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=Wo,ko(e);var o=t.contextType;"object"==typeof o&&null!==o?i.context=Eo(o):(o=ki(t)?Ii:Di.current,i.context=Li(e,o)),i.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(Bo(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&zo.enqueueReplaceState(i,i.state,null),Ro(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.flags|=4194308)}function Qo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var i=r,a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=i.refs;t===Wo&&(t=i.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Yo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function $o(e){return(0,e._init)(e._payload)}function qo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Fc(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Rc(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function c(e,t,n,r){var o=n.type;return o===w?u(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===k&&$o(o)===t.type)?((r=i(t,n.props)).ref=Qo(e,t,n),r.return=e,r):((r=Mc(n.type,n.key,n.props,null,e.mode,r)).ref=Qo(e,t,n),r.return=e,r)}function d(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nc(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function u(e,t,n,r,o){return null===t||7!==t.tag?((t=Uc(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function m(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Rc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case y:return(n=Mc(t.type,t.key,t.props,null,e.mode,n)).ref=Qo(e,null,t),n.return=e,n;case S:return(t=Nc(t,e.mode,n)).return=e,t;case k:return m(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Uc(t,e.mode,n,null)).return=e,t;Yo(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case y:return n.key===i?c(e,t,n,r):null;case S:return n.key===i?d(e,t,n,r):null;case k:return p(e,t,(i=n._init)(n._payload),r)}if(te(n)||M(n))return null!==i?null:u(e,t,n,r,null);Yo(e,n)}return null}function f(e,t,n,r,i){if("string"==typeof r&&""!==r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case y:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i);case S:return d(t,e=e.get(null===r.key?n:r.key)||null,r,i);case k:return f(e,t,n,(0,r._init)(r._payload),i)}if(te(r)||M(r))return u(t,e=e.get(n)||null,r,i,null);Yo(t,r)}return null}function h(i,o,s,l){for(var c=null,d=null,u=o,h=o=0,g=null;null!==u&&h<s.length;h++){u.index>h?(g=u,u=null):g=u.sibling;var C=p(i,u,s[h],l);if(null===C){null===u&&(u=g);break}e&&u&&null===C.alternate&&t(i,u),o=a(C,o,h),null===d?c=C:d.sibling=C,d=C,u=g}if(h===s.length)return n(i,u),io&&Xi(i,h),c;if(null===u){for(;h<s.length;h++)null!==(u=m(i,s[h],l))&&(o=a(u,o,h),null===d?c=u:d.sibling=u,d=u);return io&&Xi(i,h),c}for(u=r(i,u);h<s.length;h++)null!==(g=f(u,i,h,s[h],l))&&(e&&null!==g.alternate&&u.delete(null===g.key?h:g.key),o=a(g,o,h),null===d?c=g:d.sibling=g,d=g);return e&&u.forEach((function(e){return t(i,e)})),io&&Xi(i,h),c}function g(i,s,l,c){var d=M(l);if("function"!=typeof d)throw Error(o(150));if(null==(l=d.call(l)))throw Error(o(151));for(var u=d=null,h=s,g=s=0,C=null,v=l.next();null!==h&&!v.done;g++,v=l.next()){h.index>g?(C=h,h=null):C=h.sibling;var A=p(i,h,v.value,c);if(null===A){null===h&&(h=C);break}e&&h&&null===A.alternate&&t(i,h),s=a(A,s,g),null===u?d=A:u.sibling=A,u=A,h=C}if(v.done)return n(i,h),io&&Xi(i,g),d;if(null===h){for(;!v.done;g++,v=l.next())null!==(v=m(i,v.value,c))&&(s=a(v,s,g),null===u?d=v:u.sibling=v,u=v);return io&&Xi(i,g),d}for(h=r(i,h);!v.done;g++,v=l.next())null!==(v=f(h,i,g,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?g:v.key),s=a(v,s,g),null===u?d=v:u.sibling=v,u=v);return e&&h.forEach((function(e){return t(i,e)})),io&&Xi(i,g),d}return function e(r,o,a,l){if("object"==typeof a&&null!==a&&a.type===w&&null===a.key&&(a=a.props.children),"object"==typeof a&&null!==a){switch(a.$$typeof){case y:e:{for(var c=a.key,d=o;null!==d;){if(d.key===c){if((c=a.type)===w){if(7===d.tag){n(r,d.sibling),(o=i(d,a.props.children)).return=r,r=o;break e}}else if(d.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===k&&$o(c)===d.type){n(r,d.sibling),(o=i(d,a.props)).ref=Qo(r,d,a),o.return=r,r=o;break e}n(r,d);break}t(r,d),d=d.sibling}a.type===w?((o=Uc(a.props.children,r.mode,l,a.key)).return=r,r=o):((l=Mc(a.type,a.key,a.props,null,r.mode,l)).ref=Qo(r,o,a),l.return=r,r=l)}return s(r);case S:e:{for(d=a.key;null!==o;){if(o.key===d){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){n(r,o.sibling),(o=i(o,a.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=Nc(a,r.mode,l)).return=r,r=o}return s(r);case k:return e(r,o,(d=a._init)(a._payload),l)}if(te(a))return h(r,o,a,l);if(M(a))return g(r,o,a,l);Yo(r,a)}return"string"==typeof a&&""!==a||"number"==typeof a?(a=""+a,null!==o&&6===o.tag?(n(r,o.sibling),(o=i(o,a)).return=r,r=o):(n(r,o),(o=Rc(a,r.mode,l)).return=r,r=o),s(r)):n(r,o)}}var Zo=qo(!0),Xo=qo(!1),Ko={},ea=Pi(Ko),ta=Pi(Ko),na=Pi(Ko);function ra(e){if(e===Ko)throw Error(o(174));return e}function ia(e,t){switch(Ei(na,t),Ei(ta,e),Ei(ea,Ko),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xi(ea),Ei(ea,t)}function oa(){xi(ea),xi(ta),xi(na)}function aa(e){ra(na.current);var t=ra(ea.current),n=le(t,e.type);t!==n&&(Ei(ta,e),Ei(ea,n))}function sa(e){ta.current===e&&(xi(ea),xi(ta))}var la=Pi(0);function ca(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var da=[];function ua(){for(var e=0;e<da.length;e++)da[e]._workInProgressVersionPrimary=null;da.length=0}var ma=b.ReactCurrentDispatcher,pa=b.ReactCurrentBatchConfig,fa=0,ha=null,ga=null,Ca=null,va=!1,Aa=!1,ba=0,ya=0;function Sa(){throw Error(o(321))}function wa(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sr(e[n],t[n]))return!1;return!0}function Pa(e,t,n,r,i,a){if(fa=a,ha=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ma.current=null===e||null===e.memoizedState?ss:ls,e=n(r,i),Aa){a=0;do{if(Aa=!1,ba=0,25<=a)throw Error(o(301));a+=1,Ca=ga=null,t.updateQueue=null,ma.current=cs,e=n(r,i)}while(Aa)}if(ma.current=as,t=null!==ga&&null!==ga.next,fa=0,Ca=ga=ha=null,va=!1,t)throw Error(o(300));return e}function xa(){var e=0!==ba;return ba=0,e}function Ea(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ca?ha.memoizedState=Ca=e:Ca=Ca.next=e,Ca}function _a(){if(null===ga){var e=ha.alternate;e=null!==e?e.memoizedState:null}else e=ga.next;var t=null===Ca?ha.memoizedState:Ca.next;if(null!==t)Ca=t,ga=e;else{if(null===e)throw Error(o(310));e={memoizedState:(ga=e).memoizedState,baseState:ga.baseState,baseQueue:ga.baseQueue,queue:ga.queue,next:null},null===Ca?ha.memoizedState=Ca=e:Ca=Ca.next=e}return Ca}function Da(e,t){return"function"==typeof t?t(e):t}function Oa(e){var t=_a(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=ga,i=r.baseQueue,a=n.pending;if(null!==a){if(null!==i){var s=i.next;i.next=a.next,a.next=s}r.baseQueue=i=a,n.pending=null}if(null!==i){a=i.next,r=r.baseState;var l=s=null,c=null,d=a;do{var u=d.lane;if((fa&u)===u)null!==c&&(c=c.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),r=d.hasEagerState?d.eagerState:e(r,d.action);else{var m={lane:u,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};null===c?(l=c=m,s=r):c=c.next=m,ha.lanes|=u,Tl|=u}d=d.next}while(null!==d&&d!==a);null===c?s=r:c.next=l,sr(r,t.memoizedState)||(bs=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){i=e;do{a=i.lane,ha.lanes|=a,Tl|=a,i=i.next}while(i!==e)}else null===i&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ia(e){var t=_a(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,a=t.memoizedState;if(null!==i){n.pending=null;var s=i=i.next;do{a=e(a,s.action),s=s.next}while(s!==i);sr(a,t.memoizedState)||(bs=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function La(){}function ka(e,t){var n=ha,r=_a(),i=t(),a=!sr(r.memoizedState,i);if(a&&(r.memoizedState=i,bs=!0),r=r.queue,Va(Ma.bind(null,n,r,e),[e]),r.getSnapshot!==t||a||null!==Ca&&1&Ca.memoizedState.tag){if(n.flags|=2048,Na(9,Fa.bind(null,n,r,i,t),void 0,null),null===Il)throw Error(o(349));0!=(30&fa)||ja(n,t,i)}return i}function ja(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ha.updateQueue)?(t={lastEffect:null,stores:null},ha.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Fa(e,t,n,r){t.value=n,t.getSnapshot=r,Ua(t)&&Ta(e)}function Ma(e,t,n){return n((function(){Ua(t)&&Ta(e)}))}function Ua(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!sr(e,n)}catch(e){return!0}}function Ta(e){var t=Io(e,1);null!==t&&rc(t,e,1,-1)}function Ra(e){var t=Ea();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Da,lastRenderedState:e},t.queue=e,e=e.dispatch=ns.bind(null,ha,e),[t.memoizedState,e]}function Na(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ha.updateQueue)?(t={lastEffect:null,stores:null},ha.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Wa(){return _a().memoizedState}function Ba(e,t,n,r){var i=Ea();ha.flags|=e,i.memoizedState=Na(1|t,n,void 0,void 0===r?null:r)}function za(e,t,n,r){var i=_a();r=void 0===r?null:r;var o=void 0;if(null!==ga){var a=ga.memoizedState;if(o=a.destroy,null!==r&&wa(r,a.deps))return void(i.memoizedState=Na(t,n,o,r))}ha.flags|=e,i.memoizedState=Na(1|t,n,o,r)}function Ga(e,t){return Ba(8390656,8,e,t)}function Va(e,t){return za(2048,8,e,t)}function Ha(e,t){return za(4,2,e,t)}function Ja(e,t){return za(4,4,e,t)}function Qa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ya(e,t,n){return n=null!=n?n.concat([e]):null,za(4,4,Qa.bind(null,t,e),n)}function $a(){}function qa(e,t){var n=_a();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&wa(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Za(e,t){var n=_a();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&wa(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Xa(e,t,n){return 0==(21&fa)?(e.baseState&&(e.baseState=!1,bs=!0),e.memoizedState=n):(sr(n,t)||(n=ht(),ha.lanes|=n,Tl|=n,e.baseState=!0),t)}function Ka(e,t){var n=At;At=0!==n&&4>n?n:4,e(!0);var r=pa.transition;pa.transition={};try{e(!1),t()}finally{At=n,pa.transition=r}}function es(){return _a().memoizedState}function ts(e,t,n){var r=nc(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},rs(e)?is(t,n):null!==(n=Oo(e,t,n,r))&&(rc(n,e,r,tc()),os(n,t,r))}function ns(e,t,n){var r=nc(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(rs(e))is(t,i);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var a=t.lastRenderedState,s=o(a,n);if(i.hasEagerState=!0,i.eagerState=s,sr(s,a)){var l=t.interleaved;return null===l?(i.next=i,Do(t)):(i.next=l.next,l.next=i),void(t.interleaved=i)}}catch(e){}null!==(n=Oo(e,t,i,r))&&(rc(n,e,r,i=tc()),os(n,t,r))}}function rs(e){var t=e.alternate;return e===ha||null!==t&&t===ha}function is(e,t){Aa=va=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function os(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}var as={readContext:Eo,useCallback:Sa,useContext:Sa,useEffect:Sa,useImperativeHandle:Sa,useInsertionEffect:Sa,useLayoutEffect:Sa,useMemo:Sa,useReducer:Sa,useRef:Sa,useState:Sa,useDebugValue:Sa,useDeferredValue:Sa,useTransition:Sa,useMutableSource:Sa,useSyncExternalStore:Sa,useId:Sa,unstable_isNewReconciler:!1},ss={readContext:Eo,useCallback:function(e,t){return Ea().memoizedState=[e,void 0===t?null:t],e},useContext:Eo,useEffect:Ga,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ba(4194308,4,Qa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ba(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ba(4,2,e,t)},useMemo:function(e,t){var n=Ea();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ea();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ts.bind(null,ha,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ea().memoizedState=e},useState:Ra,useDebugValue:$a,useDeferredValue:function(e){return Ea().memoizedState=e},useTransition:function(){var e=Ra(!1),t=e[0];return e=Ka.bind(null,e[1]),Ea().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ha,i=Ea();if(io){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Il)throw Error(o(349));0!=(30&fa)||ja(r,t,n)}i.memoizedState=n;var a={value:n,getSnapshot:t};return i.queue=a,Ga(Ma.bind(null,r,a,e),[e]),r.flags|=2048,Na(9,Fa.bind(null,r,a,n,t),void 0,null),n},useId:function(){var e=Ea(),t=Il.identifierPrefix;if(io){var n=Zi;t=":"+t+"R"+(n=(qi&~(1<<32-at(qi)-1)).toString(32)+n),0<(n=ba++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ya++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ls={readContext:Eo,useCallback:qa,useContext:Eo,useEffect:Va,useImperativeHandle:Ya,useInsertionEffect:Ha,useLayoutEffect:Ja,useMemo:Za,useReducer:Oa,useRef:Wa,useState:function(){return Oa(Da)},useDebugValue:$a,useDeferredValue:function(e){return Xa(_a(),ga.memoizedState,e)},useTransition:function(){return[Oa(Da)[0],_a().memoizedState]},useMutableSource:La,useSyncExternalStore:ka,useId:es,unstable_isNewReconciler:!1},cs={readContext:Eo,useCallback:qa,useContext:Eo,useEffect:Va,useImperativeHandle:Ya,useInsertionEffect:Ha,useLayoutEffect:Ja,useMemo:Za,useReducer:Ia,useRef:Wa,useState:function(){return Ia(Da)},useDebugValue:$a,useDeferredValue:function(e){var t=_a();return null===ga?t.memoizedState=e:Xa(t,ga.memoizedState,e)},useTransition:function(){return[Ia(Da)[0],_a().memoizedState]},useMutableSource:La,useSyncExternalStore:ka,useId:es,unstable_isNewReconciler:!1};function ds(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var i=n}catch(e){i="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:i,digest:null}}function us(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function ms(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var ps="function"==typeof WeakMap?WeakMap:Map;function fs(e,t,n){(n=Fo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hl||(Hl=!0,Jl=r),ms(0,t)},n}function hs(e,t,n){(n=Fo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){ms(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){ms(0,t),"function"!=typeof r&&(null===Ql?Ql=new Set([this]):Ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gs(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new ps;var i=new Set;r.set(t,i)}else void 0===(i=r.get(t))&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=Ec.bind(null,e,t,n),t.then(e,e))}function Cs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function vs(e,t,n,r,i){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Fo(-1,1)).tag=2,Mo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var As=b.ReactCurrentOwner,bs=!1;function ys(e,t,n,r){t.child=null===e?Xo(t,null,n,r):Zo(t,e.child,n,r)}function Ss(e,t,n,r,i){n=n.render;var o=t.ref;return xo(t,i),r=Pa(e,t,n,r,o,i),n=xa(),null===e||bs?(io&&n&&eo(t),t.flags|=1,ys(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Hs(e,t,i))}function ws(e,t,n,r,i){if(null===e){var o=n.type;return"function"!=typeof o||jc(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mc(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ps(e,t,o,r,i))}if(o=e.child,0==(e.lanes&i)){var a=o.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)return Hs(e,t,i)}return t.flags|=1,(e=Fc(o,r)).ref=t.ref,e.return=t,t.child=e}function Ps(e,t,n,r,i){if(null!==e){var o=e.memoizedProps;if(lr(o,r)&&e.ref===t.ref){if(bs=!1,t.pendingProps=r=o,0==(e.lanes&i))return t.lanes=e.lanes,Hs(e,t,i);0!=(131072&e.flags)&&(bs=!0)}}return _s(e,t,n,r,i)}function xs(e,t,n){var r=t.pendingProps,i=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ei(Fl,jl),jl|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ei(Fl,jl),jl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Ei(Fl,jl),jl|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Ei(Fl,jl),jl|=r;return ys(e,t,i,n),t.child}function Es(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function _s(e,t,n,r,i){var o=ki(n)?Ii:Di.current;return o=Li(t,o),xo(t,i),n=Pa(e,t,n,r,o,i),r=xa(),null===e||bs?(io&&r&&eo(t),t.flags|=1,ys(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Hs(e,t,i))}function Ds(e,t,n,r,i){if(ki(n)){var o=!0;Ui(t)}else o=!1;if(xo(t,i),null===t.stateNode)Vs(e,t),Vo(t,n,r),Jo(t,n,r,i),r=!0;else if(null===e){var a=t.stateNode,s=t.memoizedProps;a.props=s;var l=a.context,c=n.contextType;c="object"==typeof c&&null!==c?Eo(c):Li(t,c=ki(n)?Ii:Di.current);var d=n.getDerivedStateFromProps,u="function"==typeof d||"function"==typeof a.getSnapshotBeforeUpdate;u||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==r||l!==c)&&Ho(t,a,r,c),Lo=!1;var m=t.memoizedState;a.state=m,Ro(t,r,a,i),l=t.memoizedState,s!==r||m!==l||Oi.current||Lo?("function"==typeof d&&(Bo(t,n,d,r),l=t.memoizedState),(s=Lo||Go(t,n,s,r,m,l,c))?(u||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.flags|=4194308)):("function"==typeof a.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=s):("function"==typeof a.componentDidMount&&(t.flags|=4194308),r=!1)}else{a=t.stateNode,jo(e,t),s=t.memoizedProps,c=t.type===t.elementType?s:Co(t.type,s),a.props=c,u=t.pendingProps,m=a.context,l="object"==typeof(l=n.contextType)&&null!==l?Eo(l):Li(t,l=ki(n)?Ii:Di.current);var p=n.getDerivedStateFromProps;(d="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==u||m!==l)&&Ho(t,a,r,l),Lo=!1,m=t.memoizedState,a.state=m,Ro(t,r,a,i);var f=t.memoizedState;s!==u||m!==f||Oi.current||Lo?("function"==typeof p&&(Bo(t,n,p,r),f=t.memoizedState),(c=Lo||Go(t,n,c,r,m,f,l)||!1)?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,l),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof a.componentDidUpdate&&(t.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=l,r=c):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),r=!1)}return Os(e,t,n,r,o,i)}function Os(e,t,n,r,i,o){Es(e,t);var a=0!=(128&t.flags);if(!r&&!a)return i&&Ti(t,n,!1),Hs(e,t,o);r=t.stateNode,As.current=t;var s=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=Zo(t,e.child,null,o),t.child=Zo(t,null,s,o)):ys(e,t,s,o),t.memoizedState=r.state,i&&Ti(t,n,!0),t.child}function Is(e){var t=e.stateNode;t.pendingContext?Fi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Fi(0,t.context,!1),ia(e,t.containerInfo)}function Ls(e,t,n,r,i){return fo(),ho(i),t.flags|=256,ys(e,t,n,r),t.child}var ks,js,Fs,Ms,Us={dehydrated:null,treeContext:null,retryLane:0};function Ts(e){return{baseLanes:e,cachePool:null,transitions:null}}function Rs(e,t,n){var r,i=t.pendingProps,a=la.current,s=!1,l=0!=(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),Ei(la,1&a),null===e)return co(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=i.children,e=i.fallback,s?(i=t.mode,s=t.child,l={mode:"hidden",children:l},0==(1&i)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Tc(l,i,0,null),e=Uc(e,i,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=Ts(n),t.memoizedState=Us,e):Ns(t,l));if(null!==(a=e.memoizedState)&&null!==(r=a.dehydrated))return function(e,t,n,r,i,a,s){if(n)return 256&t.flags?(t.flags&=-257,Ws(e,t,s,r=us(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(a=r.fallback,i=t.mode,r=Tc({mode:"visible",children:r.children},i,0,null),(a=Uc(a,i,s,null)).flags|=2,r.return=t,a.return=t,r.sibling=a,t.child=r,0!=(1&t.mode)&&Zo(t,e.child,null,s),t.child.memoizedState=Ts(s),t.memoizedState=Us,a);if(0==(1&t.mode))return Ws(e,t,s,null);if("$!"===i.data){if(r=i.nextSibling&&i.nextSibling.dataset)var l=r.dgst;return r=l,Ws(e,t,s,r=us(a=Error(o(419)),r,void 0))}if(l=0!=(s&e.childLanes),bs||l){if(null!==(r=Il)){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}0!==(i=0!=(i&(r.suspendedLanes|s))?0:i)&&i!==a.retryLane&&(a.retryLane=i,Io(e,i),rc(r,e,i,-1))}return gc(),Ws(e,t,s,r=us(Error(o(421))))}return"$?"===i.data?(t.flags|=128,t.child=e.child,t=Dc.bind(null,e),i._reactRetry=t,null):(e=a.treeContext,ro=ci(i.nextSibling),no=t,io=!0,oo=null,null!==e&&(Qi[Yi++]=qi,Qi[Yi++]=Zi,Qi[Yi++]=$i,qi=e.id,Zi=e.overflow,$i=t),(t=Ns(t,r.children)).flags|=4096,t)}(e,t,l,i,r,a,n);if(s){s=i.fallback,l=t.mode,r=(a=e.child).sibling;var c={mode:"hidden",children:i.children};return 0==(1&l)&&t.child!==a?((i=t.child).childLanes=0,i.pendingProps=c,t.deletions=null):(i=Fc(a,c)).subtreeFlags=14680064&a.subtreeFlags,null!==r?s=Fc(r,s):(s=Uc(s,l,n,null)).flags|=2,s.return=t,i.return=t,i.sibling=s,t.child=i,i=s,s=t.child,l=null===(l=e.child.memoizedState)?Ts(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Us,i}return e=(s=e.child).sibling,i=Fc(s,{mode:"visible",children:i.children}),0==(1&t.mode)&&(i.lanes=n),i.return=t,i.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=i,t.memoizedState=null,i}function Ns(e,t){return(t=Tc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ws(e,t,n,r){return null!==r&&ho(r),Zo(t,e.child,null,n),(e=Ns(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bs(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Po(e.return,t,n)}function zs(e,t,n,r,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function Gs(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(ys(e,t,r.children,n),0!=(2&(r=la.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bs(e,n,t);else if(19===e.tag)Bs(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ei(la,r),0==(1&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===ca(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),zs(t,!1,i,n,o);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===ca(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}zs(t,!0,n,null,o);break;case"together":zs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Vs(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hs(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Tl|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Fc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Js(e,t){if(!io)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Qs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=14680064&i.subtreeFlags,r|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ys(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qs(t),null;case 1:case 17:return ki(t.type)&&ji(),Qs(t),null;case 3:return r=t.stateNode,oa(),xi(Oi),xi(Di),ua(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(mo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(sc(oo),oo=null))),js(e,t),Qs(t),null;case 5:sa(t);var i=ra(na.current);if(n=t.type,null!==e&&null!=t.stateNode)Fs(e,t,n,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return Qs(t),null}if(e=ra(ea.current),mo(t)){r=t.stateNode,n=t.type;var a=t.memoizedProps;switch(r[mi]=t,r[pi]=a,e=0!=(1&t.mode),n){case"dialog":Nr("cancel",r),Nr("close",r);break;case"iframe":case"object":case"embed":Nr("load",r);break;case"video":case"audio":for(i=0;i<Mr.length;i++)Nr(Mr[i],r);break;case"source":Nr("error",r);break;case"img":case"image":case"link":Nr("error",r),Nr("load",r);break;case"details":Nr("toggle",r);break;case"input":q(r,a),Nr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Nr("invalid",r);break;case"textarea":ie(r,a),Nr("invalid",r)}for(var l in ve(n,a),i=null,a)if(a.hasOwnProperty(l)){var c=a[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==a.suppressHydrationWarning&&Xr(r.textContent,c,e),i=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==a.suppressHydrationWarning&&Xr(r.textContent,c,e),i=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Nr("scroll",r)}switch(n){case"input":J(r),K(r,a,!0);break;case"textarea":J(r),ae(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=Kr)}r=i,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[mi]=t,e[pi]=r,ks(e,t,!1,!1),t.stateNode=e;e:{switch(l=Ae(n,r),n){case"dialog":Nr("cancel",e),Nr("close",e),i=r;break;case"iframe":case"object":case"embed":Nr("load",e),i=r;break;case"video":case"audio":for(i=0;i<Mr.length;i++)Nr(Mr[i],e);i=r;break;case"source":Nr("error",e),i=r;break;case"img":case"image":case"link":Nr("error",e),Nr("load",e),i=r;break;case"details":Nr("toggle",e),i=r;break;case"input":q(e,r),i=$(e,r),Nr("invalid",e);break;case"option":default:i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=T({},r,{value:void 0}),Nr("invalid",e);break;case"textarea":ie(e,r),i=re(e,r),Nr("invalid",e)}for(a in ve(n,i),c=i)if(c.hasOwnProperty(a)){var d=c[a];"style"===a?ge(e,d):"dangerouslySetInnerHTML"===a?null!=(d=d?d.__html:void 0)&&ue(e,d):"children"===a?"string"==typeof d?("textarea"!==n||""!==d)&&me(e,d):"number"==typeof d&&me(e,""+d):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(s.hasOwnProperty(a)?null!=d&&"onScroll"===a&&Nr("scroll",e):null!=d&&A(e,a,d,l))}switch(n){case"input":J(e),K(e,r,!1);break;case"textarea":J(e),ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(a=r.value)?ne(e,!!r.multiple,a,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Kr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Qs(t),null;case 6:if(e&&null!=t.stateNode)Ms(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=ra(na.current),ra(ea.current),mo(t)){if(r=t.stateNode,n=t.memoizedProps,r[mi]=t,(a=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Xr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,n,0!=(1&e.mode))}a&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[mi]=t,t.stateNode=r}return Qs(t),null;case 13:if(xi(la),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(io&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))po(),fo(),t.flags|=98560,a=!1;else if(a=mo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!a)throw Error(o(318));if(!(a=null!==(a=t.memoizedState)?a.dehydrated:null))throw Error(o(317));a[mi]=t}else fo(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Qs(t),a=!1}else null!==oo&&(sc(oo),oo=null),a=!0;if(!a)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&la.current)?0===Ml&&(Ml=3):gc())),null!==t.updateQueue&&(t.flags|=4),Qs(t),null);case 4:return oa(),js(e,t),null===e&&zr(t.stateNode.containerInfo),Qs(t),null;case 10:return wo(t.type._context),Qs(t),null;case 19:if(xi(la),null===(a=t.memoizedState))return Qs(t),null;if(r=0!=(128&t.flags),null===(l=a.rendering))if(r)Js(a,!1);else{if(0!==Ml||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ca(e))){for(t.flags|=128,Js(a,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(a=n).flags&=14680066,null===(l=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ei(la,1&la.current|2),t.child}e=e.sibling}null!==a.tail&&Ze()>Gl&&(t.flags|=128,r=!0,Js(a,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ca(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Js(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!io)return Qs(t),null}else 2*Ze()-a.renderingStartTime>Gl&&1073741824!==n&&(t.flags|=128,r=!0,Js(a,!1),t.lanes=4194304);a.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=a.last)?n.sibling=l:t.child=l,a.last=l)}return null!==a.tail?(t=a.tail,a.rendering=t,a.tail=t.sibling,a.renderingStartTime=Ze(),t.sibling=null,n=la.current,Ei(la,r?1&n|2:1&n),t):(Qs(t),null);case 22:case 23:return mc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&jl)&&(Qs(t),6&t.subtreeFlags&&(t.flags|=8192)):Qs(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function $s(e,t){switch(to(t),t.tag){case 1:return ki(t.type)&&ji(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return oa(),xi(Oi),xi(Di),ua(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return sa(t),null;case 13:if(xi(la),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));fo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xi(la),null;case 4:return oa(),null;case 10:return wo(t.type._context),null;case 22:case 23:return mc(),null;default:return null}}ks=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},js=function(){},Fs=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,ra(ea.current);var o,a=null;switch(n){case"input":i=$(e,i),r=$(e,r),a=[];break;case"select":i=T({},i,{value:void 0}),r=T({},r,{value:void 0}),a=[];break;case"textarea":i=re(e,i),r=re(e,r),a=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Kr)}for(d in ve(n,r),n=null,i)if(!r.hasOwnProperty(d)&&i.hasOwnProperty(d)&&null!=i[d])if("style"===d){var l=i[d];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(s.hasOwnProperty(d)?a||(a=[]):(a=a||[]).push(d,null));for(d in r){var c=r[d];if(l=null!=i?i[d]:void 0,r.hasOwnProperty(d)&&c!==l&&(null!=c||null!=l))if("style"===d)if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(n||(n={}),n[o]=c[o])}else n||(a||(a=[]),a.push(d,n)),n=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(a=a||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(a=a||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(s.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Nr("scroll",e),a||l===c||(a=[])):(a=a||[]).push(d,c))}n&&(a=a||[]).push("style",n);var d=a;(t.updateQueue=d)&&(t.flags|=4)}},Ms=function(e,t,n,r){n!==r&&(t.flags|=4)};var qs=!1,Zs=!1,Xs="function"==typeof WeakSet?WeakSet:Set,Ks=null;function el(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){xc(e,t,n)}else n.current=null}function tl(e,t,n){try{n()}catch(n){xc(e,t,n)}}var nl=!1;function rl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var i=r=r.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,void 0!==o&&tl(t,n,o)}i=i.next}while(i!==r)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ol(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function al(e){var t=e.alternate;null!==t&&(e.alternate=null,al(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[mi],delete t[pi],delete t[hi],delete t[gi],delete t[Ci]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Kr));else if(4!==r&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}function dl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(dl(e,t,n),e=e.sibling;null!==e;)dl(e,t,n),e=e.sibling}var ul=null,ml=!1;function pl(e,t,n){for(n=n.child;null!==n;)fl(e,t,n),n=n.sibling}function fl(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(it,n)}catch(e){}switch(n.tag){case 5:Zs||el(n,t);case 6:var r=ul,i=ml;ul=null,pl(e,t,n),ml=i,null!==(ul=r)&&(ml?(e=ul,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):ul.removeChild(n.stateNode));break;case 18:null!==ul&&(ml?(e=ul,n=n.stateNode,8===e.nodeType?li(e.parentNode,n):1===e.nodeType&&li(e,n),zt(e)):li(ul,n.stateNode));break;case 4:r=ul,i=ml,ul=n.stateNode.containerInfo,ml=!0,pl(e,t,n),ul=r,ml=i;break;case 0:case 11:case 14:case 15:if(!Zs&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){i=r=r.next;do{var o=i,a=o.destroy;o=o.tag,void 0!==a&&(0!=(2&o)||0!=(4&o))&&tl(n,t,a),i=i.next}while(i!==r)}pl(e,t,n);break;case 1:if(!Zs&&(el(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){xc(n,t,e)}pl(e,t,n);break;case 21:pl(e,t,n);break;case 22:1&n.mode?(Zs=(r=Zs)||null!==n.memoizedState,pl(e,t,n),Zs=r):pl(e,t,n);break;default:pl(e,t,n)}}function hl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xs),t.forEach((function(t){var r=Oc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function gl(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var i=n[r];try{var a=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,ml=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,ml=!0;break e}l=l.return}if(null===ul)throw Error(o(160));fl(a,s,i),ul=null,ml=!1;var c=i.alternate;null!==c&&(c.return=null),i.return=null}catch(e){xc(i,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)Cl(t,e),t=t.sibling}function Cl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gl(t,e),vl(e),4&r){try{rl(3,e,e.return),il(3,e)}catch(t){xc(e,e.return,t)}try{rl(5,e,e.return)}catch(t){xc(e,e.return,t)}}break;case 1:gl(t,e),vl(e),512&r&&null!==n&&el(n,n.return);break;case 5:if(gl(t,e),vl(e),512&r&&null!==n&&el(n,n.return),32&e.flags){var i=e.stateNode;try{me(i,"")}catch(t){xc(e,e.return,t)}}if(4&r&&null!=(i=e.stateNode)){var a=e.memoizedProps,s=null!==n?n.memoizedProps:a,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===a.type&&null!=a.name&&Z(i,a),Ae(l,s);var d=Ae(l,a);for(s=0;s<c.length;s+=2){var u=c[s],m=c[s+1];"style"===u?ge(i,m):"dangerouslySetInnerHTML"===u?ue(i,m):"children"===u?me(i,m):A(i,u,m,d)}switch(l){case"input":X(i,a);break;case"textarea":oe(i,a);break;case"select":var p=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!a.multiple;var f=a.value;null!=f?ne(i,!!a.multiple,f,!1):p!==!!a.multiple&&(null!=a.defaultValue?ne(i,!!a.multiple,a.defaultValue,!0):ne(i,!!a.multiple,a.multiple?[]:"",!1))}i[pi]=a}catch(t){xc(e,e.return,t)}}break;case 6:if(gl(t,e),vl(e),4&r){if(null===e.stateNode)throw Error(o(162));i=e.stateNode,a=e.memoizedProps;try{i.nodeValue=a}catch(t){xc(e,e.return,t)}}break;case 3:if(gl(t,e),vl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{zt(t.containerInfo)}catch(t){xc(e,e.return,t)}break;case 4:default:gl(t,e),vl(e);break;case 13:gl(t,e),vl(e),8192&(i=e.child).flags&&(a=null!==i.memoizedState,i.stateNode.isHidden=a,!a||null!==i.alternate&&null!==i.alternate.memoizedState||(zl=Ze())),4&r&&hl(e);break;case 22:if(u=null!==n&&null!==n.memoizedState,1&e.mode?(Zs=(d=Zs)||u,gl(t,e),Zs=d):gl(t,e),vl(e),8192&r){if(d=null!==e.memoizedState,(e.stateNode.isHidden=d)&&!u&&0!=(1&e.mode))for(Ks=e,u=e.child;null!==u;){for(m=Ks=u;null!==Ks;){switch(f=(p=Ks).child,p.tag){case 0:case 11:case 14:case 15:rl(4,p,p.return);break;case 1:el(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,n=p.return;try{t=r,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){xc(r,n,e)}}break;case 5:el(p,p.return);break;case 22:if(null!==p.memoizedState){Sl(m);continue}}null!==f?(f.return=p,Ks=f):Sl(m)}u=u.sibling}e:for(u=null,m=e;;){if(5===m.tag){if(null===u){u=m;try{i=m.stateNode,d?"function"==typeof(a=i.style).setProperty?a.setProperty("display","none","important"):a.display="none":(l=m.stateNode,s=null!=(c=m.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=he("display",s))}catch(t){xc(e,e.return,t)}}}else if(6===m.tag){if(null===u)try{m.stateNode.nodeValue=d?"":m.memoizedProps}catch(t){xc(e,e.return,t)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===e)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===e)break e;for(;null===m.sibling;){if(null===m.return||m.return===e)break e;u===m&&(u=null),m=m.return}u===m&&(u=null),m.sibling.return=m.return,m=m.sibling}}break;case 19:gl(t,e),vl(e),4&r&&hl(e);case 21:}}function vl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sl(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var i=r.stateNode;32&r.flags&&(me(i,""),r.flags&=-33),dl(e,ll(e),i);break;case 3:case 4:var a=r.stateNode.containerInfo;cl(e,ll(e),a);break;default:throw Error(o(161))}}catch(t){xc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function Al(e,t,n){Ks=e,bl(e,t,n)}function bl(e,t,n){for(var r=0!=(1&e.mode);null!==Ks;){var i=Ks,o=i.child;if(22===i.tag&&r){var a=null!==i.memoizedState||qs;if(!a){var s=i.alternate,l=null!==s&&null!==s.memoizedState||Zs;s=qs;var c=Zs;if(qs=a,(Zs=l)&&!c)for(Ks=i;null!==Ks;)l=(a=Ks).child,22===a.tag&&null!==a.memoizedState?wl(i):null!==l?(l.return=a,Ks=l):wl(i);for(;null!==o;)Ks=o,bl(o,t,n),o=o.sibling;Ks=i,qs=s,Zs=c}yl(e)}else 0!=(8772&i.subtreeFlags)&&null!==o?(o.return=i,Ks=o):yl(e)}}function yl(e){for(;null!==Ks;){var t=Ks;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Zs||il(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Zs)if(null===n)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:Co(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=t.updateQueue;null!==a&&No(t,a,r);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}No(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var d=t.alternate;if(null!==d){var u=d.memoizedState;if(null!==u){var m=u.dehydrated;null!==m&&zt(m)}}}break;default:throw Error(o(163))}Zs||512&t.flags&&ol(t)}catch(e){xc(t,t.return,e)}}if(t===e){Ks=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ks=n;break}Ks=t.return}}function Sl(e){for(;null!==Ks;){var t=Ks;if(t===e){Ks=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ks=n;break}Ks=t.return}}function wl(e){for(;null!==Ks;){var t=Ks;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{il(4,t)}catch(e){xc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var i=t.return;try{r.componentDidMount()}catch(e){xc(t,i,e)}}var o=t.return;try{ol(t)}catch(e){xc(t,o,e)}break;case 5:var a=t.return;try{ol(t)}catch(e){xc(t,a,e)}}}catch(e){xc(t,t.return,e)}if(t===e){Ks=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Ks=s;break}Ks=t.return}}var Pl,xl=Math.ceil,El=b.ReactCurrentDispatcher,_l=b.ReactCurrentOwner,Dl=b.ReactCurrentBatchConfig,Ol=0,Il=null,Ll=null,kl=0,jl=0,Fl=Pi(0),Ml=0,Ul=null,Tl=0,Rl=0,Nl=0,Wl=null,Bl=null,zl=0,Gl=1/0,Vl=null,Hl=!1,Jl=null,Ql=null,Yl=!1,$l=null,ql=0,Zl=0,Xl=null,Kl=-1,ec=0;function tc(){return 0!=(6&Ol)?Ze():-1!==Kl?Kl:Kl=Ze()}function nc(e){return 0==(1&e.mode)?1:0!=(2&Ol)&&0!==kl?kl&-kl:null!==go.transition?(0===ec&&(ec=ht()),ec):0!==(e=At)?e:e=void 0===(e=window.event)?16:qt(e.type)}function rc(e,t,n,r){if(50<Zl)throw Zl=0,Xl=null,Error(o(185));Ct(e,n,r),0!=(2&Ol)&&e===Il||(e===Il&&(0==(2&Ol)&&(Rl|=n),4===Ml&&lc(e,kl)),ic(e,r),1===n&&0===Ol&&0==(1&t.mode)&&(Gl=Ze()+500,Ni&&zi()))}function ic(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var a=31-at(o),s=1<<a,l=i[a];-1===l?0!=(s&n)&&0==(s&r)||(i[a]=pt(s,t)):l<=t&&(e.expiredLanes|=s),o&=~s}}(e,t);var r=mt(e,e===Il?kl:0);if(0===r)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){Ni=!0,Bi(e)}(cc.bind(null,e)):Bi(cc.bind(null,e)),ai((function(){0==(6&Ol)&&zi()})),n=null;else{switch(bt(r)){case 1:n=Ke;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ic(n,oc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function oc(e,t){if(Kl=-1,ec=0,0!=(6&Ol))throw Error(o(327));var n=e.callbackNode;if(wc()&&e.callbackNode!==n)return null;var r=mt(e,e===Il?kl:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=Cc(e,r);else{t=r;var i=Ol;Ol|=2;var a=hc();for(Il===e&&kl===t||(Vl=null,Gl=Ze()+500,pc(e,t));;)try{Ac();break}catch(t){fc(e,t)}So(),El.current=a,Ol=i,null!==Ll?t=0:(Il=null,kl=0,t=Ml)}if(0!==t){if(2===t&&0!==(i=ft(e))&&(r=i,t=ac(e,i)),1===t)throw n=Ul,pc(e,0),lc(e,r),ic(e,Ze()),n;if(6===t)lc(e,r);else{if(i=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!sr(o(),i))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(i)&&(2===(t=Cc(e,r))&&0!==(a=ft(e))&&(r=a,t=ac(e,a)),1===t))throw n=Ul,pc(e,0),lc(e,r),ic(e,Ze()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:Sc(e,Bl,Vl);break;case 3:if(lc(e,r),(130023424&r)===r&&10<(t=zl+500-Ze())){if(0!==mt(e,0))break;if(((i=e.suspendedLanes)&r)!==r){tc(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=ri(Sc.bind(null,e,Bl,Vl),t);break}Sc(e,Bl,Vl);break;case 4:if(lc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,i=-1;0<r;){var s=31-at(r);a=1<<s,(s=t[s])>i&&(i=s),r&=~a}if(r=i,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xl(r/1960))-r)){e.timeoutHandle=ri(Sc.bind(null,e,Bl,Vl),r);break}Sc(e,Bl,Vl);break;default:throw Error(o(329))}}}return ic(e,Ze()),e.callbackNode===n?oc.bind(null,e):null}function ac(e,t){var n=Wl;return e.current.memoizedState.isDehydrated&&(pc(e,t).flags|=256),2!==(e=Cc(e,t))&&(t=Bl,Bl=n,null!==t&&sc(t)),e}function sc(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function lc(e,t){for(t&=~Nl,t&=~Rl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-at(t),r=1<<n;e[n]=-1,t&=~r}}function cc(e){if(0!=(6&Ol))throw Error(o(327));wc();var t=mt(e,0);if(0==(1&t))return ic(e,Ze()),null;var n=Cc(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=ac(e,r))}if(1===n)throw n=Ul,pc(e,0),lc(e,t),ic(e,Ze()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Sc(e,Bl,Vl),ic(e,Ze()),null}function dc(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&(Gl=Ze()+500,Ni&&zi())}}function uc(e){null!==$l&&0===$l.tag&&0==(6&Ol)&&wc();var t=Ol;Ol|=1;var n=Dl.transition,r=At;try{if(Dl.transition=null,At=1,e)return e()}finally{At=r,Dl.transition=n,0==(6&(Ol=t))&&zi()}}function mc(){jl=Fl.current,xi(Fl)}function pc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ii(n)),null!==Ll)for(n=Ll.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&ji();break;case 3:oa(),xi(Oi),xi(Di),ua();break;case 5:sa(r);break;case 4:oa();break;case 13:case 19:xi(la);break;case 10:wo(r.type._context);break;case 22:case 23:mc()}n=n.return}if(Il=e,Ll=e=Fc(e.current,null),kl=jl=t,Ml=0,Ul=null,Nl=Rl=Tl=0,Bl=Wl=null,null!==_o){for(t=0;t<_o.length;t++)if(null!==(r=(n=_o[t]).interleaved)){n.interleaved=null;var i=r.next,o=n.pending;if(null!==o){var a=o.next;o.next=i,r.next=a}n.pending=r}_o=null}return e}function fc(e,t){for(;;){var n=Ll;try{if(So(),ma.current=as,va){for(var r=ha.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}va=!1}if(fa=0,Ca=ga=ha=null,Aa=!1,ba=0,_l.current=null,null===n||null===n.return){Ml=1,Ul=t,Ll=null;break}e:{var a=e,s=n.return,l=n,c=t;if(t=kl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var d=c,u=l,m=u.tag;if(0==(1&u.mode)&&(0===m||11===m||15===m)){var p=u.alternate;p?(u.updateQueue=p.updateQueue,u.memoizedState=p.memoizedState,u.lanes=p.lanes):(u.updateQueue=null,u.memoizedState=null)}var f=Cs(s);if(null!==f){f.flags&=-257,vs(f,s,l,0,t),1&f.mode&&gs(a,d,t),c=d;var h=(t=f).updateQueue;if(null===h){var g=new Set;g.add(c),t.updateQueue=g}else h.add(c);break e}if(0==(1&t)){gs(a,d,t),gc();break e}c=Error(o(426))}else if(io&&1&l.mode){var C=Cs(s);if(null!==C){0==(65536&C.flags)&&(C.flags|=256),vs(C,s,l,0,t),ho(ds(c,l));break e}}a=c=ds(c,l),4!==Ml&&(Ml=2),null===Wl?Wl=[a]:Wl.push(a),a=s;do{switch(a.tag){case 3:a.flags|=65536,t&=-t,a.lanes|=t,To(a,fs(0,c,t));break e;case 1:l=c;var v=a.type,A=a.stateNode;if(0==(128&a.flags)&&("function"==typeof v.getDerivedStateFromError||null!==A&&"function"==typeof A.componentDidCatch&&(null===Ql||!Ql.has(A)))){a.flags|=65536,t&=-t,a.lanes|=t,To(a,hs(a,l,t));break e}}a=a.return}while(null!==a)}yc(n)}catch(e){t=e,Ll===n&&null!==n&&(Ll=n=n.return);continue}break}}function hc(){var e=El.current;return El.current=as,null===e?as:e}function gc(){0!==Ml&&3!==Ml&&2!==Ml||(Ml=4),null===Il||0==(268435455&Tl)&&0==(268435455&Rl)||lc(Il,kl)}function Cc(e,t){var n=Ol;Ol|=2;var r=hc();for(Il===e&&kl===t||(Vl=null,pc(e,t));;)try{vc();break}catch(t){fc(e,t)}if(So(),Ol=n,El.current=r,null!==Ll)throw Error(o(261));return Il=null,kl=0,Ml}function vc(){for(;null!==Ll;)bc(Ll)}function Ac(){for(;null!==Ll&&!$e();)bc(Ll)}function bc(e){var t=Pl(e.alternate,e,jl);e.memoizedProps=e.pendingProps,null===t?yc(e):Ll=t,_l.current=null}function yc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Ys(n,t,jl)))return void(Ll=n)}else{if(null!==(n=$s(n,t)))return n.flags&=32767,void(Ll=n);if(null===e)return Ml=6,void(Ll=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ll=t);Ll=t=e}while(null!==t);0===Ml&&(Ml=5)}function Sc(e,t,n){var r=At,i=Dl.transition;try{Dl.transition=null,At=1,function(e,t,n,r){do{wc()}while(null!==$l);if(0!=(6&Ol))throw Error(o(327));n=e.finishedWork;var i=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var a=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-at(n),o=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~o}}(e,a),e===Il&&(Ll=Il=null,kl=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Yl||(Yl=!0,Ic(tt,(function(){return wc(),null}))),a=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||a){a=Dl.transition,Dl.transition=null;var s=At;At=1;var l=Ol;Ol|=4,_l.current=null,function(e,t){if(ei=Vt,pr(e=mr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var i=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{n.nodeType,a.nodeType}catch(e){n=null;break e}var s=0,l=-1,c=-1,d=0,u=0,m=e,p=null;t:for(;;){for(var f;m!==n||0!==i&&3!==m.nodeType||(l=s+i),m!==a||0!==r&&3!==m.nodeType||(c=s+r),3===m.nodeType&&(s+=m.nodeValue.length),null!==(f=m.firstChild);)p=m,m=f;for(;;){if(m===e)break t;if(p===n&&++d===i&&(l=s),p===a&&++u===r&&(c=s),null!==(f=m.nextSibling))break;p=(m=p).parentNode}m=f}n=-1===l||-1===c?null:{start:l,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ti={focusedElem:e,selectionRange:n},Vt=!1,Ks=t;null!==Ks;)if(e=(t=Ks).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ks=e;else for(;null!==Ks;){t=Ks;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,C=h.memoizedState,v=t.stateNode,A=v.getSnapshotBeforeUpdate(t.elementType===t.type?g:Co(t.type,g),C);v.__reactInternalSnapshotBeforeUpdate=A}break;case 3:var b=t.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(o(163))}}catch(e){xc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ks=e;break}Ks=t.return}h=nl,nl=!1}(e,n),Cl(n,e),fr(ti),Vt=!!ei,ti=ei=null,e.current=n,Al(n,e,i),qe(),Ol=l,At=s,Dl.transition=a}else e.current=n;if(Yl&&(Yl=!1,$l=e,ql=i),0===(a=e.pendingLanes)&&(Ql=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(it,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),ic(e,Ze()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((i=t[n]).value,{componentStack:i.stack,digest:i.digest});if(Hl)throw Hl=!1,e=Jl,Jl=null,e;0!=(1&ql)&&0!==e.tag&&wc(),0!=(1&(a=e.pendingLanes))?e===Xl?Zl++:(Zl=0,Xl=e):Zl=0,zi()}(e,t,n,r)}finally{Dl.transition=i,At=r}return null}function wc(){if(null!==$l){var e=bt(ql),t=Dl.transition,n=At;try{if(Dl.transition=null,At=16>e?16:e,null===$l)var r=!1;else{if(e=$l,$l=null,ql=0,0!=(6&Ol))throw Error(o(331));var i=Ol;for(Ol|=4,Ks=e.current;null!==Ks;){var a=Ks,s=a.child;if(0!=(16&Ks.flags)){var l=a.deletions;if(null!==l){for(var c=0;c<l.length;c++){var d=l[c];for(Ks=d;null!==Ks;){var u=Ks;switch(u.tag){case 0:case 11:case 15:rl(8,u,a)}var m=u.child;if(null!==m)m.return=u,Ks=m;else for(;null!==Ks;){var p=(u=Ks).sibling,f=u.return;if(al(u),u===d){Ks=null;break}if(null!==p){p.return=f,Ks=p;break}Ks=f}}}var h=a.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var C=g.sibling;g.sibling=null,g=C}while(null!==g)}}Ks=a}}if(0!=(2064&a.subtreeFlags)&&null!==s)s.return=a,Ks=s;else e:for(;null!==Ks;){if(0!=(2048&(a=Ks).flags))switch(a.tag){case 0:case 11:case 15:rl(9,a,a.return)}var v=a.sibling;if(null!==v){v.return=a.return,Ks=v;break e}Ks=a.return}}var A=e.current;for(Ks=A;null!==Ks;){var b=(s=Ks).child;if(0!=(2064&s.subtreeFlags)&&null!==b)b.return=s,Ks=b;else e:for(s=A;null!==Ks;){if(0!=(2048&(l=Ks).flags))try{switch(l.tag){case 0:case 11:case 15:il(9,l)}}catch(e){xc(l,l.return,e)}if(l===s){Ks=null;break e}var y=l.sibling;if(null!==y){y.return=l.return,Ks=y;break e}Ks=l.return}}if(Ol=i,zi(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(it,e)}catch(e){}r=!0}return r}finally{At=n,Dl.transition=t}}return!1}function Pc(e,t,n){e=Mo(e,t=fs(0,t=ds(n,t),1),1),t=tc(),null!==e&&(Ct(e,1,t),ic(e,t))}function xc(e,t,n){if(3===e.tag)Pc(e,e,n);else for(;null!==t;){if(3===t.tag){Pc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ql||!Ql.has(r))){t=Mo(t,e=hs(t,e=ds(n,e),1),1),e=tc(),null!==t&&(Ct(t,1,e),ic(t,e));break}}t=t.return}}function Ec(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=tc(),e.pingedLanes|=e.suspendedLanes&n,Il===e&&(kl&n)===n&&(4===Ml||3===Ml&&(130023424&kl)===kl&&500>Ze()-zl?pc(e,0):Nl|=n),ic(e,t)}function _c(e,t){0===t&&(0==(1&e.mode)?t=1:(t=dt,0==(130023424&(dt<<=1))&&(dt=4194304)));var n=tc();null!==(e=Io(e,t))&&(Ct(e,t,n),ic(e,n))}function Dc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),_c(e,n)}function Oc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;null!==i&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),_c(e,n)}function Ic(e,t){return Qe(e,t)}function Lc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function kc(e,t,n,r){return new Lc(e,t,n,r)}function jc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fc(e,t){var n=e.alternate;return null===n?((n=kc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mc(e,t,n,r,i,a){var s=2;if(r=e,"function"==typeof e)jc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case w:return Uc(n.children,i,a,t);case P:s=8,i|=8;break;case x:return(e=kc(12,n,t,2|i)).elementType=x,e.lanes=a,e;case O:return(e=kc(13,n,t,i)).elementType=O,e.lanes=a,e;case I:return(e=kc(19,n,t,i)).elementType=I,e.lanes=a,e;case j:return Tc(n,i,a,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:s=10;break e;case _:s=9;break e;case D:s=11;break e;case L:s=14;break e;case k:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=kc(s,n,t,i)).elementType=e,t.type=r,t.lanes=a,t}function Uc(e,t,n,r){return(e=kc(7,e,r,t)).lanes=n,e}function Tc(e,t,n,r){return(e=kc(22,e,r,t)).elementType=j,e.lanes=n,e.stateNode={isHidden:!1},e}function Rc(e,t,n){return(e=kc(6,e,null,t)).lanes=n,e}function Nc(e,t,n){return(t=kc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Wc(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Bc(e,t,n,r,i,o,a,s,l){return e=new Wc(e,t,n,s,l),1===t?(t=1,!0===o&&(t|=8)):t=0,o=kc(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},ko(o),e}function zc(e){if(!e)return _i;e:{if(ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(ki(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(ki(n))return Mi(e,n,t)}return t}function Gc(e,t,n,r,i,o,a,s,l){return(e=Bc(n,r,!0,e,0,o,0,s,l)).context=zc(null),n=e.current,(o=Fo(r=tc(),i=nc(n))).callback=null!=t?t:null,Mo(n,o,i),e.current.lanes=i,Ct(e,i,r),ic(e,r),e}function Vc(e,t,n,r){var i=t.current,o=tc(),a=nc(i);return n=zc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Fo(o,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Mo(i,t,a))&&(rc(e,i,a,o),Uo(e,i,a)),a}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Jc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Qc(e,t){Jc(e,t),(e=e.alternate)&&Jc(e,t)}Pl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Oi.current)bs=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return bs=!1,function(e,t,n){switch(t.tag){case 3:Is(t),fo();break;case 5:aa(t);break;case 1:ki(t.type)&&Ui(t);break;case 4:ia(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;Ei(vo,r._currentValue),r._currentValue=i;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ei(la,1&la.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Rs(e,t,n):(Ei(la,1&la.current),null!==(e=Hs(e,t,n))?e.sibling:null);Ei(la,1&la.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Gs(e,t,n);t.flags|=128}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),Ei(la,la.current),r)break;return null;case 22:case 23:return t.lanes=0,xs(e,t,n)}return Hs(e,t,n)}(e,t,n);bs=0!=(131072&e.flags)}else bs=!1,io&&0!=(1048576&t.flags)&&Ki(t,Ji,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Vs(e,t),e=t.pendingProps;var i=Li(t,Di.current);xo(t,n),i=Pa(null,t,r,e,i,n);var a=xa();return t.flags|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,ki(r)?(a=!0,Ui(t)):a=!1,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,ko(t),i.updater=zo,t.stateNode=i,i._reactInternals=t,Jo(t,r,e,n),t=Os(null,t,r,!0,a,n)):(t.tag=0,io&&a&&eo(t),ys(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Vs(e,t),e=t.pendingProps,r=(i=r._init)(r._payload),t.type=r,i=t.tag=function(e){if("function"==typeof e)return jc(e)?1:0;if(null!=e){if((e=e.$$typeof)===D)return 11;if(e===L)return 14}return 2}(r),e=Co(r,e),i){case 0:t=_s(null,t,r,e,n);break e;case 1:t=Ds(null,t,r,e,n);break e;case 11:t=Ss(null,t,r,e,n);break e;case 14:t=ws(null,t,r,Co(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,_s(e,t,r,i=t.elementType===r?i:Co(r,i),n);case 1:return r=t.type,i=t.pendingProps,Ds(e,t,r,i=t.elementType===r?i:Co(r,i),n);case 3:e:{if(Is(t),null===e)throw Error(o(387));r=t.pendingProps,i=(a=t.memoizedState).element,jo(e,t),Ro(t,r,null,n);var s=t.memoizedState;if(r=s.element,a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=a,t.memoizedState=a,256&t.flags){t=Ls(e,t,r,n,i=ds(Error(o(423)),t));break e}if(r!==i){t=Ls(e,t,r,n,i=ds(Error(o(424)),t));break e}for(ro=ci(t.stateNode.containerInfo.firstChild),no=t,io=!0,oo=null,n=Xo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fo(),r===i){t=Hs(e,t,n);break e}ys(e,t,r,n)}t=t.child}return t;case 5:return aa(t),null===e&&co(t),r=t.type,i=t.pendingProps,a=null!==e?e.memoizedProps:null,s=i.children,ni(r,i)?s=null:null!==a&&ni(r,a)&&(t.flags|=32),Es(e,t),ys(e,t,s,n),t.child;case 6:return null===e&&co(t),null;case 13:return Rs(e,t,n);case 4:return ia(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Zo(t,null,r,n):ys(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Ss(e,t,r,i=t.elementType===r?i:Co(r,i),n);case 7:return ys(e,t,t.pendingProps,n),t.child;case 8:case 12:return ys(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,a=t.memoizedProps,s=i.value,Ei(vo,r._currentValue),r._currentValue=s,null!==a)if(sr(a.value,s)){if(a.children===i.children&&!Oi.current){t=Hs(e,t,n);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){var l=a.dependencies;if(null!==l){s=a.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===a.tag){(c=Fo(-1,n&-n)).tag=2;var d=a.updateQueue;if(null!==d){var u=(d=d.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),d.pending=c}}a.lanes|=n,null!==(c=a.alternate)&&(c.lanes|=n),Po(a.return,n,t),l.lanes|=n;break}c=c.next}}else if(10===a.tag)s=a.type===t.type?null:a.child;else if(18===a.tag){if(null===(s=a.return))throw Error(o(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),Po(s,n,t),s=a.sibling}else s=a.child;if(null!==s)s.return=a;else for(s=a;null!==s;){if(s===t){s=null;break}if(null!==(a=s.sibling)){a.return=s.return,s=a;break}s=s.return}a=s}ys(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,xo(t,n),r=r(i=Eo(i)),t.flags|=1,ys(e,t,r,n),t.child;case 14:return i=Co(r=t.type,t.pendingProps),ws(e,t,r,i=Co(r.type,i),n);case 15:return Ps(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Co(r,i),Vs(e,t),t.tag=1,ki(r)?(e=!0,Ui(t)):e=!1,xo(t,n),Vo(t,r,i),Jo(t,r,i,n),Os(null,t,r,!0,e,n);case 19:return Gs(e,t,n);case 22:return xs(e,t,n)}throw Error(o(156,t.tag))};var Yc="function"==typeof reportError?reportError:function(e){console.error(e)};function $c(e){this._internalRoot=e}function qc(e){this._internalRoot=e}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Kc(){}function ed(e,t,n,r,i){var o=n._reactRootContainer;if(o){var a=o;if("function"==typeof i){var s=i;i=function(){var e=Hc(a);s.call(e)}}Vc(t,a,e,i)}else a=function(e,t,n,r,i){if(i){if("function"==typeof r){var o=r;r=function(){var e=Hc(a);o.call(e)}}var a=Gc(t,r,e,0,null,!1,0,"",Kc);return e._reactRootContainer=a,e[fi]=a.current,zr(8===e.nodeType?e.parentNode:e),uc(),a}for(;i=e.lastChild;)e.removeChild(i);if("function"==typeof r){var s=r;r=function(){var e=Hc(l);s.call(e)}}var l=Bc(e,0,!1,null,0,!1,0,"",Kc);return e._reactRootContainer=l,e[fi]=l.current,zr(8===e.nodeType?e.parentNode:e),uc((function(){Vc(t,l,n,r)})),l}(n,t,e,i,r);return Hc(a)}qc.prototype.render=$c.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Vc(e,t,null,null)},qc.prototype.unmount=$c.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){Vc(null,e,null,null)})),t[fi]=null}},qc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Pt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<jt.length&&0!==t&&t<jt[n].priority;n++);jt.splice(n,0,e),0===n&&Tt(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ut(t.pendingLanes);0!==n&&(vt(t,1|n),ic(t,Ze()),0==(6&Ol)&&(Gl=Ze()+500,zi()))}break;case 13:uc((function(){var t=Io(e,1);if(null!==t){var n=tc();rc(t,e,1,n)}})),Qc(e,1)}},St=function(e){if(13===e.tag){var t=Io(e,134217728);null!==t&&rc(t,e,134217728,tc()),Qc(e,134217728)}},wt=function(e){if(13===e.tag){var t=nc(e),n=Io(e,t);null!==n&&rc(n,e,t,tc()),Qc(e,t)}},Pt=function(){return At},xt=function(e,t){var n=At;try{return At=e,t()}finally{At=n}},Se=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=yi(r);if(!i)throw Error(o(90));Q(r),X(r,i)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},De=dc,Oe=uc;var td={usingClientEntryPoint:!1,Events:[Ai,bi,yi,Ee,_e,dc]},nd={findFiberByHostInstance:vi,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rd={bundleType:nd.bundleType,version:nd.version,rendererPackageName:nd.rendererPackageName,rendererConfig:nd.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:nd.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var id=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!id.isDisabled&&id.supportsFiber)try{it=id.inject(rd),ot=id}catch(de){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=td,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zc(t))throw Error(o(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Zc(e))throw Error(o(299));var n=!1,r="",i=Yc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(i=t.onRecoverableError)),t=Bc(e,1,!1,null,0,n,0,r,i),e[fi]=t.current,zr(8===e.nodeType?e.parentNode:e),new $c(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(o(200));return ed(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zc(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,i=!1,a="",s=Yc;if(null!=n&&(!0===n.unstable_strictMode&&(i=!0),void 0!==n.identifierPrefix&&(a=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Gc(t,null,e,1,null!=n?n:null,i,0,a,s),e[fi]=t.current,zr(e),r)for(e=0;e<r.length;e++)i=(i=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,i]:t.mutableSourceEagerHydrationData.push(n,i);return new qc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(o(200));return ed(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(o(40));return!!e._reactRootContainer&&(uc((function(){ed(null,null,e,!1,(function(){e._reactRootContainer=null,e[fi]=null}))})),!0)},t.unstable_batchedUpdates=dc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xc(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ed(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.s=r.createRoot,r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},251:(e,t,n)=>{"use strict";var r=n(294),i=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,o={},c=null,d=null;for(r in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(d=t.ref),t)a.call(t,r)&&!l.hasOwnProperty(r)&&(o[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===o[r]&&(o[r]=t[r]);return{$$typeof:i,type:e,key:c,ref:d,props:o,_owner:s.current}}t.Fragment=o,t.jsx=c,t.jsxs=c},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),m=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function C(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function v(){}function A(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}C.prototype.isReactComponent={},C.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},C.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=C.prototype;var b=A.prototype=new v;b.constructor=A,h(b,C.prototype),b.isPureReactComponent=!0;var y=Array.isArray,S=Object.prototype.hasOwnProperty,w={current:null},P={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var i,o={},a=null,s=null;if(null!=t)for(i in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,i)&&!P.hasOwnProperty(i)&&(o[i]=t[i]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];o.children=c}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===o[i]&&(o[i]=l[i]);return{$$typeof:n,type:e,key:a,ref:s,props:o,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var _=/\/+/g;function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,i,o,a){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return a=a(l=e),e=""===o?"."+D(l,0):o,y(a)?(i="",null!=e&&(i=e.replace(_,"$&/")+"/"),O(a,t,i,"",(function(e){return e}))):null!=a&&(E(a)&&(a=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,i+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(_,"$&/")+"/")+e)),t.push(a)),1;if(l=0,o=""===o?".":o+":",y(e))for(var c=0;c<e.length;c++){var d=o+D(s=e[c],c);l+=O(s,t,i,d,a)}else if(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof d)for(e=d.call(e),c=0;!(s=e.next()).done;)l+=O(s=s.value,t,i,d=o+D(s,c++),a);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function I(e,t,n){if(null==e)return e;var r=[],i=0;return O(e,r,"","",(function(e){return t.call(n,e,i++)})),r}function L(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var k={current:null},j={transition:null},F={ReactCurrentDispatcher:k,ReactCurrentBatchConfig:j,ReactCurrentOwner:w};t.Children={map:I,forEach:function(e,t,n){I(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return I(e,(function(){t++})),t},toArray:function(e){return I(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=C,t.Fragment=i,t.Profiler=a,t.PureComponent=A,t.StrictMode=o,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=h({},e.props),o=e.key,a=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,s=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)S.call(t,c)&&!P.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=r;else if(1<c){l=Array(c);for(var d=0;d<c;d++)l[d]=arguments[d+2];i.children=l}return{$$typeof:n,type:e.type,key:o,ref:a,props:i,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:m,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=j.transition;j.transition={};try{e()}finally{j.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return k.current.useCallback(e,t)},t.useContext=function(e){return k.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return k.current.useDeferredValue(e)},t.useEffect=function(e,t){return k.current.useEffect(e,t)},t.useId=function(){return k.current.useId()},t.useImperativeHandle=function(e,t,n){return k.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return k.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return k.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return k.current.useMemo(e,t)},t.useReducer=function(e,t,n){return k.current.useReducer(e,t,n)},t.useRef=function(e){return k.current.useRef(e)},t.useState=function(e){return k.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return k.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return k.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},893:(e,t,n)=>{"use strict";e.exports=n(251)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,i=e[r];if(!(0<o(i,t)))break e;e[r]=t,e[n]=i,n=r}}function r(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length,a=i>>>1;r<a;){var s=2*(r+1)-1,l=e[s],c=s+1,d=e[c];if(0>o(l,n))c<i&&0>o(d,l)?(e[r]=d,e[c]=n,r=c):(e[r]=l,e[s]=n,r=s);else{if(!(c<i&&0>o(d,n)))break e;e[r]=d,e[c]=n,r=c}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var c=[],d=[],u=1,m=null,p=3,f=!1,h=!1,g=!1,C="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,A="undefined"!=typeof setImmediate?setImmediate:null;function b(e){for(var t=r(d);null!==t;){if(null===t.callback)i(d);else{if(!(t.startTime<=e))break;i(d),t.sortIndex=t.expirationTime,n(c,t)}t=r(d)}}function y(e){if(g=!1,b(e),!h)if(null!==r(c))h=!0,j(S);else{var t=r(d);null!==t&&F(y,t.startTime-e)}}function S(e,n){h=!1,g&&(g=!1,v(E),E=-1),f=!0;var o=p;try{for(b(n),m=r(c);null!==m&&(!(m.expirationTime>n)||e&&!O());){var a=m.callback;if("function"==typeof a){m.callback=null,p=m.priorityLevel;var s=a(m.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?m.callback=s:m===r(c)&&i(c),b(n)}else i(c);m=r(c)}if(null!==m)var l=!0;else{var u=r(d);null!==u&&F(y,u.startTime-n),l=!1}return l}finally{m=null,p=o,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,P=!1,x=null,E=-1,_=5,D=-1;function O(){return!(t.unstable_now()-D<_)}function I(){if(null!==x){var e=t.unstable_now();D=e;var n=!0;try{n=x(!0,e)}finally{n?w():(P=!1,x=null)}}else P=!1}if("function"==typeof A)w=function(){A(I)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,k=L.port2;L.port1.onmessage=I,w=function(){k.postMessage(null)}}else w=function(){C(I,0)};function j(e){x=e,P||(P=!0,w())}function F(e,n){E=C((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||f||(h=!0,j(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,i,o){var a=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?a+o:a,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:u++,callback:i,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>a?(e.sortIndex=o,n(d,e),null===r(c)&&e===r(d)&&(g?(v(E),E=-1):g=!0,F(y,o-a))):(e.sortIndex=s,n(c,e),h||f||(h=!0,j(S))),e},t.unstable_shouldYield=O,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},774:e=>{e.exports=function(e,t,n,r){var i=n?n.call(r,e,t):void 0;if(void 0!==i)return!!i;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var o=Object.keys(e),a=Object.keys(t);if(o.length!==a.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(t),l=0;l<o.length;l++){var c=o[l];if(!s(c))return!1;var d=e[c],u=t[c];if(!1===(i=n?n.call(r,d,u,c):void 0)||void 0===i&&d!==u)return!1}return!0}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},a=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],d=o[c]||0,u="".concat(c," ").concat(d);o[c]=d+1;var m=n(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var f=i(p,r);r.byIndex=s,t.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var s=n(o[a]);t[s].references--}for(var l=r(e,i),c=0;c<o.length;c++){var d=n(o[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}o=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},954:e=>{"use strict";e.exports="data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA"}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={id:e,exports:{}};return n[e](o,o.exports,i),o.exports}i.m=n,i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var o=Object.create(null);i.r(o);var a={};e=e||[null,t({}),t([]),t(t)];for(var s=2&r&&n;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((e=>a[e]=()=>n[e]));return a.default=()=>n,i.d(o,a),o},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.b=document.baseURI||self.location.href,i.nc=void 0,(()=>{"use strict";var e,t=i(294),n=i.t(t,2),r=i(745);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));const a="popstate";function s(e,t){if(!1===e||null==e)throw new Error(t)}function l(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function c(e,t){return{usr:e.state,key:e.key,idx:t}}function d(e,t,n,r){return void 0===n&&(n=null),o({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?m(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function u(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(t+="#"===r.charAt(0)?r:"#"+r),t}function m(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}var p;function f(e,t,n){void 0===n&&(n="/");let r=D(("string"==typeof t?m(t):t).pathname||"/",n);if(null==r)return null;let i=h(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(i);let o=null;for(let e=0;null==o&&e<i.length;++e)o=x(i[e],_(r));return o}function h(e,t,n,r){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r="");let i=(e,i,o)=>{let a={relativePath:void 0===o?e.path||"":o,caseSensitive:!0===e.caseSensitive,childrenIndex:i,route:e};a.relativePath.startsWith("/")&&(s(a.relativePath.startsWith(r),'Absolute route path "'+a.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),a.relativePath=a.relativePath.slice(r.length));let l=I([r,a.relativePath]),c=n.concat(a);e.children&&e.children.length>0&&(s(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+l+'".'),h(e.children,t,c,l)),(null!=e.path||e.index)&&t.push({path:l,score:P(l,e.index),routesMeta:c})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let n of g(e.path))i(e,t,n);else i(e,t)})),t}function g(e){let t=e.split("/");if(0===t.length)return[];let[n,...r]=t,i=n.endsWith("?"),o=n.replace(/\?$/,"");if(0===r.length)return i?[o,""]:[o];let a=g(r.join("/")),s=[];return s.push(...a.map((e=>""===e?o:[o,e].join("/")))),i&&s.push(...a),s.map((t=>e.startsWith("/")&&""===t?"/":t))}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(p||(p={})),new Set(["lazy","caseSensitive","path","id","index","children"]);const C=/^:\w+$/,v=3,A=2,b=1,y=10,S=-2,w=e=>"*"===e;function P(e,t){let n=e.split("/"),r=n.length;return n.some(w)&&(r+=S),t&&(r+=A),n.filter((e=>!w(e))).reduce(((e,t)=>e+(C.test(t)?v:""===t?b:y)),r)}function x(e,t){let{routesMeta:n}=e,r={},i="/",o=[];for(let e=0;e<n.length;++e){let a=n[e],s=e===n.length-1,l="/"===i?t:t.slice(i.length)||"/",c=E({path:a.relativePath,caseSensitive:a.caseSensitive,end:s},l);if(!c)return null;Object.assign(r,c.params);let d=a.route;o.push({params:r,pathname:I([i,c.pathname]),pathnameBase:L(I([i,c.pathnameBase])),route:d}),"/"!==c.pathnameBase&&(i=I([i,c.pathnameBase]))}return o}function E(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0),l("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:(\w+)(\?)?/g,((e,t,n)=>(r.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));return e.endsWith("*")?(r.push({paramName:"*"}),i+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?i+="\\/*$":""!==e&&"/"!==e&&(i+="(?:(?=\\/|$))"),[new RegExp(i,t?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),i=t.match(n);if(!i)return null;let o=i[0],a=o.replace(/(.)\/+$/,"$1"),s=i.slice(1);return{params:r.reduce(((e,t,n)=>{let{paramName:r,isOptional:i}=t;if("*"===r){let e=s[n]||"";a=o.slice(0,o.length-e.length).replace(/(.)\/+$/,"$1")}const c=s[n];return e[r]=i&&!c?void 0:function(e,t){try{return decodeURIComponent(e)}catch(n){return l(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(c||"",r),e}),{}),pathname:o,pathnameBase:a,pattern:e}}function _(e){try{return decodeURI(e)}catch(t){return l(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function D(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&"/"!==r?null:e.slice(n)||"/"}function O(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}const I=e=>e.join("/").replace(/\/\/+/g,"/"),L=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),k=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",j=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;const F=["post","put","patch","delete"],M=(new Set(F),["get",...F]);function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},U.apply(this,arguments)}new Set(M),new Set([301,302,303,307,308]),new Set([307,308]),Symbol("deferred");const T=t.createContext(null),R=t.createContext(null),N=t.createContext(null),W=t.createContext(null),B=t.createContext({outlet:null,matches:[],isDataRoute:!1}),z=t.createContext(null);function G(){return null!=t.useContext(W)}function V(){return G()||s(!1),t.useContext(W).location}function H(e){t.useContext(N).static||t.useLayoutEffect(e)}function J(){let{isDataRoute:e}=t.useContext(B);return e?function(){let{router:e}=function(e){let n=t.useContext(T);return n||s(!1),n}(X.UseNavigateStable),n=ee(K.UseNavigateStable),r=t.useRef(!1);H((()=>{r.current=!0}));let i=t.useCallback((function(t,i){void 0===i&&(i={}),r.current&&("number"==typeof t?e.navigate(t):e.navigate(t,U({fromRouteId:n},i)))}),[e,n]);return i}():function(){G()||s(!1);let e=t.useContext(T),{basename:n,navigator:r}=t.useContext(N),{matches:i}=t.useContext(B),{pathname:a}=V(),l=JSON.stringify(function(e){return function(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}(e).map(((t,n)=>n===e.length-1?t.pathname:t.pathnameBase))}(i)),c=t.useRef(!1);H((()=>{c.current=!0}));let d=t.useCallback((function(t,i){if(void 0===i&&(i={}),!c.current)return;if("number"==typeof t)return void r.go(t);let d=function(e,t,n,r){let i;void 0===r&&(r=!1),"string"==typeof e?i=m(e):(i=o({},e),s(!i.pathname||!i.pathname.includes("?"),O("?","pathname","search",i)),s(!i.pathname||!i.pathname.includes("#"),O("#","pathname","hash",i)),s(!i.search||!i.search.includes("#"),O("#","search","hash",i)));let a,l=""===e||""===i.pathname,c=l?"/":i.pathname;if(null==c)a=n;else if(r){let e=t[t.length-1].replace(/^\//,"").split("/");if(c.startsWith("..")){let t=c.split("/");for(;".."===t[0];)t.shift(),e.pop();i.pathname=t.join("/")}a="/"+e.join("/")}else{let e=t.length-1;if(c.startsWith("..")){let t=c.split("/");for(;".."===t[0];)t.shift(),e-=1;i.pathname=t.join("/")}a=e>=0?t[e]:"/"}let d=function(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:i=""}="string"==typeof e?m(e):e,o=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:o,search:k(r),hash:j(i)}}(i,a),u=c&&"/"!==c&&c.endsWith("/"),p=(l||"."===c)&&n.endsWith("/");return d.pathname.endsWith("/")||!u&&!p||(d.pathname+="/"),d}(t,JSON.parse(l),a,"path"===i.relative);null==e&&"/"!==n&&(d.pathname="/"===d.pathname?n:I([n,d.pathname])),(i.replace?r.replace:r.push)(d,i.state,i)}),[n,r,l,a,e]);return d}()}function Q(n,r,i){G()||s(!1);let{navigator:o}=t.useContext(N),{matches:a}=t.useContext(B),l=a[a.length-1],c=l?l.params:{},d=(l&&l.pathname,l?l.pathnameBase:"/");l&&l.route;let u,p=V();if(r){var h;let e="string"==typeof r?m(r):r;"/"===d||(null==(h=e.pathname)?void 0:h.startsWith(d))||s(!1),u=e}else u=p;let g=u.pathname||"/",C=f(n,{pathname:"/"===d?g:g.slice(d.length)||"/"}),v=function(e,n,r){var i;if(void 0===n&&(n=[]),void 0===r&&(r=null),null==e){var o;if(null==(o=r)||!o.errors)return null;e=r.matches}let a=e,l=null==(i=r)?void 0:i.errors;if(null!=l){let e=a.findIndex((e=>e.route.id&&(null==l?void 0:l[e.route.id])));e>=0||s(!1),a=a.slice(0,Math.min(a.length,e+1))}return a.reduceRight(((e,i,o)=>{let s=i.route.id?null==l?void 0:l[i.route.id]:null,c=null;r&&(c=i.route.errorElement||$);let d=n.concat(a.slice(0,o+1)),u=()=>{let n;return n=s?c:i.route.Component?t.createElement(i.route.Component,null):i.route.element?i.route.element:e,t.createElement(Z,{match:i,routeContext:{outlet:e,matches:d,isDataRoute:null!=r},children:n})};return r&&(i.route.ErrorBoundary||i.route.errorElement||0===o)?t.createElement(q,{location:r.location,revalidation:r.revalidation,component:c,error:s,children:u(),routeContext:{outlet:null,matches:d,isDataRoute:!0}}):u()}),null)}(C&&C.map((e=>Object.assign({},e,{params:Object.assign({},c,e.params),pathname:I([d,o.encodeLocation?o.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?d:I([d,o.encodeLocation?o.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),a,i);return r&&v?t.createElement(W.Provider,{value:{location:U({pathname:"/",search:"",hash:"",state:null,key:"default"},u),navigationType:e.Pop}},v):v}function Y(){let e=function(){var e;let n=t.useContext(z),r=function(e){let n=t.useContext(R);return n||s(!1),n}(K.UseRouteError),i=ee(K.UseRouteError);return n||(null==(e=r.errors)?void 0:e[i])}(),n=function(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),r=e instanceof Error?e.stack:null,i={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return t.createElement(t.Fragment,null,t.createElement("h2",null,"Unexpected Application Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},n),r?t.createElement("pre",{style:i},r):null,null)}const $=t.createElement(Y,null);class q extends t.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?t.createElement(B.Provider,{value:this.props.routeContext},t.createElement(z.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Z(e){let{routeContext:n,match:r,children:i}=e,o=t.useContext(T);return o&&o.static&&o.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(o.staticContext._deepestRenderedBoundaryId=r.route.id),t.createElement(B.Provider,{value:n},i)}var X=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(X||{}),K=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(K||{});function ee(e){let n=function(e){let n=t.useContext(B);return n||s(!1),n}(),r=n.matches[n.matches.length-1];return r.route.id||s(!1),r.route.id}function te(e){s(!1)}function ne(n){let{basename:r="/",children:i=null,location:o,navigationType:a=e.Pop,navigator:l,static:c=!1}=n;G()&&s(!1);let d=r.replace(/^\/*/,"/"),u=t.useMemo((()=>({basename:d,navigator:l,static:c})),[d,l,c]);"string"==typeof o&&(o=m(o));let{pathname:p="/",search:f="",hash:h="",state:g=null,key:C="default"}=o,v=t.useMemo((()=>{let e=D(p,d);return null==e?null:{location:{pathname:e,search:f,hash:h,state:g,key:C},navigationType:a}}),[d,p,f,h,g,C,a]);return null==v?null:t.createElement(N.Provider,{value:u},t.createElement(W.Provider,{children:i,value:v}))}function re(e){let{children:t,location:n}=e;return Q(ie(t),n)}function ie(e,n){void 0===n&&(n=[]);let r=[];return t.Children.forEach(e,((e,i)=>{if(!t.isValidElement(e))return;let o=[...n,i];if(e.type===t.Fragment)return void r.push.apply(r,ie(e.props.children,o));e.type!==te&&s(!1),e.props.index&&e.props.children&&s(!1);let a={id:e.props.id||o.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(a.children=ie(e.props.children,o)),r.push(a)})),r}n.startTransition,new Promise((()=>{})),t.Component;var oe=function(){return oe=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},oe.apply(this,arguments)};function ae(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var se=i(774),le=i.n(se),ce="-ms-",de="-moz-",ue="-webkit-",me="comm",pe="rule",fe="decl",he="@import",ge="@keyframes",Ce="@layer",ve=Math.abs,Ae=String.fromCharCode,be=Object.assign;function ye(e){return e.trim()}function Se(e,t){return(e=t.exec(e))?e[0]:e}function we(e,t,n){return e.replace(t,n)}function Pe(e,t){return e.indexOf(t)}function xe(e,t){return 0|e.charCodeAt(t)}function Ee(e,t,n){return e.slice(t,n)}function _e(e){return e.length}function De(e){return e.length}function Oe(e,t){return t.push(e),e}function Ie(e,t){return e.filter((function(e){return!Se(e,t)}))}var Le=1,ke=1,je=0,Fe=0,Me=0,Ue="";function Te(e,t,n,r,i,o,a,s){return{value:e,root:t,parent:n,type:r,props:i,children:o,line:Le,column:ke,length:a,return:"",siblings:s}}function Re(e,t){return be(Te("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},t)}function Ne(e){for(;e.root;)e=Re(e.root,{children:[e]});Oe(e,e.siblings)}function We(){return Me=Fe>0?xe(Ue,--Fe):0,ke--,10===Me&&(ke=1,Le--),Me}function Be(){return Me=Fe<je?xe(Ue,Fe++):0,ke++,10===Me&&(ke=1,Le++),Me}function ze(){return xe(Ue,Fe)}function Ge(){return Fe}function Ve(e,t){return Ee(Ue,e,t)}function He(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function Je(e){return ye(Ve(Fe-1,$e(91===e?e+2:40===e?e+1:e)))}function Qe(e){for(;(Me=ze())&&Me<33;)Be();return He(e)>2||He(Me)>3?"":" "}function Ye(e,t){for(;--t&&Be()&&!(Me<48||Me>102||Me>57&&Me<65||Me>70&&Me<97););return Ve(e,Ge()+(t<6&&32==ze()&&32==Be()))}function $e(e){for(;Be();)switch(Me){case e:return Fe;case 34:case 39:34!==e&&39!==e&&$e(Me);break;case 40:41===e&&$e(e);break;case 92:Be()}return Fe}function qe(e,t){for(;Be()&&e+Me!==57&&(e+Me!==84||47!==ze()););return"/*"+Ve(t,Fe-1)+"*"+Ae(47===e?e:Be())}function Ze(e){for(;!He(ze());)Be();return Ve(e,Fe)}function Xe(e,t){for(var n="",r=0;r<e.length;r++)n+=t(e[r],r,e,t)||"";return n}function Ke(e,t,n,r){switch(e.type){case Ce:if(e.children.length)break;case he:case fe:return e.return=e.return||e.value;case me:return"";case ge:return e.return=e.value+"{"+Xe(e.children,r)+"}";case pe:if(!_e(e.value=e.props.join(",")))return""}return _e(n=Xe(e.children,r))?e.return=e.value+"{"+n+"}":""}function et(e,t,n){switch(function(e,t){return 45^xe(e,0)?(((t<<2^xe(e,0))<<2^xe(e,1))<<2^xe(e,2))<<2^xe(e,3):0}(e,t)){case 5103:return ue+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return ue+e+e;case 4789:return de+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return ue+e+de+e+ce+e+e;case 5936:switch(xe(e,t+11)){case 114:return ue+e+ce+we(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return ue+e+ce+we(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return ue+e+ce+we(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return ue+e+ce+e+e;case 6165:return ue+e+ce+"flex-"+e+e;case 5187:return ue+e+we(e,/(\w+).+(:[^]+)/,ue+"box-$1$2"+ce+"flex-$1$2")+e;case 5443:return ue+e+ce+"flex-item-"+we(e,/flex-|-self/g,"")+(Se(e,/flex-|baseline/)?"":ce+"grid-row-"+we(e,/flex-|-self/g,""))+e;case 4675:return ue+e+ce+"flex-line-pack"+we(e,/align-content|flex-|-self/g,"")+e;case 5548:return ue+e+ce+we(e,"shrink","negative")+e;case 5292:return ue+e+ce+we(e,"basis","preferred-size")+e;case 6060:return ue+"box-"+we(e,"-grow","")+ue+e+ce+we(e,"grow","positive")+e;case 4554:return ue+we(e,/([^-])(transform)/g,"$1"+ue+"$2")+e;case 6187:return we(we(we(e,/(zoom-|grab)/,ue+"$1"),/(image-set)/,ue+"$1"),e,"")+e;case 5495:case 3959:return we(e,/(image-set\([^]*)/,ue+"$1$`$1");case 4968:return we(we(e,/(.+:)(flex-)?(.*)/,ue+"box-pack:$3"+ce+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+ue+e+e;case 4200:if(!Se(e,/flex-|baseline/))return ce+"grid-column-align"+Ee(e,t)+e;break;case 2592:case 3360:return ce+we(e,"template-","")+e;case 4384:case 3616:return n&&n.some((function(e,n){return t=n,Se(e.props,/grid-\w+-end/)}))?~Pe(e+(n=n[t].value),"span")?e:ce+we(e,"-start","")+e+ce+"grid-row-span:"+(~Pe(n,"span")?Se(n,/\d+/):+Se(n,/\d+/)-+Se(e,/\d+/))+";":ce+we(e,"-start","")+e;case 4896:case 4128:return n&&n.some((function(e){return Se(e.props,/grid-\w+-start/)}))?e:ce+we(we(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return we(e,/(.+)-inline(.+)/,ue+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(_e(e)-1-t>6)switch(xe(e,t+1)){case 109:if(45!==xe(e,t+4))break;case 102:return we(e,/(.+:)(.+)-([^]+)/,"$1"+ue+"$2-$3$1"+de+(108==xe(e,t+3)?"$3":"$2-$3"))+e;case 115:return~Pe(e,"stretch")?et(we(e,"stretch","fill-available"),t,n)+e:e}break;case 5152:case 5920:return we(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(t,n,r,i,o,a,s){return ce+n+":"+r+s+(i?ce+n+"-span:"+(o?a:+a-+r)+s:"")+e}));case 4949:if(121===xe(e,t+6))return we(e,":",":"+ue)+e;break;case 6444:switch(xe(e,45===xe(e,14)?18:11)){case 120:return we(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+ue+(45===xe(e,14)?"inline-":"")+"box$3$1"+ue+"$2$3$1"+ce+"$2box$3")+e;case 100:return we(e,":",":"+ce)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return we(e,"scroll-","scroll-snap-")+e}return e}function tt(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case fe:return void(e.return=et(e.value,e.length,n));case ge:return Xe([Re(e,{value:we(e.value,"@","@"+ue)})],r);case pe:if(e.length)return function(e,t){return e.map(t).join("")}(n=e.props,(function(t){switch(Se(t,r=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":Ne(Re(e,{props:[we(t,/:(read-\w+)/,":"+de+"$1")]})),Ne(Re(e,{props:[t]})),be(e,{props:Ie(n,r)});break;case"::placeholder":Ne(Re(e,{props:[we(t,/:(plac\w+)/,":"+ue+"input-$1")]})),Ne(Re(e,{props:[we(t,/:(plac\w+)/,":"+de+"$1")]})),Ne(Re(e,{props:[we(t,/:(plac\w+)/,ce+"input-$1")]})),Ne(Re(e,{props:[t]})),be(e,{props:Ie(n,r)})}return""}))}}function nt(e){return function(e){return Ue="",e}(rt("",null,null,null,[""],e=function(e){return Le=ke=1,je=_e(Ue=e),Fe=0,[]}(e),0,[0],e))}function rt(e,t,n,r,i,o,a,s,l){for(var c=0,d=0,u=a,m=0,p=0,f=0,h=1,g=1,C=1,v=0,A="",b=i,y=o,S=r,w=A;g;)switch(f=v,v=Be()){case 40:if(108!=f&&58==xe(w,u-1)){-1!=Pe(w+=we(Je(v),"&","&\f"),"&\f")&&(C=-1);break}case 34:case 39:case 91:w+=Je(v);break;case 9:case 10:case 13:case 32:w+=Qe(f);break;case 92:w+=Ye(Ge()-1,7);continue;case 47:switch(ze()){case 42:case 47:Oe(ot(qe(Be(),Ge()),t,n,l),l);break;default:w+="/"}break;case 123*h:s[c++]=_e(w)*C;case 125*h:case 59:case 0:switch(v){case 0:case 125:g=0;case 59+d:-1==C&&(w=we(w,/\f/g,"")),p>0&&_e(w)-u&&Oe(p>32?at(w+";",r,n,u-1,l):at(we(w," ","")+";",r,n,u-2,l),l);break;case 59:w+=";";default:if(Oe(S=it(w,t,n,c,d,i,s,A,b=[],y=[],u,o),o),123===v)if(0===d)rt(w,t,S,S,b,o,u,s,y);else switch(99===m&&110===xe(w,3)?100:m){case 100:case 108:case 109:case 115:rt(e,S,S,r&&Oe(it(e,S,S,0,0,i,s,A,i,b=[],u,y),y),i,y,u,s,r?b:y);break;default:rt(w,S,S,S,[""],y,0,s,y)}}c=d=p=0,h=C=1,A=w="",u=a;break;case 58:u=1+_e(w),p=f;default:if(h<1)if(123==v)--h;else if(125==v&&0==h++&&125==We())continue;switch(w+=Ae(v),v*h){case 38:C=d>0?1:(w+="\f",-1);break;case 44:s[c++]=(_e(w)-1)*C,C=1;break;case 64:45===ze()&&(w+=Je(Be())),m=ze(),d=u=_e(A=w+=Ze(Ge())),v++;break;case 45:45===f&&2==_e(w)&&(h=0)}}return o}function it(e,t,n,r,i,o,a,s,l,c,d,u){for(var m=i-1,p=0===i?o:[""],f=De(p),h=0,g=0,C=0;h<r;++h)for(var v=0,A=Ee(e,m+1,m=ve(g=a[h])),b=e;v<f;++v)(b=ye(g>0?p[v]+" "+A:we(A,/&\f/g,p[v])))&&(l[C++]=b);return Te(e,t,n,0===i?pe:s,l,c,d,u)}function ot(e,t,n,r){return Te(e,t,n,me,Ae(Me),Ee(e,2,-2),0,r)}function at(e,t,n,r,i){return Te(e,t,n,fe,Ee(e,0,r),Ee(e,r+1,-1),r,i)}var st={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},lt="undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&({ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_ATTR||{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_ATTR)||"data-styled",ct="undefined"!=typeof window&&"HTMLElement"in window,dt=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY?"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_19436:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AWW-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"a04475a0-1a15-47c8-b071-eddc4a715c18",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY),ut=(new Set,Object.freeze([])),mt=Object.freeze({});var pt=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),ft=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,ht=/(^-|-$)/g;function gt(e){return e.replace(ft,"-").replace(ht,"")}var Ct=/(a)(d)/gi,vt=function(e){return String.fromCharCode(e+(e>25?39:97))};function At(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=vt(t%52)+n;return(vt(t%52)+n).replace(Ct,"$1-$2")}var bt,yt=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},St=function(e){return yt(5381,e)};function wt(e){return At(St(e)>>>0)}function Pt(e){return"string"==typeof e&&!0}var xt="function"==typeof Symbol&&Symbol.for,Et=xt?Symbol.for("react.memo"):60115,_t=xt?Symbol.for("react.forward_ref"):60112,Dt={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},Ot={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},It={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Lt=((bt={})[_t]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},bt[Et]=It,bt);function kt(e){return("type"in(t=e)&&t.type.$$typeof)===Et?It:"$$typeof"in e?Lt[e.$$typeof]:Dt;var t}var jt=Object.defineProperty,Ft=Object.getOwnPropertyNames,Mt=Object.getOwnPropertySymbols,Ut=Object.getOwnPropertyDescriptor,Tt=Object.getPrototypeOf,Rt=Object.prototype;function Nt(e,t,n){if("string"!=typeof t){if(Rt){var r=Tt(t);r&&r!==Rt&&Nt(e,r,n)}var i=Ft(t);Mt&&(i=i.concat(Mt(t)));for(var o=kt(e),a=kt(t),s=0;s<i.length;++s){var l=i[s];if(!(l in Ot||n&&n[l]||a&&l in a||o&&l in o)){var c=Ut(t,l);try{jt(e,l,c)}catch(e){}}}}return e}function Wt(e){return"function"==typeof e}function Bt(e){return"object"==typeof e&&"styledComponentId"in e}function zt(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function Gt(e,t){if(0===e.length)return"";for(var n=e[0],r=1;r<e.length;r++)n+=t?t+e[r]:e[r];return n}function Vt(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function Ht(e,t,n){if(void 0===n&&(n=!1),!n&&!Vt(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=Ht(e[r],t[r]);else if(Vt(t))for(var r in t)e[r]=Ht(e[r],t[r]);return e}function Jt(e,t){Object.defineProperty(e,"toString",{value:t})}function Qt(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(t.length>0?" Args: ".concat(t.join(", ")):""))}var Yt=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,i=r;e>=i;)if((i<<=1)<0)throw Qt(16,"".concat(e));this.groupSizes=new Uint32Array(i),this.groupSizes.set(n),this.length=i;for(var o=r;o<i;o++)this.groupSizes[o]=0}for(var a=this.indexOfGroup(e+1),s=(o=0,t.length);o<s;o++)this.tag.insertRule(a,t[o])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var i=n;i<r;i++)this.tag.deleteRule(n)}},e.prototype.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),i=r+n,o=r;o<i;o++)t+="".concat(this.tag.getRule(o)).concat("/*!sc*/\n");return t},e}(),$t=new Map,qt=new Map,Zt=1,Xt=function(e){if($t.has(e))return $t.get(e);for(;qt.has(Zt);)Zt++;var t=Zt++;return $t.set(e,t),qt.set(t,e),t},Kt=function(e,t){Zt=t+1,$t.set(e,t),qt.set(t,e)},en="style[".concat(lt,"][").concat("data-styled-version",'="').concat("6.1.1",'"]'),tn=new RegExp("^".concat(lt,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),nn=function(e,t,n){for(var r,i=n.split(","),o=0,a=i.length;o<a;o++)(r=i[o])&&e.registerName(t,r)},rn=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:"").split("/*!sc*/\n"),i=[],o=0,a=r.length;o<a;o++){var s=r[o].trim();if(s){var l=s.match(tn);if(l){var c=0|parseInt(l[1],10),d=l[2];0!==c&&(Kt(d,c),nn(e,d,l[3]),e.getTag().insertRules(c,i)),i.length=0}else i.push(s)}}};function on(){return i.nc}var an=function(e){var t=document.head,n=e||t,r=document.createElement("style"),i=function(e){var t=Array.from(e.querySelectorAll("style[".concat(lt,"]")));return t[t.length-1]}(n),o=void 0!==i?i.nextSibling:null;r.setAttribute(lt,"active"),r.setAttribute("data-styled-version","6.1.1");var a=on();return a&&r.setAttribute("nonce",a),n.insertBefore(r,o),r},sn=function(){function e(e){this.element=an(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var i=t[n];if(i.ownerNode===e)return i}throw Qt(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},e}(),ln=function(){function e(e){this.element=an(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),cn=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),dn=ct,un={isServer:!ct,useCSSOMInjection:!dt},mn=function(){function e(e,t,n){void 0===e&&(e=mt),void 0===t&&(t={});var r=this;this.options=oe(oe({},un),e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&ct&&dn&&(dn=!1,function(e){for(var t=document.querySelectorAll(en),n=0,r=t.length;n<r;n++){var i=t[n];i&&"active"!==i.getAttribute(lt)&&(rn(e,i),i.parentNode&&i.parentNode.removeChild(i))}}(this)),Jt(this,(function(){return function(e){for(var t=e.getTag(),n=t.length,r="",i=function(n){var i=function(e){return qt.get(e)}(n);if(void 0===i)return"continue";var o=e.names.get(i),a=t.getGroup(n);if(void 0===o||0===a.length)return"continue";var s="".concat(lt,".g").concat(n,'[id="').concat(i,'"]'),l="";void 0!==o&&o.forEach((function(e){e.length>0&&(l+="".concat(e,","))})),r+="".concat(a).concat(s,'{content:"').concat(l,'"}').concat("/*!sc*/\n")},o=0;o<n;o++)i(o);return r}(r)}))}return e.registerId=function(e){return Xt(e)},e.prototype.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(oe(oe({},this.options),t),this.gs,n&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var t=e.useCSSOMInjection,n=e.target;return e.isServer?new cn(n):t?new sn(n):new ln(n)}(this.options),new Yt(e)));var e},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(Xt(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},e.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(Xt(e),n)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Xt(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),pn=/&/g,fn=/^\s*\/\/.*$/gm;function hn(e,t){return e.map((function(e){return"rule"===e.type&&(e.value="".concat(t," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(t," ")),e.props=e.props.map((function(e){return"".concat(t," ").concat(e)}))),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=hn(e.children,t)),e}))}function gn(e){var t,n,r,i=void 0===e?mt:e,o=i.options,a=void 0===o?mt:o,s=i.plugins,l=void 0===s?ut:s,c=function(e,r,i){return i===n||i.startsWith(n)&&i.endsWith(n)&&i.replaceAll(n,"").length>0?".".concat(t):e},d=l.slice();d.push((function(e){e.type===pe&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(pn,n).replace(r,c))})),a.prefix&&d.push(tt),d.push(Ke);var u=function(e,i,o,s){void 0===i&&(i=""),void 0===o&&(o=""),void 0===s&&(s="&"),t=s,n=i,r=new RegExp("\\".concat(n,"\\b"),"g");var l=e.replace(fn,""),c=nt(o||i?"".concat(o," ").concat(i," { ").concat(l," }"):l);a.namespace&&(c=hn(c,a.namespace));var u,m,p,f=[];return Xe(c,(u=d.concat((p=function(e){return f.push(e)},function(e){e.root||(e=e.return)&&p(e)})),m=De(u),function(e,t,n,r){for(var i="",o=0;o<m;o++)i+=u[o](e,t,n,r)||"";return i})),f};return u.hash=l.length?l.reduce((function(e,t){return t.name||Qt(15),yt(e,t.name)}),5381).toString():"",u}var Cn=new mn,vn=gn(),An=t.createContext({shouldForwardProp:void 0,styleSheet:Cn,stylis:vn}),bn=(An.Consumer,t.createContext(void 0));function yn(){return(0,t.useContext)(An)}function Sn(e){var n=(0,t.useState)(e.stylisPlugins),r=n[0],i=n[1],o=yn().styleSheet,a=(0,t.useMemo)((function(){var t=o;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target,o]),s=(0,t.useMemo)((function(){return gn({options:{namespace:e.namespace,prefix:e.enableVendorPrefixes},plugins:r})}),[e.enableVendorPrefixes,e.namespace,r]);(0,t.useEffect)((function(){le()(r,e.stylisPlugins)||i(e.stylisPlugins)}),[e.stylisPlugins]);var l=(0,t.useMemo)((function(){return{shouldForwardProp:e.shouldForwardProp,styleSheet:a,stylis:s}}),[e.shouldForwardProp,a,s]);return t.createElement(An.Provider,{value:l},t.createElement(bn.Provider,{value:s},e.children))}var wn=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=vn);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,Jt(this,(function(){throw Qt(12,String(n.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=vn),this.name+e.hash},e}(),Pn=function(e){return e>="A"&&e<="Z"};function xn(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(1===n&&"-"===r&&"-"===e[0])return e;Pn(r)?t+="-"+r.toLowerCase():t+=r}return t.startsWith("ms-")?"-"+t:t}var En=function(e){return null==e||!1===e||""===e},_n=function(e){var t,n,r=[];for(var i in e){var o=e[i];e.hasOwnProperty(i)&&!En(o)&&(Array.isArray(o)&&o.isCss||Wt(o)?r.push("".concat(xn(i),":"),o,";"):Vt(o)?r.push.apply(r,ae(ae(["".concat(i," {")],_n(o),!1),["}"],!1)):r.push("".concat(xn(i),": ").concat((t=i,null==(n=o)||"boolean"==typeof n||""===n?"":"number"!=typeof n||0===n||t in st||t.startsWith("--")?String(n).trim():"".concat(n,"px")),";")))}return r};function Dn(e,t,n,r){return En(e)?[]:Bt(e)?[".".concat(e.styledComponentId)]:Wt(e)?!Wt(i=e)||i.prototype&&i.prototype.isReactComponent||!t?[e]:Dn(e(t),t,n,r):e instanceof wn?n?(e.inject(n,r),[e.getName(r)]):[e]:Vt(e)?_n(e):Array.isArray(e)?Array.prototype.concat.apply(ut,e.map((function(e){return Dn(e,t,n,r)}))):[e.toString()];var i}function On(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(Wt(n)&&!Bt(n))return!1}return!0}var In=St("6.1.1"),Ln=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&On(e),this.componentId=t,this.baseHash=yt(In,t),this.baseStyle=n,mn.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):"";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=zt(r,this.staticRulesId);else{var i=Gt(Dn(this.rules,e,t,n)),o=At(yt(this.baseHash,i)>>>0);if(!t.hasNameForId(this.componentId,o)){var a=n(i,".".concat(o),void 0,this.componentId);t.insertRules(this.componentId,o,a)}r=zt(r,o),this.staticRulesId=o}else{for(var s=yt(this.baseHash,n.hash),l="",c=0;c<this.rules.length;c++){var d=this.rules[c];if("string"==typeof d)l+=d;else if(d){var u=Gt(Dn(d,e,t,n));s=yt(s,u+c),l+=u}}if(l){var m=At(s>>>0);t.hasNameForId(this.componentId,m)||t.insertRules(this.componentId,m,n(l,".".concat(m),void 0,this.componentId)),r=zt(r,m)}}return r},e}(),kn=t.createContext(void 0);kn.Consumer;var jn={};function Fn(e,n,r){var i=Bt(e),o=e,a=!Pt(e),s=n.attrs,l=void 0===s?ut:s,c=n.componentId,d=void 0===c?function(e,t){var n="string"!=typeof e?"sc":gt(e);jn[n]=(jn[n]||0)+1;var r="".concat(n,"-").concat(wt("6.1.1"+n+jn[n]));return t?"".concat(t,"-").concat(r):r}(n.displayName,n.parentComponentId):c,u=n.displayName,m=void 0===u?function(e){return Pt(e)?"styled.".concat(e):"Styled(".concat(function(e){return e.displayName||e.name||"Component"}(e),")")}(e):u,p=n.displayName&&n.componentId?"".concat(gt(n.displayName),"-").concat(n.componentId):n.componentId||d,f=i&&o.attrs?o.attrs.concat(l).filter(Boolean):l,h=n.shouldForwardProp;if(i&&o.shouldForwardProp){var g=o.shouldForwardProp;if(n.shouldForwardProp){var C=n.shouldForwardProp;h=function(e,t){return g(e,t)&&C(e,t)}}else h=g}var v=new Ln(r,p,i?o.componentStyle:void 0);function A(e,n){return function(e,n,r){var i=e.attrs,o=e.componentStyle,a=e.defaultProps,s=e.foldedComponentIds,l=e.styledComponentId,c=e.target,d=t.useContext(kn),u=yn(),m=e.shouldForwardProp||u.shouldForwardProp,p=function(e,t,n){for(var r,i=oe(oe({},t),{className:void 0,theme:n}),o=0;o<e.length;o+=1){var a=Wt(r=e[o])?r(i):r;for(var s in a)i[s]="className"===s?zt(i[s],a[s]):"style"===s?oe(oe({},i[s]),a[s]):a[s]}return t.className&&(i.className=zt(i.className,t.className)),i}(i,n,function(e,t,n){return void 0===n&&(n=mt),e.theme!==n.theme&&e.theme||t||n.theme}(n,d,a)||mt),f=p.as||c,h={};for(var g in p)void 0===p[g]||"$"===g[0]||"as"===g||"theme"===g||("forwardedAs"===g?h.as=p.forwardedAs:m&&!m(g,f)||(h[g]=p[g]));var C=function(e,t){var n=yn();return e.generateAndInjectStyles(t,n.styleSheet,n.stylis)}(o,p),v=zt(s,l);return C&&(v+=" "+C),p.className&&(v+=" "+p.className),h[Pt(f)&&!pt.has(f)?"class":"className"]=v,h.ref=r,(0,t.createElement)(f,h)}(b,e,n)}A.displayName=m;var b=t.forwardRef(A);return b.attrs=f,b.componentStyle=v,b.displayName=m,b.shouldForwardProp=h,b.foldedComponentIds=i?zt(o.foldedComponentIds,o.styledComponentId):"",b.styledComponentId=p,b.target=i?o.target:e,Object.defineProperty(b,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=i?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,i=t;r<i.length;r++)Ht(e,i[r],!0);return e}({},o.defaultProps,e):e}}),Jt(b,(function(){return".".concat(b.styledComponentId)})),a&&Nt(b,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),b}function Mn(e,t){for(var n=[e[0]],r=0,i=t.length;r<i;r+=1)n.push(t[r],e[r+1]);return n}new Set;var Un=function(e){return Object.assign(e,{isCss:!0})};function Tn(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(Wt(e)||Vt(e))return Un(Dn(Mn(ut,ae([e],t,!0))));var r=e;return 0===t.length&&1===r.length&&"string"==typeof r[0]?Dn(r):Un(Dn(Mn(r,t)))}function Rn(e,t,n){if(void 0===n&&(n=mt),!t)throw Qt(1,t);var r=function(r){for(var i=[],o=1;o<arguments.length;o++)i[o-1]=arguments[o];return e(t,n,Tn.apply(void 0,ae([r],i,!1)))};return r.attrs=function(r){return Rn(e,t,oe(oe({},n),{attrs:Array.prototype.concat(n.attrs,r).filter(Boolean)}))},r.withConfig=function(r){return Rn(e,t,oe(oe({},n),r))},r}var Nn,Wn=function(e){return Rn(Fn,e)},Bn=Wn;function zn(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=Gt(Tn.apply(void 0,ae([e],t,!1))),i=wt(r);return new wn(i,r)}pt.forEach((function(e){Bn[e]=Wn(e)})),function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=On(e),mn.registerId(this.componentId+1)}e.prototype.createStyles=function(e,t,n,r){var i=r(Gt(Dn(this.rules,t,n,r)),""),o=this.componentId+e;n.insertRules(o,o,i)},e.prototype.removeStyles=function(e,t){t.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,t,n,r){e>2&&mn.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)}}(),function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=on(),r=Gt([n&&'nonce="'.concat(n,'"'),"".concat(lt,'="true"'),"".concat("data-styled-version",'="').concat("6.1.1",'"')].filter(Boolean)," ");return"<style ".concat(r,">").concat(t,"</style>")},this.getStyleTags=function(){if(e.sealed)throw Qt(2);return e._emitSheetCSS()},this.getStyleElement=function(){var n;if(e.sealed)throw Qt(2);var r=((n={})[lt]="",n["data-styled-version"]="6.1.1",n.dangerouslySetInnerHTML={__html:e.instance.toString()},n),i=on();return i&&(r.nonce=i),[t.createElement("style",oe({},r,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new mn({isServer:!0}),this.sealed=!1}e.prototype.collectStyles=function(e){if(this.sealed)throw Qt(2);return t.createElement(Sn,{sheet:this.instance},e)},e.prototype.interleaveWithNodeStream=function(e){throw Qt(3)}}(),"__sc-".concat(lt,"__");var Gn,Vn,Hn,Jn,Qn=Bn.div(Nn||(Gn=["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    \n    position: fixed;\n    bottom: 0;\n    left: 0;\n    \n    transition: transform 0.5s ease-out;\n    z-index: 10;\n    \n    .botao{\n        background: white;\n        border: none;\n        border-radius: 50%;\n        width: 4rem;\n        height: 4rem;\n        transition: 0.5s all ease-out;\n        z-index: 1000;\n        cursor: pointer;\n    }\n    \n    .botao:hover{\n        transform: scale(1.1);\n    }\n    \n    &.visible{\n        transform: translateY(0);\n    }\n\n    &.visible .botao{\n        transform: rotate(180deg);\n    }\n    \n    &.hidden{\n        transform: translateY(16rem);\n    }\n"],Vn||(Vn=Gn.slice(0)),Nn=Object.freeze(Object.defineProperties(Gn,{raw:{value:Object.freeze(Vn)}})))),Yn=Bn.form(Hn||(Hn=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    border-radius: 6.25rem 6.25rem 0rem 0rem;\n    background: #000;\n    width: 100vw;\n    padding: 2rem 0;\n    flex-shrink: 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    \n    label{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    input{\n        width: 15.375rem;\n        height: 3.375rem;\n        flex-shrink: 0;\n        border: none;\n        border-radius: 0;\n    }\n    \n    input, input::placeholder{\n        color: rgba(0, 0, 0, 0.28);\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n"]))),$n=Bn.button(Jn||(Jn=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 13.0625rem;\n    height: 3rem;\n    flex-shrink: 0;\n    background: #CD0909;\n\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.25rem;\n    font-style: italic;\n    font-weight: 400;\n    line-height: normal;\n    border: none;\n\n    transition: background 0.3s ease-in-out;\n    cursor: pointer;\n\n    &:hover {\n        background: #A00000;\n    }\n\n    &:active {\n        background: #fc2f2f;\n    }\n\n    &:disabled {\n        background: #A0A0A0;\n        cursor: not-allowed;\n        color: #FFF;\n    }\n"]))),qn=i(893);const Zn=function(e){var t=e.type,n=e.disabled,r=e.children,i=e.onClick,o=e.className;return(0,qn.jsx)($n,{type:t,disabled:n,onClick:i,className:o,children:r})};function Xn(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)e[r]=n[r]}return e}var Kn=function e(t,n){function r(e,r,i){if("undefined"!=typeof document){"number"==typeof(i=Xn({},n,i)).expires&&(i.expires=new Date(Date.now()+864e5*i.expires)),i.expires&&(i.expires=i.expires.toUTCString()),e=encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var o="";for(var a in i)i[a]&&(o+="; "+a,!0!==i[a]&&(o+="="+i[a].split(";")[0]));return document.cookie=e+"="+t.write(r,e)+o}}return Object.create({set:r,get:function(e){if("undefined"!=typeof document&&(!arguments.length||e)){for(var n=document.cookie?document.cookie.split("; "):[],r={},i=0;i<n.length;i++){var o=n[i].split("="),a=o.slice(1).join("=");try{var s=decodeURIComponent(o[0]);if(r[s]=t.read(a,s),e===s)break}catch(e){}}return e?r[e]:r}},remove:function(e,t){r(e,"",Xn({},t,{expires:-1}))},withAttributes:function(t){return e(this.converter,Xn({},this.attributes,t))},withConverter:function(t){return e(Xn({},this.converter,t),this.attributes)}},{attributes:{value:Object.freeze(n)},converter:{value:Object.freeze(t)}})}({read:function(e){return'"'===e[0]&&(e=e.slice(1,-1)),e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(e){return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}},{path:"/"});function er(e){return er="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},er(e)}function tr(){tr=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof C?t:C,a=Object.create(o.prototype),s=new I(r||[]);return i(a,"_invoke",{value:E(e,n,s)}),a}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var m="suspendedStart",p="suspendedYield",f="executing",h="completed",g={};function C(){}function v(){}function A(){}var b={};c(b,a,(function(){return this}));var y=Object.getPrototypeOf,S=y&&y(y(L([])));S&&S!==n&&r.call(S,a)&&(b=S);var w=A.prototype=C.prototype=Object.create(b);function P(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(i,o,a,s){var l=u(e[i],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==er(d)&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,a,s)}),(function(e){n("throw",e,a,s)})):t.resolve(d).then((function(e){c.value=e,a(c)}),(function(e){return n("throw",e,a,s)}))}s(l.arg)}var o;i(this,"_invoke",{value:function(e,r){function i(){return new t((function(t,i){n(e,r,t,i)}))}return o=o?o.then(i,i):i()}})}function E(t,n,r){var i=m;return function(o,a){if(i===f)throw new Error("Generator is already running");if(i===h){if("throw"===o)throw a;return{value:e,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var l=_(s,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===m)throw i=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=f;var c=u(t,n,r);if("normal"===c.type){if(i=r.done?h:p,c.arg===g)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(i=h,r.method="throw",r.arg=c.arg)}}}function _(t,n){var r=n.method,i=t.iterator[r];if(i===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var o=u(i,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,g;var a=o.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function D(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function L(t){if(t||""===t){var n=t[a];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function n(){for(;++i<t.length;)if(r.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(er(t)+" is not iterable")}return v.prototype=A,i(w,"constructor",{value:A,configurable:!0}),i(A,"constructor",{value:v,configurable:!0}),v.displayName=c(A,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,A):(e.__proto__=A,c(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},t.awrap=function(e){return{__await:e}},P(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,n,r,i,o){void 0===o&&(o=Promise);var a=new x(d(e,n,r,i),o);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(w),c(w,l,"Generator"),c(w,a,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=L,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(r,i){return s.type="throw",s.arg=t,n.next=r,i&&(n.method="next",n.arg=e),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),O(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;O(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:L(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function nr(e,t,n,r,i,o,a){try{var s=e[o](a),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,i)}function rr(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const ir=function(e){var n,r,i=e.className,o=(n=(0,t.useState)(""),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return rr(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?rr(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1],l=J(),c=function(){var e,t=(e=tr().mark((function e(t){return tr().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.preventDefault(),!(a.trim().length<=3)){e.next=4;break}return alert("Por favor, digite um nome com mais de 3 caracteres."),e.abrupt("return");case 4:localStorage.setItem("name",a),localStorage.setItem("pontuacao","0"),localStorage.setItem("toolTipCronograma","false"),l("/avatar",{state:{name:a}});case 8:case"end":return e.stop()}}),e)})),function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function a(e){nr(o,r,i,a,s,"next",e)}function s(e){nr(o,r,i,a,s,"throw",e)}a(void 0)}))});return function(e){return t.apply(this,arguments)}}();return(0,qn.jsxs)(Yn,{className:i,onSubmit:c,children:[(0,qn.jsx)("label",{htmlFor:"name",children:"NOME"}),(0,qn.jsx)("input",{type:"text",id:"name",value:a,onChange:function(e){s(e.target.value)},placeholder:"digite seu nome"}),(0,qn.jsx)(Zn,{type:"submit",disabled:""===a.trim(),children:"ENTRE"})]})};var or;Bn.div(or||(or=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n"])));var ar=function(e){var t=e.className,n=e.onClick;return(0,qn.jsx)("svg",{className:t,onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"55",height:"55",viewBox:"0 0 55 55",fill:"none",children:(0,qn.jsx)("path",{d:"M41.9212 35.038C42.8161 34.1431 42.8161 32.692 41.9212 31.7971L30.7099 20.5967C28.9197 18.8083 26.0189 18.809 24.2296 20.5983L13.0226 31.8053C12.1276 32.7002 12.1276 34.1513 13.0226 35.0462C13.9175 35.9413 15.3685 35.9413 16.2635 35.0462L25.8555 25.4542C26.7506 24.5593 28.2015 24.5593 29.0964 25.4542L38.6804 35.038C39.5753 35.9329 41.0263 35.9329 41.9212 35.038Z",fill:"#CD0909"})})};function sr(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const lr=function(){var e,n,r=(e=(0,t.useState)(!1),n=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,t){if(e){if("string"==typeof e)return sr(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?sr(e,t):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0],o=r[1];return(0,qn.jsxs)(Qn,{className:i?"visible":"hidden",children:[(0,qn.jsx)(ar,{className:"botao",onClick:function(){o(!i)}}),(0,qn.jsx)(ir,{className:"input"})]})};var cr,dr=Bn.article(cr||(cr=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin-top: 4rem;\n    \n  .boas-vindas {\n      color: #FFF;\n      font-family: Inter;\n      font-size: 1.5rem;\n      font-style: italic;\n      font-weight: 400;\n      line-height: normal;\n  }\n    \n    .titulo {\n        display: flex;\n        flex-direction: column;\n        \n        .titulo-principal {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 2rem;\n            font-style: normal;\n            font-weight: 600;\n            line-height: normal;\n            letter-spacing: 0.09rem;\n        }\n        \n        .titulo-secundario {\n            color: #CD0909;\n            font-family: Inter;\n            font-size: 3.4rem;\n            font-style: italic;\n            font-weight: 700;\n            line-height: normal;\n            letter-spacing: 0.15rem;\n        }\n    }\n    \n    .logo svg{\n        width: 10rem;\n        height: 2rem;\n    }\n    \n"]))),ur=function(e){var t=e.onClick,n=e.className;return(0,qn.jsxs)("svg",{className:n,onClick:t,xmlns:"http://www.w3.org/2000/svg",width:"90",height:"14",viewBox:"0 0 90 14",fill:"none",children:[(0,qn.jsx)("path",{d:"M49.6598 2.73711V13.8267H49.3088V2.73711H49.6598Z",fill:"white"}),(0,qn.jsx)("path",{d:"M53.1698 13.8267V2.73711H53.5208V7.63213H53.5647C53.7109 7.17007 53.923 6.77117 54.2009 6.43545C54.4787 6.09612 54.806 5.83621 55.1826 5.65571C55.5592 5.47161 55.9705 5.37956 56.4165 5.37956C57.0747 5.37956 57.6469 5.56907 58.1331 5.94811C58.6194 6.32715 58.996 6.84156 59.2629 7.49135C59.5298 8.14113 59.6633 8.87394 59.6633 9.68978C59.6633 10.5092 59.5298 11.2438 59.2629 11.8936C58.9997 12.5434 58.6249 13.0578 58.1386 13.4369C57.656 13.8123 57.082 14 56.4165 14C55.9668 14 55.5537 13.9079 55.1771 13.7238C54.8041 13.5397 54.4806 13.2798 54.2064 12.9441C53.9321 12.6048 53.7182 12.2059 53.5647 11.7474H53.5208V13.8267H53.1698ZM53.5208 9.68978C53.5208 10.4406 53.6378 11.1157 53.8718 11.7149C54.1058 12.3106 54.4385 12.7835 54.87 13.1336C55.3051 13.4802 55.8206 13.6534 56.4165 13.6534C57.0125 13.6534 57.5262 13.4802 57.9577 13.1336C58.3927 12.7835 58.7273 12.3106 58.9613 11.7149C59.1953 11.1157 59.3123 10.4406 59.3123 9.68978C59.3123 8.93892 59.1935 8.26567 58.9558 7.67004C58.7218 7.07079 58.3873 6.5979 57.9522 6.25135C57.5207 5.90119 57.0089 5.72611 56.4165 5.72611C55.8242 5.72611 55.3105 5.90119 54.8754 6.25135C54.444 6.5979 54.1095 7.07079 53.8718 7.67004C53.6378 8.26567 53.5208 8.93892 53.5208 9.68978Z",fill:"white"}),(0,qn.jsx)("path",{d:"M62.1367 13.8267V5.50951H62.4877V6.7441H62.5316C62.6852 6.33979 62.9594 6.0149 63.3543 5.76942C63.7528 5.52395 64.2318 5.40121 64.7912 5.40121C65.4273 5.40121 65.9337 5.55644 66.3103 5.86689C66.6906 6.17734 66.952 6.59248 67.0946 7.11231H67.1385C67.2774 6.59248 67.5589 6.17734 67.9831 5.86689C68.4072 5.55644 68.9373 5.40121 69.5735 5.40121C70.4181 5.40121 71.0415 5.66654 71.4437 6.1972C71.8495 6.72424 72.0524 7.40471 72.0524 8.2386V13.8267H71.7014V8.2386C71.7014 7.50218 71.5333 6.90293 71.1969 6.44087C70.8605 5.9788 70.3194 5.74777 69.5735 5.74777C68.8276 5.74777 68.2573 5.98241 67.8624 6.4517C67.4675 6.91737 67.2701 7.51301 67.2701 8.2386V13.8267H66.9191V8.2386C66.9191 7.50218 66.7509 6.90293 66.4145 6.44087C66.0782 5.9788 65.537 5.74777 64.7912 5.74777C64.2939 5.74777 63.8734 5.85426 63.5298 6.06724C63.1897 6.28023 62.9301 6.57443 62.751 6.94986C62.5755 7.32529 62.4877 7.75487 62.4877 8.2386V13.8267H62.1367Z",fill:"white"}),(0,qn.jsx)("path",{d:"M78.1908 14C77.4559 14 76.8124 13.8105 76.2603 13.4314C75.7119 13.0524 75.2859 12.538 74.9825 11.8882C74.679 11.2384 74.5273 10.5056 74.5273 9.68978C74.5273 8.87394 74.679 8.14113 74.9825 7.49135C75.2896 6.84156 75.7064 6.32715 76.2329 5.94811C76.7594 5.56907 77.3535 5.37956 78.0153 5.37956C78.5052 5.37956 78.9586 5.48244 79.3754 5.6882C79.7959 5.89397 80.1615 6.17915 80.4723 6.54375C80.7831 6.90835 81.0244 7.3289 81.1962 7.80541C81.3717 8.27831 81.4595 8.78369 81.4595 9.32157V9.66812H74.7028V9.32157H81.1085C81.1085 8.65374 80.9695 8.04908 80.6917 7.50759C80.4138 6.9625 80.0409 6.52931 79.5729 6.20803C79.1049 5.88675 78.5857 5.72611 78.0153 5.72611C77.4376 5.72611 76.9148 5.89577 76.4468 6.2351C75.9788 6.57443 75.604 7.0365 75.3225 7.6213C75.041 8.20611 74.8929 8.86672 74.8783 9.60314V9.64646C74.8783 10.372 75.0062 11.0399 75.2622 11.65C75.5218 12.2564 75.8983 12.7419 76.3919 13.1065C76.8855 13.4711 77.4852 13.6534 78.1908 13.6534C78.71 13.6534 79.1451 13.5632 79.4961 13.3827C79.8507 13.2022 80.1341 12.9946 80.3462 12.76C80.5619 12.5254 80.7209 12.325 80.8233 12.159L81.1085 12.3539C80.9842 12.5633 80.7977 12.7961 80.5491 13.0524C80.3005 13.3087 79.9824 13.5307 79.5948 13.7184C79.2072 13.9061 78.7392 14 78.1908 14Z",fill:"white"}),(0,qn.jsx)("path",{d:"M86.9726 14C86.2926 14 85.6856 13.8123 85.1518 13.4369C84.6217 13.0578 84.203 12.5434 83.8959 11.8936C83.5924 11.2438 83.4407 10.5092 83.4407 9.68978C83.4407 8.87755 83.5924 8.14654 83.8959 7.49676C84.1994 6.84337 84.6162 6.32715 85.1463 5.94811C85.6802 5.56907 86.2889 5.37956 86.9726 5.37956C87.4772 5.37956 87.9397 5.48785 88.3602 5.70445C88.7843 5.91743 89.139 6.21705 89.4241 6.60331C89.7093 6.98596 89.894 7.42998 89.9781 7.93537H89.6051C89.4918 7.28197 89.1901 6.75132 88.7002 6.3434C88.2139 5.93187 87.6381 5.72611 86.9726 5.72611C86.3693 5.72611 85.8264 5.89938 85.3438 6.24593C84.8648 6.58887 84.4864 7.05996 84.2085 7.65921C83.9306 8.25484 83.7917 8.9317 83.7917 9.68978C83.7917 10.4262 83.9252 11.094 84.1921 11.6933C84.4626 12.2925 84.8374 12.769 85.3164 13.1228C85.7953 13.4766 86.3474 13.6534 86.9726 13.6534C87.4223 13.6534 87.8355 13.5614 88.2121 13.3773C88.5887 13.1896 88.9013 12.9261 89.1499 12.5867C89.4022 12.2474 89.5612 11.8521 89.6271 11.4009H90C89.9196 11.9243 89.7367 12.381 89.4516 12.7708C89.1664 13.1607 88.8099 13.4639 88.3821 13.6805C87.9543 13.8935 87.4845 14 86.9726 14Z",fill:"white"}),(0,qn.jsx)("path",{d:"M0 3.55856V0.683474H11.57V3.55856H7.56597V13.8267H4.00399V3.55856H0Z",fill:"#CD0909"}),(0,qn.jsx)("path",{d:"M12.9301 13.8267V0.683474H22.524V3.55856H16.5441V5.81756H22.03V8.69264H16.5441V10.9516H22.498V13.8267H12.9301Z",fill:"#CD0909"}),(0,qn.jsx)("path",{d:"M29.4384 13.8267H24.3164V0.683474H29.3864C30.7557 0.683474 31.9387 0.946596 32.9354 1.47284C33.9364 1.9948 34.7077 2.7478 35.2494 3.73184C35.7954 4.71159 36.0684 5.88601 36.0684 7.2551C36.0684 8.62419 35.7975 9.80075 35.2559 10.7848C34.7142 11.7645 33.9472 12.5175 32.9549 13.0438C31.9626 13.5657 30.7904 13.8267 29.4384 13.8267ZM27.9304 10.7976H29.3084C29.9671 10.7976 30.5282 10.6928 30.9919 10.4832C31.4599 10.2735 31.8152 9.91199 32.0579 9.39858C32.3049 8.88517 32.4284 8.17068 32.4284 7.2551C32.4284 6.33952 32.3027 5.62503 32.0514 5.11162C31.8044 4.59821 31.4404 4.23669 30.9594 4.02705C30.4827 3.8174 29.8977 3.71258 29.2044 3.71258H27.9304V10.7976Z",fill:"#CD0909"}),(0,qn.jsx)("path",{d:"M40.2154 0L41.5804 2.39056H41.6453L43.0266 0H45.5453L43.0591 4.10727L45.6428 8.21453H43.0591L41.6453 5.77584H41.5804L40.1666 8.21453H37.5991L40.1504 4.10727L37.6804 0H40.2154Z",fill:"#CD0909"})]})};const mr=function(){return(0,qn.jsxs)(dr,{children:[(0,qn.jsx)("div",{className:"boas-vindas",children:"Seja bem-vindo ao:"}),(0,qn.jsxs)("div",{className:"titulo",children:[(0,qn.jsx)("div",{className:"titulo-principal",children:"RECONSTRUINDO"}),(0,qn.jsx)("div",{className:"titulo-secundario",children:"O FUTURO"})]}),(0,qn.jsx)("div",{className:"logo",children:(0,qn.jsx)(ur,{})})]})};var pr,fr=Bn.article(pr||(pr=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    margin-top: 4rem;\n    z-index: 0;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    \n    img {\n        height: 40.3125rem;\n        z-index: 0;\n    }\n"])));const hr=function(){return(0,qn.jsx)(fr,{children:(0,qn.jsx)("img",{src:"imagens/telainicial.png"})})},gr=function(){var e=J();return(0,t.useEffect)((function(){localStorage.getItem("name")&&e("/cronograma")}),[]),(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(mr,{}),(0,qn.jsx)(hr,{}),(0,qn.jsx)(lr,{})]})};var Cr=i(935),vr=i.t(Cr,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]),new Map;const Ar=n.startTransition;function br(n){let{basename:r,children:i,future:p,window:f}=n,h=t.useRef();null==h.current&&(h.current=function(t){return void 0===t&&(t={}),function(t,n,r,i){void 0===i&&(i={});let{window:l=document.defaultView,v5Compat:m=!1}=i,p=l.history,f=e.Pop,h=null,g=C();function C(){return(p.state||{idx:null}).idx}function v(){f=e.Pop;let t=C(),n=null==t?null:t-g;g=t,h&&h({action:f,location:b.location,delta:n})}function A(e){let t="null"!==l.location.origin?l.location.origin:l.location.href,n="string"==typeof e?e:u(e);return s(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==g&&(g=0,p.replaceState(o({},p.state,{idx:g}),""));let b={get action(){return f},get location(){return t(l,p)},listen(e){if(h)throw new Error("A history only accepts one active listener");return l.addEventListener(a,v),h=e,()=>{l.removeEventListener(a,v),h=null}},createHref:e=>n(l,e),createURL:A,encodeLocation(e){let t=A(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,n){f=e.Push;let i=d(b.location,t,n);r&&r(i,t),g=C()+1;let o=c(i,g),a=b.createHref(i);try{p.pushState(o,"",a)}catch(e){if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;l.location.assign(a)}m&&h&&h({action:f,location:b.location,delta:1})},replace:function(t,n){f=e.Replace;let i=d(b.location,t,n);r&&r(i,t),g=C();let o=c(i,g),a=b.createHref(i);p.replaceState(o,"",a),m&&h&&h({action:f,location:b.location,delta:0})},go:e=>p.go(e)};return b}((function(e,t){let{pathname:n="/",search:r="",hash:i=""}=m(e.location.hash.substr(1));return n.startsWith("/")||n.startsWith(".")||(n="/"+n),d("",{pathname:n,search:r,hash:i},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){let n=e.document.querySelector("base"),r="";if(n&&n.getAttribute("href")){let t=e.location.href,n=t.indexOf("#");r=-1===n?t:t.slice(0,n)}return r+"#"+("string"==typeof t?t:u(t))}),(function(e,t){l("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")}),t)}({window:f,v5Compat:!0}));let g=h.current,[C,v]=t.useState({action:g.action,location:g.location}),{v7_startTransition:A}=p||{},b=t.useCallback((e=>{A&&Ar?Ar((()=>v(e))):v(e)}),[v,A]);return t.useLayoutEffect((()=>g.listen(b)),[g,b]),t.createElement(ne,{basename:r,children:i,location:C.location,navigationType:C.action,navigator:g})}var yr,Sr,wr;vr.flushSync,"undefined"!=typeof window&&void 0!==window.document&&window.document.createElement,function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"}(yr||(yr={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Sr||(Sr={}));var Pr,xr=Bn.header(wr||(wr=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n    \n    .logo{\n        width: 9rem;\n        height: 1.375rem;\n    }\n    \n    .perfil{\n        width: 3rem;\n        height: 3rem;\n        \n        svg{\n            width: 2rem;\n        }\n    }\n"]))),Er=Bn.article(Pr||(Pr=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 11.97244rem;\n    height: 11.97244rem;\n    flex-shrink: 0;\n    aspect-ratio: 191.56/191.56;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 1s ease;\n    overflow: hidden;\n    \n    svg{\n        border-radius: 50%;\n        width: 100%;\n        height: 80%;\n    }\n    \n\n    &.desativado {\n        background-color: #4d4d4d;\n        \n        svg{\n            filter: brightness(0.5);\n        }\n    }\n\n    &.ativado {\n        background-color: #d9d9d9;\n    }\n"])));const _r=function(e){var t=e.children,n=e.id,r=e.ativado,i=void 0!==r&&r,o=e.className,a=e.onClick,s=e.style,l=i?"ativado":"desativado";return(0,qn.jsx)(Er,{onClick:a,id:n,className:"".concat(l," ").concat(o),style:s,children:t})};var Dr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"112",height:"169",viewBox:"0 0 112 169",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_244)",children:[(0,qn.jsx)("path",{d:"M3.79 66.8099C4.56 66.3899 5.31 66.2499 5.85 66.2099C-1.49 36.5899 11.4 7.79994 42.55 1.13994C58.74 -2.32006 84.46 1.64994 89.99 19.6599C110.25 24.1699 110.16 49.1199 104.97 65.1699C112.48 71.4599 113.17 77.9499 110.74 87.2199C108.55 95.5399 104.85 99.8299 96.27 101.74C94.97 106.65 94.11 111.79 91.99 116.45C88.83 123.41 84.93 124.97 83.71 131.24C83.42 132.72 82.41 137.93 84.94 142.59C88.16 148.53 96.07 151.64 104.8 150.72C102.58 155.06 88.49 161.6 83.08 163.48C79.46 164.74 67.07 169.37 50.72 168.64C27.38 167.6 10.7 156.54 3.88 151.4L24.85 140.34C25.44 138.12 26.29 133.65 24.86 128.41C24.07 125.51 22.83 123.28 21.8 121.75C18.38 116.46 16.64 108.88 15.34 102.73C12.31 101.05 4.79 96.3099 1.7 87.2299C-0.620002 80.4399 -1.06 69.4799 3.81 66.7999L3.79 66.8099Z",fill:"#121212"}),(0,qn.jsx)("path",{d:"M42.29 90.78C49.51 89.55 51.38 80.47 53.38 74.74L58.71 74.88C58.99 79.84 63.58 90.78 69.29 90.78H90.79C92.37 106.77 84.88 122.12 72.12 131.56C45.67 151.13 17.35 117.09 20.79 90.78C27.31 90 36.09 91.84 42.29 90.78Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M78.78 133.73C78.53 134.76 77.13 141.02 81.1 146.74C83.88 150.74 87.73 152.24 89.15 152.71C85.73 155.52 73.38 164.98 55.04 165.02C35.24 165.06 22.2 154.1 19.1 151.35C20.35 151.29 25 150.92 28.77 147.2C34.17 141.86 32.92 134.4 32.79 133.73C46.52 146.37 64.95 145.73 78.77 133.73H78.78Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M92.79 60.8099H18.79L20.8 51.8199C21.99 52.3199 22.88 52.7499 24.26 52.8499C43.15 54.2199 67.06 52.3299 81.42 38.8899C85.36 38.0199 94.47 56.5299 92.8 60.8099H92.79Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M17.02 67.0399C19.48 64.5699 39.2 65.9799 43.79 66.2999C48.54 68.7099 46.85 80.7099 43.09 83.5999C40.3 85.1499 23.6 85.5199 20.79 84.2799C17.13 82.4799 14.81 69.2599 17.02 67.0399Z",fill:"white"}),(0,qn.jsx)("path",{d:"M66.42 66.9399L92.79 67.2999C96.79 69.2699 94.52 82.1899 90.54 84.0399C87.67 85.3799 70.97 85.3799 68.39 83.6799C64.15 80.8999 64.2 72.1999 65.23 67.7399L66.43 66.9399H66.42Z",fill:"white"}),(0,qn.jsx)("path",{d:"M96.79 95.7699C95.91 87.4999 99.79 79.8899 100.79 71.7899L103.17 71.9099C111.09 74.6499 104.6 94.4899 96.79 95.7699Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M14.78 94.7699C6.99 94.4099 3.05 79.5699 5.92 74.4199C10.95 65.4099 12.42 81.8699 13.05 85.0099C13.64 87.9799 15.93 90.8599 14.78 94.7599V94.7699Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M52.33 99.5699C52.33 99.5699 55.88 102.63 59.16 99.5699",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M44.22 109.31C44.98 109.82 49.23 112.59 55.93 112.53C62.39 112.48 66.47 109.85 67.27 109.31",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_244",children:(0,qn.jsx)("rect",{width:"111.98",height:"168.72",fill:"white"})})})]})},Or=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"122",height:"154",viewBox:"0 0 122 154",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_165)",children:[(0,qn.jsx)("path",{d:"M0.849999 153.55C8.01 148.5 27.9 145.89 29.9 136.4C32.76 122.83 25.84 120.61 21.79 110.04C19.92 105.17 19.04 99.96 17.96 94.89C5.53 95.44 0.759999 79.42 0.139999 69.38C-0.310001 62.14 -0.120001 57.4 6.79 53.82C9 52.67 10.53 53.89 11.74 50.2C13.13 45.98 12.23 39.4 13.53 34.07C24.85 -12.32 98.12 -11.23 107.37 36.65C108.05 40.15 107.81 47.58 108.68 49.67C108.77 49.9 111.08 53.73 111.29 53.87C111.89 54.25 114.05 53.94 115.74 54.8C125.53 59.76 119.86 81.57 114.63 88.61C111.45 92.9 108.04 94.9 102.73 95.69C101.2 103.36 99.11 110.97 94.99 117.68C94 119.3 90.79 122.41 90.54 123.26C89.7 126.1 90.23 136.25 91.69 139.01C94.83 144.95 114.52 149.35 120.48 153.55H91.83C90.62 152.82 90.86 151.35 92.55 149.15C88.11 145.72 84.36 140.99 83.32 135.84C68.62 149.89 51.18 147.22 36.83 134.64C36.72 141.43 32.18 145.76 27.38 149.7C28.76 151.18 29 152.46 28.08 153.55H0.849999Z",fill:"#1E1D1E"}),(0,qn.jsx)("path",{d:"M28.07 153.55L25.22 148.95C31.98 144.91 36.33 139.73 35.24 131.35C45.07 139.01 53.56 146.25 66.93 143.35C74.17 141.78 80.13 136.97 85.37 132.07C84.22 139.78 88.39 144.64 94.65 148.26L91.83 153.56H28.07V153.55Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M99.69 84.7899C97.35 102.45 91.28 121.78 75 131.37C44.82 149.14 21.21 111.11 21.99 84.7799C29.54 86.2199 42.88 88.1499 49.51 83.6699C53.21 81.1599 54.69 76.2999 59.94 76.1399C65.98 75.9599 66.53 80.2999 70.08 83.2499C76.34 88.4399 91.96 86.1399 99.69 84.7899Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M101.85 46.82C75.39 43.77 48.48 43.33 22.74 47.01L18.76 46.82C18.49 46.71 17.84 47.0501 17.43 46.7401C17.12 15.0201 47.79 -1.57995 76.43 8.13005C87.14 11.7601 96.23 20.2001 100.24 30.8801C101.45 34.0901 104.19 44.4401 101.84 46.8301L101.85 46.82Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M99.7 49.65C103.78 50.54 105.83 53.06 106.86 57.57C103.43 56.24 99.87 55.26 96.27 54.64C77.29 51.37 43.93 51.27 24.94 54.52C21.47 55.11 18.04 56.01 14.82 57.59C14.46 52.27 17.52 50.58 21.62 49.66C46.92 45.31 74.39 45.35 99.7 49.66V49.65Z",fill:"#121212"}),(0,qn.jsx)("path",{d:"M103.29 90.51C104.1 88.45 103.82 84.94 104.73 83.19C105.18 82.34 106.78 81.92 107.61 80.87C110.76 76.88 111.46 65.3 111.89 60.07C111.98 59.01 111.31 57.99 112.95 58.29C117.8 61.68 116.24 68.44 115.37 73.58C114.17 80.59 111.51 89.5 103.3 90.51H103.29Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M9.45001 58.28C9.67001 62.38 10.23 67.2 11.45 72.51C13.02 79.32 15.24 85.01 17.34 89.43C8.61001 89.99 5.67001 76.87 5.16001 70.09C4.87001 66.2 4.03001 58.15 9.45001 58.28Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M101.85 46.82C101.2 47.48 101.22 47.61 100.13 47.58C94.29 47.43 86.95 45.64 80.76 45.36C68.63 44.81 53.4 44.75 41.3 45.36C35.11 45.67 28.06 47.43 21.96 47.6C20.21 47.65 20.07 47.35 18.76 46.82L49.17 43.92C66.8 44.03 84.53 43.47 101.85 46.82Z",fill:"#0F0F0F"}),(0,qn.jsx)("path",{d:"M56.52 98.03C56.52 98.03 60.07 101.09 63.35 98.03",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M48.41 107.77C49.17 108.28 53.42 111.05 60.12 110.99C66.58 110.94 70.66 108.31 71.46 107.77",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M14.83 57.57C14.18 60.06 13.13 65.41 14.77 71.87C16.48 78.61 20.2 82.93 22 84.77C35.08 90.14 42.62 88.79 47.2 86.16C53.44 82.58 54.83 76.23 59.95 76.12C65.27 76 67.33 82.75 72.99 86.41C78.45 89.94 88.42 91.35 108.24 81.24C109.42 78.26 110.65 74.38 111.39 69.75C112.09 65.34 112.16 61.44 112 58.34C107.3 56.94 100.73 55.25 92.76 54C90.09 53.58 84.17 52.71 64.31 52.32C36.98 51.79 27.95 52.93 18.38 56.24C16.85 56.77 15.62 57.24 14.84 57.55L14.83 57.57Z",fill:"white"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_165",children:(0,qn.jsx)("rect",{width:"121.07",height:"153.55",fill:"white"})})})]})},Ir=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"123",height:"169",viewBox:"0 0 123 169",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_211)",children:[(0,qn.jsx)("path",{d:"M67.24 0.220002C71 0.430002 72.06 4.2 74.14 4.8C77.63 5.81 81.34 4.69 84.67 5.29C90.29 6.31 99.05 12.57 102.24 17.22C104.26 18.04 105.77 20.1 106.78 23.41C119.45 32.81 118.7 50.32 115.74 64.09C128.93 75.84 121.02 102.23 103.85 106.01L98.76 120.26C94.77 125.66 87.52 136.06 94.99 141.4L111.23 147.93C111.93 148.15 113.29 148.67 113.45 149.61C113.57 150.34 112.93 151 112.7 151.23C95.11 169.34 61.64 168.99 61.64 168.99C38.04 168.74 19.67 159.68 9.22998 153.22C7.95998 151.83 8.41998 150.66 9.41998 149.2L23.84 143.26C35.31 137.24 27.31 125.04 22.09 117.44L18.24 105.54C0.699984 101.43 -6.85002 74.61 7.64998 63.15C4.54998 57.75 4.74998 53.11 6.99998 47.43C3.27998 38.15 7.20999 30.96 14.89 25.33C16.08 11.21 38.04 0.710002 50.99 2.75C55.71 0.400002 61.13 -0.449998 67.24 0.220002Z",fill:"black"}),(0,qn.jsx)("path",{d:"M98.23 94.2301C96.46 128.1 61.37 156.84 34.73 123.23C30.2 117.52 22.96 101.76 23.23 94.71C23.36 91.26 29.61 96.2201 32.02 96.9401C52.99 103.2 77.64 100.54 98.24 94.2201L98.23 94.2301Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M22.24 83.2201C21.18 77.6401 20.12 71.68 21.08 65.96C42.62 65.78 64.01 65.5401 85.24 65.2201C91.06 65.1101 101.43 63.02 102.22 70.81C102.48 73.39 100.2 82.9201 98.7 85.1901C92.08 95.2301 55.97 95.19 44.87 94.09C37.2 93.32 25.7 90.5501 22.23 83.2301L22.24 83.2201Z",fill:"white"}),(0,qn.jsx)("path",{d:"M26.24 59.22C25.26 52.18 28.06 51.61 30.98 46.46C31.73 45.13 32.12 41.49 32.34 41.33C32.96 40.87 36.45 41.47 38.29 40.78C40.7 39.89 42.48 36.69 43.93 36.38C45.61 36.02 47.79 37.48 50.47 37.04C52.57 36.7 56.36 33.38 56.74 33.39C57.22 33.4 60.58 37.85 64.85 38.17C68.18 38.42 75.72 34.9 76.21 35.22C76.45 35.37 76.75 38.82 78.68 40.27C81.72 42.56 87.48 41.47 89.05 42.4C89.5 42.67 91.14 47.83 92.5 48.93C93.86 50.03 96.88 50 97.12 50.32C97.6 50.96 97.01 57.36 98.22 59.21C90.9 59.26 83.54 59.17 76.22 59.21H26.24V59.22Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M85.23 134.22C84.89 138.55 85.5 142.45 87.8 146.16C89.08 148.22 92.11 146.89 90.74 151.17C84.85 169.6 36.81 170.25 29.34 149.6C28.86 147.59 33.37 147.71 35.02 144.5C36.67 141.29 36.21 137.63 36.24 134.22C41.85 136.68 45.74 141.55 52.19 142.76C64.55 145.07 75.93 142.73 85.22 134.22H85.23Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M103.24 97.21C105.99 90.6 104.92 77.96 107.23 71.94C107.62 70.91 109.72 70.24 110.59 70.45C118.42 72.33 113.8 98.52 103.25 97.21H103.24Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M18.23 97.22C10.11 94.09 4.6 80 8.93 72.49C14.86 62.2 17.16 94.4 18.23 97.22Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M85.24 65.2199C85.06 65.2199 83.61 66.2599 81.86 66.2899C61.67 66.6299 41.42 65.8899 21.23 66.2099L22.24 83.2199C20.48 79.4999 18.02 65.9699 22.17 64.6899L85.24 65.2199Z",fill:"white"}),(0,qn.jsx)("path",{d:"M76.24 59.22H26.24C42.89 59.14 59.59 59.33 76.24 59.22Z",fill:"#000001"}),(0,qn.jsx)("path",{d:"M58.72 106.14C58.72 106.14 62.27 109.2 65.55 106.14",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M50.61 115.89C51.37 116.4 55.62 119.17 62.32 119.11C68.78 119.06 72.86 116.43 73.66 115.89",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_211",children:(0,qn.jsx)("rect",{width:"122.34",height:"168.99",fill:"white"})})})]})},Lr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"141",height:"171",viewBox:"0 0 141 171",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_226)",children:[(0,qn.jsx)("path",{d:"M84.21 0.890036C115.37 0.860036 135.31 30.41 129.75 51.67C140.39 58.32 137.53 67.11 133.42 75.72C134.04 86.56 136.33 97.49 140.29 108.51C140.71 109.72 140.09 111.08 138.42 112.61C136.43 115.54 131.37 122.14 122.3 126.06C115.01 129.21 108.5 129.16 105.1 128.88C94.72 126.47 92.15 121.28 92.09 113.38C78.77 120.2 60.51 121.54 47.24 113.8C48.1 122.11 43.17 125.98 33.68 128.7C30.28 129.01 25.17 129.04 19.3 127.34C10.4 124.76 4.58 119.59 1.81 116.76L0.0100021 113.19C3.79 100.55 5.69 88.01 5.7 75.57C0.250002 65.36 1.58 57.7 9.68 52.58C7.51 39.33 13.6 25.65 24.34 14.92C30.67 8.56004 40.54 1.01004 51.68 1.72004C60.99 -0.289964 74.69 -0.499964 84.21 0.890036Z",fill:"black"}),(0,qn.jsx)("path",{d:"M75.8 1.56008C79.56 1.77008 80.62 5.54008 82.7 6.14008C86.19 7.15008 89.9 6.03008 93.23 6.63008C98.85 7.65008 107.61 13.9101 110.8 18.5601C112.82 19.3801 114.33 21.4401 115.34 24.7501C128.01 34.1501 127.26 51.6601 124.3 65.4301C137.49 77.1801 129.58 103.57 112.41 107.35L107.32 121.6C103.33 127 96.08 137.4 103.55 142.74L119.79 149.27C120.49 149.49 121.85 150.01 122.01 150.95C122.13 151.68 121.49 152.34 121.26 152.57C103.67 170.68 70.2 170.33 70.2 170.33C46.6 170.08 28.23 161.02 17.79 154.56C16.52 153.17 16.98 152 17.98 150.54L32.4 144.6C43.87 138.58 35.87 126.38 30.65 118.78L26.8 106.88C9.25 102.76 1.7 75.9401 16.2 64.4901C13.1 59.0901 13.3 54.4501 15.55 48.7701C11.83 39.4901 15.76 32.3001 23.44 26.6701C24.63 12.5401 46.59 2.04008 59.54 4.08008C64.26 1.73008 69.68 0.88008 75.79 1.55008L75.8 1.56008Z",fill:"black"}),(0,qn.jsx)("path",{d:"M42.95 163.44C25.47 153.11 42.43 155.8 46.34 147.93C48.48 143.64 47.56 135.21 47.93 134.67C48.24 134.23 54.77 139.53 56.88 140.3C78.8 148.37 91.5 133.1 92.65 134.67C93.12 135.31 92.56 146.16 95.78 150.45C99.61 155.56 114.43 153.76 96.64 163.44C86.15 169.14 53.31 169.56 42.95 163.44Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M108.52 94.8501C111.77 97.2901 102.02 142.15 71.88 143.36C51.9 144.16 31.41 125.44 31.12 99.9301C40.76 109.12 55.22 110.73 64.63 99.9501C66.9 97.3501 69.43 89.4101 70.01 89.4801C71.2 89.6201 73.61 102.46 86.44 105.69C96.65 108.27 106.39 93.2501 108.52 94.8501Z",fill:"black"}),(0,qn.jsx)("path",{d:"M108.9 94.0501C110.77 96.3601 100.62 119.81 97.47 123.88C69.47 160.06 32.12 128.22 30.34 92.5601C40.08 101.75 54.68 103.36 64.19 92.5801C66.48 89.9801 69.04 82.0401 69.62 82.1101C70.82 82.2501 73.26 95.0901 86.22 98.3201C98.9 101.49 108.16 93.1201 108.9 94.0501Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M35.81 60.22C34.76 60.41 33.9 60.59 33.33 60.72C38.97 58.85 48.55 31.04 50.21 31.38C51.43 31.63 62.44 44.85 68.44 48.47C76.84 53.53 86.12 57.26 95.96 58.24C87.89 58.61 77.24 65.52 69.6 65.27C64.05 65.09 63.5 61.72 55.7 60.22C46.5 58.44 38.06 59.82 35.81 60.22Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M87.76 65.4401C119.5 59.7401 113.81 100.99 86.78 92.7801C72.23 88.3601 71.13 68.4301 87.76 65.4401Z",fill:"white"}),(0,qn.jsx)("path",{d:"M42.03 65.4301C62.43 62.5201 72.25 84.4101 54.91 92.2401C31.77 102.69 19.68 68.6301 42.03 65.4301Z",fill:"white"}),(0,qn.jsx)("path",{d:"M113.88 100C115.93 95.26 113.32 71.83 120.17 74.27C126.77 76.63 121.32 98.02 113.88 100Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M26.36 99.99C18.91 98.5 12.09 76 20.06 74.28C25.95 73.01 23.43 95.68 26.36 99.99Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M102.66 73.4101C111.29 84.4201 85.72 95.9101 81.49 81.1501C78.58 70.9801 97.82 67.2401 102.66 73.4101Z",fill:"white"}),(0,qn.jsx)("path",{d:"M42.02 71.41C52.87 69.09 64.74 77.6 53.71 86.07C40.49 96.23 28.76 74.24 42.02 71.41Z",fill:"white"}),(0,qn.jsx)("path",{d:"M66.79 108.6C66.79 108.6 70.34 111.66 73.62 108.6",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M58.68 118.34C59.44 118.85 63.69 121.62 70.39 121.56C76.85 121.51 80.93 118.88 81.73 118.34",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_226",children:(0,qn.jsx)("rect",{width:"140.41",height:"170.33",fill:"white"})})})]})},kr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"129",height:"166",viewBox:"0 0 129 166",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_180)",children:[(0,qn.jsx)("path",{d:"M77.22 1.06996C105.8 1.03996 124.09 36.54 118.98 62.1C128.74 70.09 126.12 80.65 122.35 91C122.92 104.03 125.02 117.16 128.65 130.4C129.04 131.85 128.46 133.49 126.94 135.32C126.59 145.14 100.12 159.97 90.15 161.18C90.84 158.72 92.91 156.61 96.38 154.87C86.86 151.98 84.51 145.73 84.45 136.24C72.23 144.44 55.48 146.05 43.32 136.74C44.11 146.73 39.59 151.37 30.88 154.65C33.99 156.65 35.85 158.82 36.45 161.18C23.94 157.98 10.53 149.56 1.64999 140.3L-0.0100098 136.01C3.45999 120.82 5.18999 105.75 5.19999 90.8C0.19999 78.53 1.41999 69.32 8.84999 63.17C6.85999 47.25 12.45 30.8 22.29 17.91C28.11 10.29 37.16 1.20996 47.38 2.06996C55.92 -0.35004 68.48 -0.60004 77.21 1.07996L77.22 1.06996Z",fill:"black"}),(0,qn.jsx)("path",{d:"M36.46 161.18C18.98 151.18 35.94 153.78 39.85 146.17C41.99 142.02 41.07 133.86 41.44 133.33C41.75 132.9 48.28 138.03 50.39 138.78C72.31 146.59 85.01 131.81 86.16 133.33C86.63 133.95 86.07 144.45 89.29 148.61C93.12 153.56 107.94 151.82 90.15 161.18C79.66 166.7 46.82 167.11 36.46 161.18Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M103.07 89.59C104.94 91.9 94.79 115.35 91.64 119.42C63.64 155.6 26.29 123.76 24.51 88.1C34.25 97.29 48.85 98.9 58.36 88.12C60.65 85.52 63.21 77.58 63.79 77.65C64.99 77.79 67.43 90.63 80.39 93.86C93.07 97.03 102.33 88.66 103.07 89.59Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M29.99 55.77C28.94 55.96 28.08 56.14 27.51 56.27C33.15 54.4 42.73 26.59 44.39 26.93C45.61 27.18 56.62 40.4 62.62 44.02C71.02 49.08 80.3 52.81 90.14 53.79C82.07 54.16 71.42 61.07 63.78 60.82C58.23 60.64 57.68 57.27 49.88 55.77C40.68 53.99 32.24 55.37 29.99 55.77Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M81.94 60.9899C113.68 55.2899 107.99 96.5399 80.96 88.3299C66.41 83.9099 65.31 63.9799 81.94 60.9899Z",fill:"white"}),(0,qn.jsx)("path",{d:"M36.2 60.98C56.6 58.07 66.42 79.96 49.08 87.79C25.94 98.24 13.85 64.18 36.2 60.98Z",fill:"white"}),(0,qn.jsx)("path",{d:"M108.06 95.5499C110.11 90.8099 107.5 67.3799 114.35 69.8199C120.95 72.1799 115.5 93.5699 108.06 95.5499Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M20.54 95.5399C13.09 94.0499 6.26998 71.5499 14.24 69.8299C20.13 68.5599 17.61 91.2299 20.54 95.5399Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M96.84 68.96C105.47 79.97 79.9 91.46 75.67 76.7C72.76 66.53 92 62.79 96.84 68.96Z",fill:"white"}),(0,qn.jsx)("path",{d:"M36.2 66.9499C47.05 64.6299 58.92 73.1399 47.89 81.6099C34.67 91.7699 22.94 69.7799 36.2 66.9499Z",fill:"white"}),(0,qn.jsx)("path",{d:"M60.97 104.15C60.97 104.15 64.52 107.21 67.8 104.15",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M52.86 113.89C53.62 114.4 57.87 117.17 64.57 117.11C71.03 117.06 75.11 114.43 75.91 113.89",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_180",children:(0,qn.jsx)("rect",{width:"128.77",height:"165.48",fill:"white"})})})]})},jr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"139",height:"164",viewBox:"0 0 139 164",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_153)",children:[(0,qn.jsx)("path",{d:"M4.19001 89.67C4.26001 87.7 5.22001 85.69 7.07001 83.62C5.72001 79.91 5.29001 76.18 5.79001 72.43C2.03001 66.91 7.80001 60.12 12.04 56.46C10.26 47.92 11.83 41.26 19.02 35.91L20.82 33.0801C15.23 5.77005 57.51 -2.04995 77.92 0.430048C106.74 3.94005 118.4 20.44 124.11 46.39C133.11 52.41 135.52 62.52 129.57 71.54C138.95 79.63 141.11 87.78 133.49 98.29C139.47 105.48 140.43 111.68 136.72 120.59L134.2 121.67C134.08 121.99 131.41 123.01 131.3 124.3C131.12 126.33 135.72 129.25 134.74 132.64C133.71 136.21 114.74 150.17 110.49 152.47C80.7 168.67 43.87 167.24 16.28 147.08C2.21001 136.79 1.61001 136.39 4.19001 119.67C3.22001 118.66 3.53001 116.72 5.13001 113.83C-0.199987 107.68 -2.67999 95.24 4.19001 89.67Z",fill:"black"}),(0,qn.jsx)("path",{d:"M71.19 69.9301C71.87 78.8401 78.5 86.1401 87.07 87.6101C95.08 88.9801 103.23 84.9901 107.21 77.6801C105.77 137.8 40.74 146.64 32.19 82.6801C38.34 86.5401 44.28 88.4201 50.13 87.6701C56.42 86.8601 60.6 83.3901 62.68 81.6701C67.78 77.4401 70.16 72.5001 71.19 69.9301Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M102.19 144.69C103.27 146.7 94.09 153.94 92.07 155.05C76.11 163.82 46.6 162.6 37.15 145.21C45.85 141.78 48.3 134.44 47.2 125.68C61.98 136.2 78.22 137.27 92.18 124.67C86.5 137.11 101.54 143.47 102.19 144.69Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M66.08 23.7901C66.55 24.0001 68.81 29.4601 73.45 30.9001C78.09 32.3401 86.26 30.4301 89.66 33.6901C91.94 35.8801 92.44 44.0201 93.98 47.3701C95.6 50.8801 98.99 50.4301 99.18 53.6601L37.19 52.6501C45.47 49.1901 45.32 37.9101 47.69 34.6601C48.55 33.4701 52.21 33.1601 54.23 31.2001C57.25 28.2901 60.01 21.1101 66.08 23.7801V23.7901Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M78.4 61.47C86.49 61.36 94.58 61.25 102.67 61.14C104.17 61.12 105.39 62.34 105.39 63.84C105.37 72.14 101.21 79 95.23 81.2C90.34 83 85.84 81.09 85.19 80.81C79.46 78.28 75.72 71.74 75.76 64.06C75.76 62.63 76.97 61.49 78.4 61.47Z",fill:"white"}),(0,qn.jsx)("path",{d:"M66.39 63.42C62.57 86.54 30.35 89.3401 31.98 61.9901C32.06 60.7001 33.16 59.7001 34.46 59.7401C44.34 60.0301 54.21 60.32 64.09 60.6C65.55 60.64 66.63 61.98 66.39 63.42Z",fill:"white"}),(0,qn.jsx)("path",{d:"M66.3 95.65C66.3 95.65 69.85 98.71 73.13 95.65",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M58.19 105.39C58.95 105.9 63.2 108.67 69.9 108.61C76.36 108.56 80.44 105.93 81.24 105.39",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_153",children:(0,qn.jsx)("rect",{width:"138.9",height:"163.53",fill:"white"})})})]})},Fr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"138",height:"166",viewBox:"0 0 138 166",fill:"none",children:[(0,qn.jsxs)("g",{"clip-path":"url(#clip0_138_196)",children:[(0,qn.jsx)("path",{d:"M84.02 2.55005C93.17 0.860049 103.35 5.17005 107.79 14.15C118.96 16.19 132.43 33.6601 132.82 44.4001L132.08 53.3C139.32 60.73 137.84 69.08 132.98 77.32C137.7 86.58 134.14 92.9 127.29 99.72C126.73 101.68 124.88 107.2 119.41 111.22C116.13 113.63 112.85 114.55 110.88 114.93C111.06 115.38 112.57 119.3 110.46 122.61C108.33 125.95 103.39 127.31 98.88 125.27C95.81 131.1 96.2 134.48 97.18 136.51C99.2 140.69 106.35 144.81 111.28 146.27C115.24 147.44 116.82 149.2 116.03 151.54C103.91 159.24 92.19 162.93 78.03 164.54C76.77 164.59 76.1 164.26 76.03 163.54L76.29 162.17C79.75 161.19 97.12 154.51 96.66 150.52C90.71 148.46 88.76 143.82 88.5 137.52C77.06 144.76 62.79 145.33 51.42 137.77C50.67 143.68 49.31 149.76 42.33 150.39C46.54 156.51 54.35 159.88 61.43 161.41L63.04 163.54C63.08 165.04 59.56 164.88 58.04 164.54C44.02 162.87 33.52 158.59 21.03 152.49C20.67 151.62 22.05 150.68 22.04 150.54L22.63 148.21L34.88 144.17C35.72 143.93 39.99 142.6 41.99 138.45C44.11 134.07 42.82 128.33 38.63 124.5C38.25 124.96 35.91 127.68 32.25 127.69C28.51 127.71 24.65 124.9 24.21 121.05C23.83 117.78 26.11 115.33 26.51 114.92C25.48 114.8 17.85 113.74 13.66 106.87C10.86 102.29 11.16 97.7 11.33 96.1C3.15997 90.82 1.20997 82.41 4.83997 73.61C-1.26003 65.49 -2.59003 53.3101 6.89997 47.43C7.44997 37 7.92997 28 19.56 24.39C22.19 15.39 27.25 10.44 36.79 10.6C44.21 1.93005 54.63 -1.41995 68.02 0.550049C74.29 -0.149951 78.26 1.05005 84.02 2.55005Z",fill:"black"}),(0,qn.jsx)("path",{d:"M41.72 153.86C41.38 154.16 39.28 155.91 36 155.92C32.65 155.93 29.19 154.12 28.79 151.64C28.45 149.53 30.5 147.95 30.85 147.68C29.93 147.6 23.09 146.92 19.33 142.49C16.82 139.54 17.09 136.57 17.24 135.54C9.90998 132.13 8.16998 126.7 11.42 121.02C5.94998 115.78 4.75998 107.92 13.27 104.12C13.76 97.39 14.19 91.58 24.62 89.25C26.98 83.44 31.52 80.24 40.06 80.35C46.73 74.74 56.06 72.57 68.07 73.85C73.69 73.4 77.25 74.17 82.41 75.14C90.61 74.05 99.74 76.83 103.72 82.63C113.73 83.95 125.8 95.22 126.16 102.16L125.49 107.91C131.98 112.71 130.65 118.09 126.29 123.42C130.52 129.4 127.33 133.48 121.19 137.88C120.69 139.14 119.03 142.71 114.13 145.3C111.19 146.86 108.25 147.45 106.48 147.69C106.64 147.98 107.99 150.51 106.1 152.65C104.19 154.8 99.76 155.69 95.72 154.37",fill:"black"}),(0,qn.jsx)("path",{d:"M70.02 77.38C70.7 86.29 77.33 93.59 85.9 95.06C93.91 96.43 102.06 92.44 106.04 85.13C108.77 114.4 85.51 135.87 65.48 134.17C48.14 132.69 30.97 113.66 31.76 89.08C33.71 90.3 36.59 91.89 40.29 93.19C43.65 94.37 46.02 95.2 48.97 95.12C54.65 94.96 58.69 91.47 61.52 89.12C66.62 84.89 69 79.95 70.03 77.38H70.02Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M101.01 150.21C102.09 152.22 92.91 159.46 90.89 160.57C74.93 169.34 45.42 168.12 35.97 150.73C44.67 147.3 47.12 139.96 46.02 131.2C60.8 141.72 77.04 142.79 91 130.19C85.32 142.63 100.36 148.99 101.01 150.21Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M64.91 31.25C65.38 31.46 67.64 36.92 72.28 38.36C77.09 39.85 85.09 37.89 88.49 41.15C90.77 43.34 91.27 51.48 92.81 54.83C94.43 58.34 97.82 57.89 98.01 61.12L36.02 60.11C44.3 56.65 44.15 45.37 46.52 42.12C47.38 40.93 51.04 40.62 53.06 38.66C56.08 35.75 58.84 28.57 64.91 31.24V31.25Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M65.1199 103.1C65.1199 103.1 68.6699 106.16 71.9499 103.1",stroke:"#141313","stroke-width":"4","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M57.0099 112.85C57.7699 113.36 62.02 116.13 68.72 116.07C75.18 116.02 79.2599 113.39 80.0599 112.85",stroke:"#141313","stroke-width":"5","stroke-miterlimit":"10","stroke-linecap":"round"}),(0,qn.jsx)("path",{d:"M29.4399 85.7601C28.4199 80.1201 27.4099 74.1001 28.4099 68.3301C49.9099 68.3101 71.2499 68.2201 92.4399 68.0601C98.2499 67.9901 108.61 65.9601 109.34 73.8201C109.58 76.4301 107.23 86.0201 105.73 88.3001C99.05 98.3801 63.0199 98.0801 51.9499 96.8801C44.2999 96.0501 32.8499 93.1601 29.4399 85.7501V85.7601Z",fill:"white"}),(0,qn.jsx)("path",{d:"M27.82 91.94C17.88 92.65 12.22 69.52 23.84 71.41C26.73 73.16 26.49 88.04 27.82 91.94Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M108.83 93.94C109.99 90.13 110.55 64.42 117.82 74.44C123.08 81.69 116.47 91.78 108.83 93.94Z",fill:"#EB0028"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_138_196",children:(0,qn.jsx)("rect",{width:"137.07",height:"165.91",fill:"white"})})})]})},Mr=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"147",height:"149",viewBox:"0 0 147 149",fill:"none",children:[(0,qn.jsxs)("g",{clipPath:"url(#clip0_127_130)",children:[(0,qn.jsx)("path",{d:"M97.58 120.59C102.79 121.1 115.56 128.03 130.5 140.1C128.54 141.49 126.59 142.89 124.63 144.28C118.69 145.3 110.83 146.47 101.54 147.38C94.33 148.08 85.21 149 73.57 148.88C51.8 148.64 33.47 145.18 19.82 141.55C17.59 140.84 15.36 140.13 13.13 139.41C15.87 135.27 21.62 128.94 30.57 124.09C35.71 121.31 40.14 120.47 43.77 120.45C50.96 120.41 64.24 123.52 93.11 120.44C93.11 120.44 95.16 120.35 97.57 120.58L97.58 120.59Z",fill:"white"}),(0,qn.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",fill:"black"}),(0,qn.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",stroke:"black",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,qn.jsx)("path",{d:"M16.16 45.99L18.09 46.32C25.9 -7.21003 117.19 -10.62 127.12 43.1C127.48 43.87 128.3 44.03 129.16 43.99C130.55 44.19 131.88 45.52 133.16 47.99C134.61 48.18 136.67 48.65 138.66 49.99C148.02 56.27 149.2 77.23 138.9 88.66C134.18 93.91 128.04 96.04 123.6 96.94C122.65 99.61 120.48 104.57 115.69 109.03C112.16 112.31 108.56 114.07 106.16 115.01C109.99 116.81 115.3 119.86 120.35 125C125.77 130.5 132.65 140.18 130.18 143.39C129.55 144.21 128.11 144.87 124.62 144.29C115.89 127.58 106.98 122.63 100.28 121.31C90.52 119.39 86.78 125.45 71.34 125.22C56.77 125 53.64 119.75 44.11 121.48C37.81 122.62 28.96 126.8 19.81 141.56C15.8 142.09 14.13 141.38 13.47 140.38C11.33 137.11 18.42 128.37 24.13 123.47C30.35 118.14 36.87 115.7 41.15 114.5C38.44 112.92 35.06 110.59 31.69 107.19C26.96 102.42 24.2 97.51 22.63 94.08C20.06 94.08 16.22 93.67 12.34 91.58C2.93 86.49 -2.11 73.95 0.840001 63.17C3.02 55.19 8.9 50.64 11.27 49.01C12.06 48.35 13.03 47.64 14.2 46.97C14.89 46.58 15.55 46.25 16.16 45.99Z",fill:"black"}),(0,qn.jsx)("path",{d:"M45.79 21.11C46.76 20.49 64.97 10.58 86.1 16.3C118.49 25.07 137.63 64.34 115.97 97.29C101.6 119.16 66.6 118.67 46.62 109.02C42.8 107.18 36.86 104.2 31.82 97.84C15.8 77.61 20.31 37.33 45.79 21.11Z",fill:"white"}),(0,qn.jsx)("path",{d:"M126.17 89.9799C124.24 88.5699 127.9 83.6199 128.84 73.8999C130.06 61.3699 125.49 54.0999 128.64 52.0199C130.88 50.5399 135.24 52.8899 137.64 55.1299C144.54 61.5699 143.69 74.9999 137.68 83.0099C134.13 87.7399 128.14 91.4199 126.16 89.9799H126.17Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M20.18 89.9799C22.11 88.5699 18.45 83.6199 17.51 73.8999C16.29 61.3699 20.86 54.0999 17.71 52.0199C15.47 50.5399 11.11 52.8899 8.71 55.1299C1.81 61.5699 2.66 74.9999 8.67 83.0099C12.22 87.7399 18.21 91.4199 20.19 89.9799H20.18Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M58.71 39.53C75.92 37.11 108.78 38.15 115.24 58.48C130.99 108.03 49.73 105.35 36.43 88.29C21.6 69.28 36.13 42.71 58.72 39.53H58.71Z",fill:"black"}),(0,qn.jsx)("path",{d:"M54.09 78.49C59.3201 78.49 63.56 74.2501 63.56 69.02C63.56 63.7898 59.3201 59.55 54.09 59.55C48.8599 59.55 44.62 63.7898 44.62 69.02C44.62 74.2501 48.8599 78.49 54.09 78.49Z",fill:"#EF2D3F"}),(0,qn.jsx)("path",{d:"M93.73 78.73C98.9601 78.73 103.2 74.4901 103.2 69.26C103.2 64.0298 98.9601 59.79 93.73 59.79C88.4999 59.79 84.26 64.0298 84.26 69.26C84.26 74.4901 88.4999 78.73 93.73 78.73Z",fill:"#EF2D3F"}),(0,qn.jsx)("path",{d:"M18.63 45.0599C19.35 41.4399 22.71 27.1899 37.94 17.1199C52.06 7.77994 67.33 8.03994 73.63 8.13994C79.78 8.23994 98.28 8.79994 113.26 21.1899C124.01 30.0899 127.43 40.5199 128.58 45.0599",stroke:"#EB0028",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_127_130",children:(0,qn.jsx)("rect",{width:"146.17",height:"148.89",fill:"white"})})})]})},Ur=function(e){return e.className,(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"147",height:"149",viewBox:"0 0 147 149",fill:"none",children:[(0,qn.jsxs)("g",{clipPath:"url(#clip0_127_144)",children:[(0,qn.jsx)("path",{d:"M97.58 120.59C102.79 121.1 115.56 128.03 130.5 140.1C128.54 141.49 126.59 142.89 124.63 144.28C118.69 145.3 110.83 146.47 101.54 147.38C94.33 148.08 85.21 149 73.57 148.88C51.8 148.64 33.47 145.18 19.82 141.55C17.59 140.84 15.36 140.13 13.13 139.41C15.87 135.27 21.62 128.94 30.57 124.09C35.71 121.31 40.14 120.47 43.77 120.45C50.96 120.41 64.24 123.52 93.11 120.44C93.11 120.44 95.16 120.35 97.57 120.58L97.58 120.59Z",fill:"white"}),(0,qn.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",fill:"black"}),(0,qn.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",stroke:"black",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,qn.jsx)("path",{d:"M16.16 45.99L18.09 46.32C25.9 -7.21003 117.19 -10.62 127.12 43.1C127.48 43.87 128.3 44.03 129.16 43.99C130.55 44.19 131.88 45.52 133.16 47.99C134.61 48.18 136.67 48.65 138.66 49.99C148.02 56.27 149.2 77.23 138.9 88.66C134.18 93.91 128.04 96.04 123.6 96.94C122.65 99.61 120.48 104.57 115.69 109.03C112.16 112.31 108.56 114.07 106.16 115.01C109.99 116.81 115.3 119.86 120.35 125C125.77 130.5 132.65 140.18 130.18 143.39C129.55 144.21 128.11 144.87 124.62 144.29C115.89 127.58 106.98 122.63 100.28 121.31C90.52 119.39 86.78 125.45 71.34 125.22C56.77 125 53.64 119.75 44.11 121.48C37.81 122.62 28.96 126.8 19.81 141.56C15.8 142.09 14.13 141.38 13.47 140.38C11.33 137.11 18.42 128.37 24.13 123.47C30.35 118.14 36.87 115.7 41.15 114.5C38.44 112.92 35.06 110.59 31.69 107.19C26.96 102.42 24.2 97.51 22.63 94.08C20.06 94.08 16.22 93.67 12.34 91.58C2.93 86.49 -2.11 73.95 0.839995 63.17C3.02 55.19 8.9 50.64 11.27 49.01C12.06 48.35 13.03 47.64 14.2 46.97C14.89 46.58 15.55 46.25 16.16 45.99Z",fill:"black"}),(0,qn.jsx)("path",{d:"M45.79 21.11C46.76 20.49 64.97 10.58 86.1 16.3C118.49 25.07 137.63 64.34 115.97 97.29C101.6 119.16 66.6 118.67 46.62 109.02C42.8 107.18 36.86 104.2 31.82 97.84C15.8 77.61 20.31 37.33 45.79 21.11Z",fill:"white"}),(0,qn.jsx)("path",{d:"M126.17 89.98C124.24 88.57 127.9 83.62 128.84 73.9C130.06 61.37 125.49 54.1 128.64 52.02C130.88 50.54 135.24 52.89 137.64 55.13C144.54 61.57 143.69 75 137.68 83.01C134.13 87.74 128.14 91.42 126.16 89.98H126.17Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M20.18 89.98C22.11 88.57 18.45 83.62 17.51 73.9C16.29 61.37 20.86 54.1 17.71 52.02C15.47 50.54 11.11 52.89 8.71 55.13C1.81 61.57 2.66 75 8.67 83.01C12.22 87.74 18.21 91.42 20.19 89.98H20.18Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M58.71 39.53C75.92 37.11 108.78 38.15 115.24 58.48C130.99 108.03 49.73 105.35 36.43 88.29C21.6 69.28 36.13 42.71 58.72 39.53H58.71Z",fill:"black"}),(0,qn.jsx)("path",{d:"M18.63 45.0599C19.35 41.4399 22.71 27.1899 37.94 17.1199C52.06 7.77994 67.33 8.03994 73.63 8.13994C79.78 8.23994 98.28 8.79994 113.26 21.1899C124.01 30.0899 127.43 40.5199 128.58 45.0599",stroke:"#EB0028",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,qn.jsx)("path",{d:"M46.25 59.94H50.67L55.47 67.75L60.33 59.94H64.66L57.66 70.23L65.22 81.26H60.72L55.73 73.53L50.03 81.26H45.64L53.29 70.36L46.25 59.94Z",fill:"#EB0028"}),(0,qn.jsx)("path",{d:"M83.19 59.94H87.62L92.41 67.75L97.28 59.94H101.6L94.6 70.23L102.16 81.26H97.66L92.67 73.53L86.97 81.26H82.58L90.23 70.36L83.19 59.94Z",fill:"#EB0028"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_127_144",children:(0,qn.jsx)("rect",{width:"146.17",height:"148.89",fill:"white"})})})]})},Tr={homem1:Dr,homem2:Or,homem3:Ir,mulher1:Lr,mulher2:kr,mulher3:jr,mulher4:Fr,robo1:Mr,robo2:Ur};function Rr(e){var t=e.toLowerCase(),n=Tr[t];return n?(0,qn.jsx)(n,{}):(console.warn('Avatar "'.concat(e,'" não encontrado.')),null)}function Nr(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Wr=function(e){var n,r,i=e.onPerfilClick,o=J(),a=(n=(0,t.useState)(localStorage.getItem("avatar")||"homem3"),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Nr(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Nr(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=a[0];return a[1],(0,qn.jsxs)(xr,{children:[(0,qn.jsx)(ur,{onClick:function(){o("/cronograma")},className:"logo"}),(0,qn.jsx)(_r,{className:"perfil",ativado:!0,onClick:function(){i&&i()},children:Rr(s)})]})};var Br,zr=Bn.article(Br||(Br=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    gap: 2rem;\n    \n    .perfil {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        gap: 2rem;\n    }\n"])));function Gr(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Vr=(0,t.createContext)();function Hr(e){var n,r,i=e.children,o=(n=(0,t.useState)(localStorage.getItem("pontuacao")),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Gr(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Gr(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,t.useEffect)((function(){var e=localStorage.getItem("pontuacao");e&&s(parseInt(e))}),[]),(0,t.useEffect)((function(){null!==a?localStorage.setItem("pontuacao",a.toString()):localStorage.removeItem("pontuacao")}),[a]);var l={pontuacao:a,adicionarPontos:function(){s((function(e){return e+20}))},resetarPontuacao:function(){s(0)}};return(0,qn.jsx)(Vr.Provider,{value:l,children:i})}function Jr(){var e=(0,t.useContext)(Vr);if(void 0===e)throw new Error("usePontuacao deve ser usado dentro de um PontuacaoProvider");return e}function Qr(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Yr(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Yr(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yr(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const $r=function(){var e=Qr((0,t.useState)(localStorage.getItem("avatar")||"homem3"),2),n=e[0],r=(e[1],localStorage.getItem("name")),i=Qr((0,t.useState)(0),2),o=i[0],a=i[1],s=J(),l=Jr().resetarPontuacao;return(0,t.useEffect)((function(){var e=localStorage.getItem("pontuacao");e&&a(parseInt(e))}),[o]),(0,qn.jsxs)(zr,{children:[(0,qn.jsxs)("div",{className:"perfil",children:[(0,qn.jsx)(_r,{ativado:!0,children:Rr(n)}),(0,qn.jsxs)("div",{children:[(0,qn.jsx)("div",{children:"Pontuação"}),(0,qn.jsx)("div",{children:o})]})]}),(0,qn.jsx)("div",{children:r}),(0,qn.jsx)(Zn,{onClick:function(){(JSON.parse(localStorage.getItem("completedQuizzes"))||[]).length>0?(localStorage.getItem("palestrante-id")&&localStorage.setItem("palestrante-id",0),s("/ranking")):alert("Você ainda não completou nenhum quiz.")},children:"RANKING GERAL"}),(0,qn.jsx)(Zn,{onClick:function(){localStorage.removeItem("name"),localStorage.removeItem("avatar"),localStorage.removeItem("pontuacao"),localStorage.removeItem("toolTipCronograma"),localStorage.removeItem("id"),localStorage.removeItem("palestrante"),localStorage.removeItem("completedQuizzes"),localStorage.removeItem("palestrante-id"),l();for(var e=0;e<5;e++)localStorage.removeItem("perguntaAtual-".concat(e)),localStorage.removeItem("score-".concat(e));s("/")},children:"LOGOUT"})]})};var qr,Zr;function Xr(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var Kr=Bn.div(qr||(qr=Xr(["\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: ",";\n    z-index: 1000;\n"])),(function(e){return e.isOpen?"block":"none"})),ei=Bn.div(Zr||(Zr=Xr(["\n    position: fixed;\n    top: 0;\n    right: 0;\n    width: 300px;\n    height: 100%;\n    background-color: #000000;\n    color: white;\n    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.2);\n    transform: translateX(",");\n    transition: transform 0.3s ease-in-out;\n    z-index: 10001;\n    padding: 1.5rem;\n"])),(function(e){return e.isOpen?"0":"100%"}));const ti=function(e){var n=e.isOpen,r=e.onClose,i=e.children,o=(0,t.useRef)(null);return(0,t.useEffect)((function(){function e(e){o.current&&!o.current.contains(e.target)&&r()}return n&&document.addEventListener("mousedown",e),function(){document.removeEventListener("mousedown",e)}}),[n,r]),(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(Kr,{isOpen:n,onClick:r}),(0,qn.jsx)(ei,{ref:o,isOpen:n,children:i})]})};function ni(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const ri=function(e){var n,r,i=(n=(0,t.useState)(!1),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return ni(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ni(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[0],a=i[1];return(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(Wr,{onPerfilClick:function(){a(!o)}}),(0,qn.jsx)("div",{className:"container",children:e.children}),(0,qn.jsx)(ti,{isOpen:o,onClose:function(){return a(!1)},children:(0,qn.jsx)($r,{})})]})};var ii,oi,ai=Bn.article(ii||(ii=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    gap: 2rem;\n    justify-content: center;\n\n    img {\n        width: 4.6875rem;\n        height: 4.6875rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n\n        border-radius: 3.125rem;\n        border: 2px solid #FFF;\n        object-fit: scale-down;\n    }\n    \n    &.active{\n        z-index: 9999 !important;\n    }\n\n    &.posterior{\n        .nomePalestrante {\n            color: #A7A7A7 !important;\n        }\n        \n        img {\n            border-radius: 3.125rem;\n            border: 3px solid #878787;\n            filter: saturate(0%);\n        }\n    }\n    \n    &.dentro{\n        .nomePalestrante {\n            color: #CD0909 !important;\n        }\n        \n        img {\n            border: 2px solid #CD0909 !important;\n        }\n    }\n\n    .informacoesPalestrante {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n        \n        .nomePalestrante {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 1.25rem;\n            font-style: normal;\n            font-weight: 900;\n            line-height: normal;\n\n            text-transform: uppercase;\n            width: 8rem;\n        }\n    }\n    \n    .setaEnviarParaPaginaPalestrante {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        cursor: pointer;\n\n        svg {\n            width: 2.5rem;\n            height: 2.5rem;\n        }\n    }\n"]))),si=Bn.article(oi||(oi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(['\n    display: none;\n    position: absolute;\n    width: 19rem;\n    flex-shrink: 0;\n    border-radius: 0.625rem;\n    background: #FFF;\n    z-index: 2;\n    color: black;\n    padding: 1rem 0;\n    box-sizing: content-box;\n    overflow-y: auto;\n    max-height: 80vh;\n\n    &::-webkit-scrollbar {\n        width: 0px; /* Oculta a barra de rolagem horizontal */\n        background: transparent; /* Oculta o fundo da barra de rolagem */\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background: transparent; /* Oculta o "polegar" da barra de rolagem */\n    }\n    \n    &.active{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 2rem;\n        z-index: 30001;\n    }\n    \n    img{\n        width: 17.5rem;\n        height: 17.5rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n        border-radius: 0.625rem !important;\n        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n        border: none;\n        object-fit: cover;\n    }\n    \n    .informacoes-convidado{\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        width: 14.5625rem;\n    }\n\n    .nome-convidado{\n        color: #000;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .horario{\n        color: #000;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .descricao-convidado{\n        width: 14.5625rem;\n        flex-shrink: 0;\n\n        color: #000;\n        font-family: Inter;\n        font-size: 0.75rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .fechar{\n        position: absolute;\n        right: 1rem;\n        top: 1.5rem;\n        z-index: 999;\n        \n        cursor: pointer;\n        \n        &:hover{\n            transform: scale(1.1);\n        }\n        \n        &:active{\n            transform: scale(0.9);\n        }\n    }\n'])));const li=function(e){var t=e.className,n=e.onClick,r=e.textoBotao,i=e.disabled,o=e.nomeConvidado,a=e.horaInicio,s=e.horaFim,l=e.onClickBotao,c=e.descricao,d=e.imagemConvidado;return(0,qn.jsxs)(si,{className:t,children:[(0,qn.jsx)("div",{className:"fechar",onClick:n,children:(0,qn.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",children:(0,qn.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22ZM8.96965 8.96967C9.26254 8.67678 9.73742 8.67678 10.0303 8.96967L12 10.9394L13.9696 8.96969C14.2625 8.6768 14.7374 8.6768 15.0303 8.96969C15.3232 9.26258 15.3232 9.73746 15.0303 10.0303L13.0606 12L15.0303 13.9697C15.3232 14.2625 15.3232 14.7374 15.0303 15.0303C14.7374 15.3232 14.2625 15.3232 13.9696 15.0303L12 13.0607L10.0303 15.0303C9.73744 15.3232 9.26256 15.3232 8.96967 15.0303C8.67678 14.7374 8.67678 14.2626 8.96967 13.9697L10.9393 12L8.96965 10.0303C8.67676 9.73744 8.67676 9.26256 8.96965 8.96967Z",fill:"white"})})}),(0,qn.jsx)("img",{src:d,alt:"Foto do convidado",className:"imagem-convidado"}),(0,qn.jsxs)("div",{className:"informacoes-convidado",children:[(0,qn.jsx)("div",{className:"nome-convidado",children:o}),(0,qn.jsxs)("div",{className:"horario",children:[a," - ",s]})]}),(0,qn.jsx)("div",{className:"descricao-convidado",children:c}),(0,qn.jsx)(Zn,{onClick:l,disabled:i,children:r})]})};var ci,di=Bn.article(ci||(ci=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 100%;\n    height: 100%;\n    background: rgb(0 0 0 / 64%);\n    \n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 30000;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    &.hidden {\n        display: none;\n    }\n"])));const ui=function(e){var t=e.className,n=e.children,r=e.onClick;return(0,qn.jsx)(di,{className:t,onClick:r,children:n})};function mi(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return pi(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?pi(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pi(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const fi=function(e){var n=e.urlFotoConvidado,r=void 0===n?"imagens/fotoDefaultCronogramaPalestrante.png":n,i=e.nomeConvidado,o=e.horarioInicio,a=e.horarioFim,s=e.onClick,l=e.onClickFinalizado,c=e.id,d=e.descricao,u=mi((0,t.useState)(new Date),2),m=u[0],p=u[1],f=mi((0,t.useState)(!1),2),h=f[0],g=f[1],C=mi((0,t.useState)("anterior"),2),v=C[0],A=C[1],b=mi((0,t.useState)((function(){return s})),2),y=b[0],S=b[1],w=mi((0,t.useState)(!1),2),P=w[0],x=w[1],E=mi((0,t.useState)("DINÂMICA"),2),_=E[0],D=E[1];(0,t.useEffect)((function(){var e=setInterval((function(){var e=new Date;p(e)}),6e4);return function(){return clearInterval(e)}}),[]),(0,t.useEffect)((function(){!function(e,t){var n=mi(e.split(":").map(Number),2),r=(n[0],n[1],mi(t.split(":").map(Number),2)),i=(r[0],r[1],mi(O().split(":").map(Number),2)),o=i[0],a=i[1],s=new Date;s.setHours(0,1);var c=new Date;c.setHours(23,59);var d=new Date;d.setHours(o,a),d<s?(D("ESPERANDO.."),x(!0),A("anterior")):d>c?(D("VER RANKING"),x(!1),A("posterior"),S((function(){return l}))):(D("DINÂMICA"),x(!1),A("dentro"))}(o,a)}),[o,a,m]);var O=function(){var e=new Date,t=e.getHours().toString().padStart(2,"0"),n=e.getMinutes().toString().padStart(2,"0");return"".concat(t,":").concat(n)},I=function(){g(!1)};return(0,qn.jsxs)(ai,{className:"".concat(v," ").concat(h?"active":"hidden"),id:c,onClick:function(){h||g((function(e){return!e}))},children:[(0,qn.jsx)("img",{src:r,alt:"Foto do convidado",className:"fotoConvidado"}),(0,qn.jsxs)("div",{className:"informacoesPalestrante",children:[(0,qn.jsx)("div",{className:"nomePalestrante",children:i}),(0,qn.jsxs)("div",{className:"horarioPalestrante",children:[o," - ",a]})]}),(0,qn.jsxs)("div",{className:"setaEnviarParaPaginaPalestrante",children:["anterior"===v&&(0,qn.jsx)("div",{className:"toolTip",children:(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,qn.jsxs)("g",{clipPath:"url(#clip0_45_430)",children:[(0,qn.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2001 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8143 5.98995e-07H8.18572C7.44668 -0.000491588 6.7679 0.302368 6.28462 0.787555C5.79949 1.27083 5.49658 1.94912 5.49756 2.68816V5.83565C5.49756 7.72734 6.28041 9.53428 7.66056 10.8282L9.98751 13.0096C10.1156 13.1301 10.1887 13.2978 10.1887 13.474V14.5258C10.1887 14.702 10.1156 14.8692 9.98801 14.9894L7.66062 17.1717C6.28047 18.4651 5.49762 20.2725 5.49762 22.1642V25.3117C5.49663 26.0508 5.7996 26.7291 6.28468 27.2123C6.76801 27.6975 7.44673 28.0004 8.18578 27.9999H19.8143C20.5534 28.0004 21.2317 27.6975 21.715 27.2123C22.2001 26.729 22.503 26.0508 22.5026 25.3117V22.1643C22.5026 20.2726 21.7197 18.4652 20.3396 17.1718L18.0126 14.9899C17.884 14.8693 17.8115 14.7021 17.8115 14.5259V13.4741C17.8114 13.2979 17.884 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2637 25.7612C20.1454 25.878 19.9933 25.9472 19.8143 25.9477H8.18572C8.00673 25.9472 7.8541 25.878 7.73587 25.7612C7.61905 25.643 7.55031 25.4908 7.54982 25.3118V22.1643C7.54982 20.8402 8.09812 19.5745 9.06417 18.6692L11.3911 16.4869C11.9333 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9333 12.0205 11.3907 11.5126L9.06417 9.33084C8.09806 8.42554 7.54982 7.16029 7.54982 5.83576V2.68822C7.55031 2.50923 7.61905 2.35709 7.73587 2.23836C7.8541 2.12204 8.00673 2.05275 8.18572 2.05231H19.8143C19.9932 2.05275 20.1454 2.12198 20.2637 2.23836C20.3805 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6089 11.5126C16.0667 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6094 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"white"}),(0,qn.jsx)("path",{d:"M12.9752 20.7238L8.74622 24.9528H19.2532L15.0242 20.7238C14.4585 20.1586 13.5414 20.1586 12.9752 20.7238Z",fill:"white"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_45_430",children:(0,qn.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]})}),"posterior"===v&&(0,qn.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:l,children:(0,qn.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M36.6667 20C36.6667 29.2047 29.2047 36.6667 20 36.6667C10.7953 36.6667 3.33337 29.2047 3.33337 20C3.33337 10.7952 10.7953 3.33333 20 3.33333C29.2047 3.33333 36.6667 10.7952 36.6667 20ZM26.7172 14.9494C27.2054 15.4376 27.2054 16.2291 26.7172 16.7172L18.3839 25.0505C17.8957 25.5387 17.1044 25.5387 16.6162 25.0505L13.2828 21.7172C12.7947 21.229 12.7947 20.4377 13.2828 19.9495C13.771 19.4613 14.5624 19.4613 15.0506 19.9495L17.5 22.3988L21.2247 18.6742L24.9495 14.9494C25.4377 14.4613 26.229 14.4613 26.7172 14.9494Z",fill:"white"})}),"dentro"===v&&(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:s,children:[(0,qn.jsx)("path",{d:"M1.66663 25V15C1.66663 9.47715 6.14378 5 11.6666 5H28.3333C33.8561 5 38.3333 9.47715 38.3333 15V25C38.3333 30.5228 33.8561 35 28.3333 35H11.6666C6.14378 35 1.66663 30.5228 1.66663 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qn.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qn.jsx)("path",{d:"M23.3333 25V15L29.9999 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]})]}),(0,qn.jsx)(ui,{className:h?"active":"hidden",onClick:I,children:(0,qn.jsx)(li,{className:h?"modal active":"modal",onClick:I,textoBotao:_,disabled:P,nomeConvidado:i,horaInicio:o,horaFim:a,onClickBotao:y,descricao:d,imagemConvidado:r})})]})};var hi,gi=Bn.article(hi||(hi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    border-top: 3px solid #fff;;\n    border-bottom: 3px solid #fff;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    padding: 1rem 0;\n    box-sizing: border-box;\n    margin: 0 2rem;\n\n    color: #FFF;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    \n    .horario{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n    }\n    \n    .break-time {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        \n        .break {\n            color: #CD0909;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 600;\n            line-height: normal;\n        }\n\n        .time {\n            color: #FFF;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 300;\n            line-height: normal;\n        }\n    }\n"])));const Ci=function(e){var t=e.horarioInicio,n=void 0===t?"11:00":t,r=e.horarioFim,i=void 0===r?"12:00":r;return(0,qn.jsxs)(gi,{children:[(0,qn.jsx)("div",{className:"horario",children:n}),(0,qn.jsxs)("div",{className:"break-time",children:[(0,qn.jsx)("div",{className:"break",children:"BREAK"}),(0,qn.jsx)("div",{className:"time",children:"TIME"})]}),(0,qn.jsx)("div",{className:"horario",children:i})]})};var vi,Ai=Bn.article(vi||(vi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 320px;\n    box-sizing: border-box;\n    justify-content: space-between;\n    \n    .titulo{\n        color: #FFF;\n        text-align: left;\n        font-family: Inter,serif;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .subtitulo{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter,serif;\n        font-size: 0.875rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .mini{\n        width: 6rem;\n    }\n"])));const bi=function(e){var t=e.id,n=e.titulo,r=e.subtitulo,i=e.style;return(0,qn.jsxs)(Ai,{id:t,style:i,children:[(0,qn.jsx)("div",{className:"titulo",children:n}),(0,qn.jsx)("div",{className:"subtitulo",children:r})]})};var yi,Si=Bn.article(yi||(yi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    padding: 1.25rem 1.5rem;\n    flex-shrink: 0;\n    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n    \n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 0.5rem;\n\n    border-radius: 0.625rem;\n    background: #FFF;\n\n    color: #000;\n    font-family: Inter,serif;\n    font-size: 0.9375rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    \n    position: absolute;\n    top: ","rem;\n    left: ","rem;\n    z-index: 99999;\n    \n    &.direita{\n        align-items: flex-end;\n    }\n    \n    .ponta{\n        position: absolute;\n    }\n    \n    .esquerda{\n        top: -0.6rem;\n        left: 0.4rem;\n    }\n    \n    .direita{\n        top: -0.6rem;\n        right: 0.4rem;\n    }\n    \n    .texto{\n        max-width: ","rem;\n    }\n    \n    button{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n\n        width: 5.375rem;\n        height: 1.5rem;\n        flex-shrink: 0;\n        background: #CD0909;\n        border: none;\n        cursor: pointer;\n        \n        &:hover{\n            background: #A00000;\n        }\n        \n        &:active{\n            background: #CD0909;\n        }\n    }\n"])),(function(e){return e.top}),(function(e){return e.left}),16);const wi=function(e){var t=e.children,n=e.left,r=e.top,i=e.className,o=e.onClick,a=e.id,s=e.style,l=e.orientation,c=void 0===l?"esquerda":l;return(0,qn.jsxs)(Si,{id:a,className:"".concat(i," ").concat(c),left:n,top:r,style:s,children:[(0,qn.jsx)("svg",{className:"ponta ".concat(c),xmlns:"http://www.w3.org/2000/svg",width:"14",height:"12",viewBox:"0 0 14 12",fill:"none",children:(0,qn.jsx)("path",{d:"M7 0L13.9282 12H0.0717969L7 0Z",fill:"white"})}),(0,qn.jsx)("div",{className:"texto",children:t}),(0,qn.jsx)("button",{onClick:o,children:"Entendi!"})]})};var Pi,xi=Bn.article(Pi||(Pi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    \n    .status{\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        gap: 1rem;\n    }\n"])));const Ei=function(){return(0,qn.jsxs)(xi,{children:["Aqui você consegue vê o Status do palestrante. Pode ser:",(0,qn.jsxs)("div",{className:"status",children:[(0,qn.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"34",height:"34",viewBox:"0 0 34 34",fill:"none",children:(0,qn.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M33.6666 17C33.6666 26.2047 26.2046 33.6667 17 33.6667C7.79523 33.6667 0.333313 26.2047 0.333313 17C0.333313 7.79529 7.79523 0.333374 17 0.333374C26.2046 0.333374 33.6666 7.79529 33.6666 17ZM23.7171 11.9495C24.2053 12.4376 24.2053 13.2291 23.7171 13.7172L15.3838 22.0505C14.8956 22.5387 14.1043 22.5387 13.6161 22.0505L10.2828 18.7172C9.79461 18.229 9.79461 17.4377 10.2828 16.9495C10.7709 16.4614 11.5624 16.4614 12.0505 16.9495L14.5 19.3989L18.2246 15.6742L21.9495 11.9495C22.4376 11.4613 23.229 11.4613 23.7171 11.9495Z",fill:"black"})}),(0,qn.jsx)("span",{children:"Já aconteceu."})]}),(0,qn.jsxs)("div",{className:"status",children:[(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",children:[(0,qn.jsx)("path",{d:"M1.66669 25V15C1.66669 9.47715 6.14384 5 11.6667 5H28.3334C33.8562 5 38.3334 9.47715 38.3334 15V25C38.3334 30.5228 33.8562 35 28.3334 35H11.6667C6.14384 35 1.66669 30.5228 1.66669 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qn.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qn.jsx)("path",{d:"M23.3334 25V15L30 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]}),(0,qn.jsx)("span",{children:"Acontecendo."})]}),(0,qn.jsxs)("div",{className:"status",children:[(0,qn.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,qn.jsxs)("g",{clipPath:"url(#clip0_45_641)",children:[(0,qn.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8142 5.98995e-07H8.18566C7.44662 -0.000491588 6.76784 0.302368 6.28456 0.787555C5.79943 1.27083 5.49652 1.94912 5.4975 2.68816V5.83565C5.4975 7.72734 6.28035 9.53428 7.6605 10.8282L9.98745 13.0096C10.1155 13.1301 10.1886 13.2978 10.1886 13.474V14.5258C10.1886 14.702 10.1155 14.8692 9.98795 14.9894L7.66055 17.1717C6.28041 18.4651 5.49755 20.2725 5.49755 22.1642V25.3117C5.49657 26.0508 5.79954 26.7291 6.28462 27.2123C6.76795 27.6975 7.44667 28.0004 8.18572 27.9999H19.8142C20.5534 28.0004 21.2316 27.6975 21.7149 27.2123C22.2 26.729 22.503 26.0508 22.5025 25.3117V22.1643C22.5025 20.2726 21.7196 18.4652 20.3395 17.1718L18.0126 14.9899C17.8839 14.8693 17.8114 14.7021 17.8114 14.5259V13.4741C17.8114 13.2979 17.8839 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2636 25.7612C20.1454 25.878 19.9932 25.9472 19.8142 25.9477H8.18566C8.00667 25.9472 7.85404 25.878 7.7358 25.7612C7.61899 25.643 7.55025 25.4908 7.54976 25.3118V22.1643C7.54976 20.8402 8.09805 19.5745 9.06411 18.6692L11.3911 16.4869C11.9332 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9332 12.0205 11.3906 11.5126L9.06411 9.33084C8.098 8.42554 7.54976 7.16029 7.54976 5.83576V2.68822C7.55025 2.50923 7.61899 2.35709 7.7358 2.23836C7.85404 2.12204 8.00667 2.05275 8.18566 2.05231H19.8142C19.9932 2.05275 20.1454 2.12198 20.2636 2.23836C20.3804 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6088 11.5126C16.0666 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6093 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"black"}),(0,qn.jsx)("path",{d:"M12.9752 20.7239L8.74622 24.9528H19.2532L15.0242 20.7239C14.4585 20.1586 13.5414 20.1586 12.9752 20.7239Z",fill:"black"})]}),(0,qn.jsx)("defs",{children:(0,qn.jsx)("clipPath",{id:"clip0_45_641",children:(0,qn.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]}),(0,qn.jsx)("span",{children:"Ainda vai acontecer."})]})]})};function _i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Di(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Di(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Di(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Oi=function(){var e=J(),n=_i((0,t.useState)(0),2),r=n[0],i=n[1],o=_i((0,t.useState)("true"!==localStorage.getItem("toolTipCronograma")),2),a=o[0],s=o[1],l=_i((0,t.useState)([]),2),c=l[0],d=l[1],u=_i((0,t.useState)("true"!==localStorage.getItem("toolTipCronograma")),2),m=u[0],p=u[1],f=function(t){localStorage.setItem("palestrante-id",t.id),localStorage.setItem("palestrante-nome",t.nome),localStorage.setItem("perguntas",JSON.stringify(t.perguntas)),c.includes("".concat(t.id))?e("/ranking",{state:{palestrante:t}}):e("/palestrante",{state:{palestrante:t}})},h=function(t){localStorage.setItem("palestrante-id",t.id),e("/ranking",{state:{palestrante:t}})},g=[{nome:"Samuel",horario_inicio:"09:45",horario_fim:"10:00",descricao:"Reitor do Ibmec Rio de Janeiro. Doutor em Administração pela Universidade de Bordeaux (França). Mais de 20 anos de experiência profissional nas áreas de gestão, finanças, marketing e tecnologia. Professor em escolas internacionais como Universidade de Sorbonne-Paris 1 e Universidade de Bordeaux.  Conselheiro empresarial. Como líder acadêmico e empresarial, tenho como missão promover a excelência e a inovação na educação e no mercado, contribuindo para o desenvolvimento de talentos, negócios e sociedade. Além disso, sou autor de publicações científicas e técnicas sobre comportamento de consumo, finanças e gestão de recursos humanos nas empresas.\n\nA evolução tecnológica acentua o abismo social na maioria das vezes, no entanto, a revolução tecnológica bancária vem modificando esse cenário ano após ano. A necessidade de acessar um maior contingente de pessoas para maximizar seus resultados, entregar programas sociais e benefícios a baixo custo forçou, principalmente no período pandêmico, a bancarização da população brasileira, e essa bancarização já traz frutos para a economia real e o bem-estar das famílias.",imagem:"imagens/palestrantes/samuel.jpg",id:1,perguntas:[{id:1,pergunta:"Samuel Barros é o atual:",alternativas:[{id:1,texto:"CEO do Banco Central Digital"},{id:2,texto:"Reitor do Ibmec Rio"},{id:3,texto:"Diretor do Bradesco Inova"},{id:4,texto:"Presidente da FGV"}],resposta:2},{id:2,pergunta:"A palestra de Samuel trata sobre:",alternativas:[{id:1,texto:"Criação de bancos comunitários"},{id:2,texto:"A revolução bancária como forma de inclusão social"},{id:3,texto:"O fim do dinheiro físico"},{id:4,texto:"Regulação de criptomoedas"}],resposta:2},{id:3,pergunta:"Qual foi o impacto da pandemia abordado na palestra?",alternativas:[{id:1,texto:"Aumento de impostos"},{id:2,texto:"A crise de crédito no setor privado"},{id:3,texto:"A aceleração da bancarização no Brasil"},{id:4,texto:"A digitalização do comércio exterior"}],resposta:3},{id:4,pergunta:"Samuel possui doutorado em:",alternativas:[{id:1,texto:"Economia"},{id:2,texto:"Sociologia"},{id:3,texto:"Administração"},{id:4,texto:"Tecnologia da Informação"}],resposta:3},{id:5,pergunta:"Onde Samuel também lecionou?",alternativas:[{id:1,texto:"Universidade de Bordeaux e Sorbonne"},{id:2,texto:"MIT e Harvard"},{id:3,texto:"Stanford e NYU"},{id:4,texto:"USP e UFRJ"}],resposta:1}]},{nome:"Marcio Borges",horario_inicio:"10:00",horario_fim:"10:20",descricao:'Marcio Borges é Vice-Presidente Executivo e Diretor Geral da WMcCann no Rio de Janeiro. Pesquisador do NetLab da UFRJ, Marcio é Doutorando em Ciência da Informação e Mestre em Comunicação pela ECO/UFRJ. Tem mais de 25 anos de atuação na área de comunicação, com expertise em mídias digitais. Conquistou ao longo de sua carreira os mais importantes prêmios nacionais e internacionais da área, como Cannes Lions, Effie, Caboré, Clio, LIA, entre outros.\n\nComo a Nossa Dieta de Dados Impacta Nossos Hábitos Sociais\nVivemos imersos em fluxos constantes de dados — notícias, curtidas, algoritmos e métricas que moldam o que vemos, pensamos e até como nos comportamos.  Como a "ciência dos dados sociais" - a combinação de Data Science com Social Science - revela os padrões invisíveis por trás das interações digitais e examina o impacto de nossa dieta de dados no cotidiano: da formação de opiniões ao consumo, das amizades ao engajamento político. Um convite à reflexão sobre como os dados que consumimos nos transformam — e transformam a sociedade.\n',imagem:"imagens/palestrantes/marcio.jpg",id:2,perguntas:[{id:1,pergunta:"Marcio Borges é Vice-Presidente Executivo de qual empresa?",alternativas:[{id:1,texto:"Globo"},{id:2,texto:"WMcCann"},{id:3,texto:"Accenture"},{id:4,texto:"Facebook Brasil"}],resposta:2},{id:2,pergunta:"A palestra trata sobre:",alternativas:[{id:1,texto:"Hackeamento de redes sociais"},{id:2,texto:"O impacto dos dados no comportamento social"},{id:3,texto:"Influência da TV na era digital"},{id:4,texto:"Análise de performance de anúncios"}],resposta:2},{id:3,pergunta:"Marcio é pesquisador de qual laboratório?",alternativas:[{id:1,texto:"DataLab da PUC-Rio"},{id:2,texto:"NetLab da UFRJ"},{id:3,texto:"InovaUSP"},{id:4,texto:"MediaLab BR"}],resposta:2},{id:4,pergunta:"Qual das premiações Marcio JÁ conquistou?",alternativas:[{id:1,texto:"Nobel de Comunicação"},{id:2,texto:"Oscar da Publicidade"},{id:3,texto:"Cannes Lions e Clio"},{id:4,texto:"Grammy Latino"}],resposta:3},{id:5,pergunta:"Marcio é doutorando em qual área?",alternativas:[{id:1,texto:"Ciência da Informação"},{id:2,texto:"Inteligência Artificial"},{id:3,texto:"Neurociência"},{id:4,texto:"Engenharia de Dados"}],resposta:1}]},{nome:"Nina Talks",horario_inicio:"10:20",horario_fim:"10:40",descricao:"Empreendedora e criadora de conteúdo educacional sobre experiência do usuário tecnologia. Foi 5x vencedora do Swift Student Challenge da Apple, é TEDx speaker, LinkedIn Top Voice e Apple Professional Learning Specialist. Já trabalhou como mentora na Apple Developer Academy PUC-Rio e em empresas como Globo, Accenture e Hurb. Suas redes sociais somam mais de 220 mil entusiastas e apaixonados por design e tecnologia, por conta dos seus conteúdos que descomplicam esse universo, inspirando mais pessoas (principalmente mulheres) a ingressar no mundo da tecnologia.\n\n A inteligência artificial está transformando o design, tornando experiências digitais mais personalizadas, intuitivas e inclusivas. Vemos desde a automação de tarefas até a criação de interfaces que se adaptam a cada usuário. Além disso, precisamos falar sobre os desafios éticos e criativos desse novo cenário, ressaltando a importância do equilíbrio entre tecnologia e foco humano para criar experiências realmente significativas.\n",imagem:"imagens/palestrantes/ninatalks.jpg",id:3,perguntas:[{id:1,pergunta:"Karina é mais conhecida como:",alternativas:[{id:1,texto:"A CEO da Apple Brasil"},{id:2,texto:"Nina Talks"},{id:3,texto:"A criadora do MIT Reap"},{id:4,texto:"Marvalley Talks"}],resposta:2},{id:2,pergunta:"Qual desafio a palestra de Nina aborda?",alternativas:[{id:1,texto:"Como vender mais produtos digitais"},{id:2,texto:"O impacto ético e criativo da IA no design"},{id:3,texto:"A estrutura de redes sociais em UX"},{id:4,texto:"Como aprender programação em Swift"}],resposta:2},{id:3,pergunta:"Nina foi vencedora do Swift Student Challenge da Apple quantas vezes?",alternativas:[{id:1,texto:"2 vezes"},{id:2,texto:"3 vezes"},{id:3,texto:"5 vezes"},{id:4,texto:"1 vez"}],resposta:3},{id:4,pergunta:"Qual é um dos objetivos do conteúdo da Nina Talks?",alternativas:[{id:1,texto:"Ensinar programação para crianças"},{id:2,texto:"Descomplicar tecnologia e UX para o público"},{id:3,texto:"Criar campanhas publicitárias"},{id:4,texto:"Simular interfaces com IA"}],resposta:2},{id:5,pergunta:"Nina já trabalhou como mentora onde?",alternativas:[{id:1,texto:"MIT Media Lab"},{id:2,texto:"TEDx Silicon Valley"},{id:3,texto:"Apple Developer Academy PUC-Rio"},{id:4,texto:"Stanford Design School"}],resposta:3}]},{nome:"Daniel Barros",horario_inicio:"10:40",horario_fim:"11:00",descricao:"Daniel Barros é CEO do Porto Maravalley, hub de tecnologia e inovação do Rio de Janeiro e diretor presidente do Instituo Reap Rio, backbone organization do programa MIT Reap Rio. Formado em Engenharia de produção pela UFRJ com mestrado na Coppe/UFRJ, foi sócio-diretor da empresa elogroup com mais de 15 anos de experiência em atuação como consultor para grandes empresas.\nAtuou também como pesquisador na Coppe/UFRJ e como professor de cursos e MBA para executivos. Atualmente, no Maravalley, atua para desenvolver o ecossistema e transformar o Rio de Janeiro a capital da tecnologia e inovação.\n\nO Porto Maravalley é o Hub de inovação e tecnologia da cidade do Rio de Janeiro, e tem por objetivo contribuir com o desenvolvimento econômico da cidade com a criação, o desenvolvimento e a atração de negócios de base tecnológica na cidade.",imagem:"imagens/palestrantes/daniel.jpg",id:4,perguntas:[{id:1,pergunta:"Qual é o cargo atual de Daniel Barros?",alternativas:[{id:1,texto:"Diretor da Globo Ventures"},{id:2,texto:"CEO do Porto Maravalley"},{id:3,texto:"CEO da Accenture"},{id:4,texto:"Reitor do Ibmec"}],resposta:2},{id:2,pergunta:"Qual universidade Daniel Barros cursou Engenharia de Produção?",alternativas:[{id:1,texto:"USP"},{id:2,texto:"UFRJ"},{id:3,texto:"PUC-Rio"},{id:4,texto:"Unicamp"}],resposta:2},{id:3,pergunta:"Qual programa global Daniel está envolvido por meio do Instituto Reap Rio?",alternativas:[{id:1,texto:"Google Campus"},{id:2,texto:"MIT Reap"},{id:3,texto:"Techstars"},{id:4,texto:"Harvard Next"}],resposta:2},{id:4,pergunta:"Qual foi uma de suas experiências acadêmicas?",alternativas:[{id:1,texto:"Pesquisador na COPPE/UFRJ"},{id:2,texto:"Professor visitante em Harvard"},{id:3,texto:"Coordenador da FGV-EAESP"},{id:4,texto:"Pesquisador da UnB"}],resposta:1},{id:5,pergunta:"Qual é a missão do Porto Maravalley sob sua liderança?",alternativas:[{id:1,texto:"Transformar o Rio em capital da tecnologia e inovação"},{id:2,texto:"Levar startups brasileiras ao Vale do Silício"},{id:3,texto:"Formar influenciadores digitais"},{id:4,texto:"Atrair turistas para o Porto Maravilha"}],resposta:1}]},{nome:"Lucimar",horario_inicio:"11:40",horario_fim:"12:00",descricao:"Lucimar desenvolveu mais de 200 startups e novos negócios. Head do IBMEC Hubs, professora universitária, empreendedora, e também apresentadora do Podcast “Qual é o seu negócio?”.  Engenheira de formação com mestrado e MBA na área de negócios, desenvolveu ao longo da carreira habilidades para negócios e facilidade para lidar com tecnologias diversas e inovação.",imagem:"imagens/palestrantes/lucimar.jpg",id:5,perguntas:[{id:1,pergunta:"Lucimar é Head de qual instituição?",alternativas:[{id:1,texto:"IBMEC Hubs"},{id:2,texto:"WMcCann"},{id:3,texto:"Accenture Brasil"},{id:4,texto:"Google for Startups"}],resposta:1},{id:2,pergunta:"Qual conteúdo ela apresenta em formato de podcast?",alternativas:[{id:1,texto:"Mulheres na Liderança"},{id:2,texto:"“Qual é o seu negócio?”"},{id:3,texto:"Startups para Iniciantes"},{id:4,texto:"Tech e Trabalho"}],resposta:2},{id:3,pergunta:"Quantos novos negócios Lucimar já desenvolveu?",alternativas:[{id:1,texto:"Mais de 50"},{id:2,texto:"Mais de 200"},{id:3,texto:"120"},{id:4,texto:"Cerca de 80"}],resposta:2},{id:4,pergunta:"Lucimar é formada em qual área?",alternativas:[{id:1,texto:"Comunicação"},{id:2,texto:"Engenharia"},{id:3,texto:"Psicologia"},{id:4,texto:"Sociologia"}],resposta:2},{id:5,pergunta:"A palestra de Lucimar trata de:",alternativas:[{id:1,texto:"Recrutamento ágil"},{id:2,texto:"As transformações e tendências no futuro do trabalho"},{id:3,texto:"Economia gig"},{id:4,texto:"Ensino técnico"}],resposta:2}]},{nome:"Erika Garnier",horario_inicio:"12:00",horario_fim:"12:20",descricao:"Erika Guarnieri é filha amada de Deus. \nEsposa de Elizier Jr. e mãe das princesas Pietra e Paula. \n\nSeus pais, Ângela e Altamir, criaram uma mulher cheia de fé, energia e com uma alegria contagiante. \n\nA força da sua história pessoal a tornou uma referência no fortalecimento da autoestima de mulheres, impulsionando milhares a encontrarem o caminho da autenticidade.\n\nPalestrante, mentora de mulheres, especialista em comportamento humano e pós-graduada em biomecânica, Erika realizou seus estudos na área da motivação com o mestre Anthony Robbins, nos EUA. Ao retornar ao Brasil, idealizou a imersão “O Poder da Autoestima”, revelando às mulheres o poder da própria essência. Seu trabalho já impactou mais de 10 mil mulheres em diferentes abordagens mas sempre com um único propósito: possibilitar que mulheres descubram a sua verdadeira potência e possam subir no pódio da própria vida sendo quem nasceram pra ser.\n\nEste texto aborda a evolução do poder na era da tecnologia, refletindo sobre os diferentes tipos de poder — posicional, pessoal e de ação/ comunicação — e suas fragilidades e forças. Destaca a importância do poder pessoal e da autenticidade como diferenciais humanos essenciais, mesmo diante do avanço tecnológico e da automação. Observa também o impacto das emoções e das relações interpessoais na construção de conexões genuínas, ressaltando a necessidade de investir na comunicação verdadeira e na liderança com empatia. Por fim, enfatiza que, na era digital, o verdadeiro poder está na combinação do conhecimento, da autenticidade e da capacidade de liderar com inteligência emocional, garantindo uma presença humana mais forte e significativa através da comunicação.",imagem:"imagens/palestrantes/erika.jpg",id:6,perguntas:[{id:1,pergunta:"O que move o trabalho de Erika Guarnieri?",alternativas:[{id:1,texto:"Construir novas startups"},{id:2,texto:"Fortalecer a autoestima de mulheres"},{id:3,texto:"Formar líderes corporativos"},{id:4,texto:"Desenvolver metodologias de ensino técnico"}],resposta:2},{id:2,pergunta:"Qual imersão foi idealizada por Erika?",alternativas:[{id:1,texto:"Potência Digital"},{id:2,texto:"Mulheres no Topo"},{id:3,texto:"O Poder da Autoestima"},{id:4,texto:"Liderança Autêntica"}],resposta:3},{id:3,pergunta:"Qual especialista influenciou os estudos de Erika?",alternativas:[{id:1,texto:"Brené Brown"},{id:2,texto:"Anthony Robbins"},{id:3,texto:"Simon Sinek"},{id:4,texto:"Tony Hsieh"}],resposta:2},{id:4,pergunta:"A palestra de Erika destaca:",alternativas:[{id:1,texto:"Estratégias de marketing pessoal"},{id:2,texto:"Importância do poder pessoal e da autenticidade"},{id:3,texto:"Técnicas de vendas femininas"},{id:4,texto:"Avanços da inteligência artificial"}],resposta:2},{id:5,pergunta:"Quantas mulheres Erika já impactou com seu trabalho?",alternativas:[{id:1,texto:"Cerca de 2 mil"},{id:2,texto:"Mais de 10 mil"},{id:3,texto:"500"},{id:4,texto:"20 mil"}],resposta:2}]},{nome:"Gilvan Bueno",horario_inicio:"14:10",horario_fim:"14:30",descricao:"Especialista em finanças, mercado de capitais e educação financeira. Foi sócio e gerente educacional no mercado.Comentarista da CNN Money  e Trabalhou em bancos de investimentos e corretoras. Foi palestrante no Fórum Global South Financiers 2025, realizado em Beijin, China.\n\nNesta palestra, o público será convidado a repensar sua relação com o dinheiro, entendendo-o como uma poderosa ferramenta de transformação social. Através de temas como consciência financeira cidadã, consumo e investimento com propósito, inclusão financeira, economias colaborativas e práticas alinhadas a valores sociais, a proposta é refletir sobre como nossas escolhas econômicas individuais impactam o coletivo. Ao final, a audiência será provocada a agir com mais intenção, percebendo que cada decisão financeira contribui para moldar a sociedade em que vivemos.",imagem:"imagens/palestrantes/gilvan.jpg",id:7,perguntas:[{id:1,pergunta:"Onde Gilvan foi palestrante em 2025?",alternativas:[{id:1,texto:"Fórum Global South Financiers em Beijing"},{id:2,texto:"Fórum Econômico de Davos"},{id:3,texto:"South by Southwest em Austin"},{id:4,texto:"Fintech World Forum em Londres"}],resposta:1},{id:2,pergunta:"Qual é o foco da palestra de Gilvan?",alternativas:[{id:1,texto:"Criação de produtos financeiros lucrativos"},{id:2,texto:"Tecnologias para bancos digitais"},{id:3,texto:"Consciência financeira como ferramenta de transformação social"},{id:4,texto:"Investimentos em startups"}],resposta:3},{id:3,pergunta:"Gilvan foi comentarista de qual canal?",alternativas:[{id:1,texto:"CNN Money"},{id:2,texto:"GloboNews"},{id:3,texto:"Jovem Pan"},{id:4,texto:"Bloomberg"}],resposta:1},{id:4,pergunta:"Qual conceito a palestra NÃO aborda diretamente?",alternativas:[{id:1,texto:"Inclusão financeira"},{id:2,texto:"Políticas de comércio exterior"},{id:3,texto:"Economias colaborativas"},{id:4,texto:"Investimento com propósito"}],resposta:2},{id:5,pergunta:"Qual é a proposta final da palestra de Gilvan?",alternativas:[{id:1,texto:"Aumentar o consumo"},{id:2,texto:"Agir com mais intenção nas decisões financeiras"},{id:3,texto:"Trocar bancos tradicionais por criptomoedas"},{id:4,texto:"Ensinar como multiplicar o capital rapidamente"}],resposta:2}]},{nome:"Marcos Caiado",horario_inicio:"14:30",horario_fim:"14:50",descricao:"Marcos Caiado é empresário e professor de pós-graduação, ministrando cadeiras em programas de MBA. É doutor em Administração de Empresas pela FGV/EAESP. É advogado e Mestre em Direito. Possui pós-graduação em Filosofia pela PUC-Rio. Foi conselheiro da Federação das Indústrias do Rio de Janeiro (FIRJAN). Atualmente possui assento no conselho de Governança e Compliance na Associação Comercial do Rio de Janeiro (ACRJ).\n\n Nesta palestra provocadora e inspiradora, executivos descobrirão as 4 Virtudes essenciais que sustentam a liderança verdadeiramente impactante. A fórmula apresentada resgata um poder muitas vezes esquecido, mas decisivo. Prepare-se para repensar seu papel como CEO, líder e tomador de decisão.",imagem:"imagens/palestrantes/marcos.jpg",id:8,perguntas:[{id:1,pergunta:"Marcos Caiado tem doutorado em qual formação acadêmica?",alternativas:[{id:1,texto:"Doutorado em Filosofia pela PUC-Rio"},{id:2,texto:"Doutorado em Administração de Empresas pela FGV/EAESP"},{id:3,texto:"Doutorado em Direito pela UFRJ"},{id:4,texto:"Doutorado em Psicologia Organizacional pela USP"}],resposta:2},{id:2,pergunta:"Qual é o tema central da palestra de Marcos?",alternativas:[{id:1,texto:"Estratégias de mercado para CEOs"},{id:2,texto:"A importância da governança corporativa"},{id:3,texto:"As 4 Virtudes Fundamentais do CEO de Impacto"},{id:4,texto:"Modelos de negócios sustentáveis"}],resposta:3},{id:3,pergunta:"Em qual conselho Marcos Caiado atualmente atua?",alternativas:[{id:1,texto:"Conselho da Apple Developer Academy"},{id:2,texto:"Conselho de Governança e Compliance da ACRJ"},{id:3,texto:"Conselho do Ministério da Economia"},{id:4,texto:"Conselho da OAB-RJ"}],resposta:2},{id:4,pergunta:"Marcos já foi conselheiro de qual instituição industrial?",alternativas:[{id:1,texto:"FIESP"},{id:2,texto:"SESC-RJ"},{id:3,texto:"FIRJAN"},{id:4,texto:"CNI"}],resposta:3},{id:5,pergunta:"A palestra de Marcos propõe:",alternativas:[{id:1,texto:"Substituir as virtudes humanas por dados"},{id:2,texto:"Resgatar virtudes esquecidas na liderança"},{id:3,texto:"Automatizar processos de gestão"},{id:4,texto:"Eliminar o papel emocional dos líderes"}],resposta:2}]},{nome:"Marlyson",horario_inicio:"14:50",horario_fim:"15:10",descricao:"Márlyson Silva é CEO e fundador da Transfero, uma empresa global de soluções financeiras com foco em blockchain, stablecoins e inclusão financeira.\n\nVisionário no setor, liderou o desenvolvimento do primeiro gateway de pagamentos da América Latina a aceitar Bitcoin, além de lançar o primeiro POS compatível com criptomoedas.\n\nCom mais de 20 anos de experiência em tecnologia, Márlyson iniciou sua jornada em comunidades periféricas do Rio de Janeiro e hoje dedica sua carreira a ampliar o acesso à educação e aos serviços financeiros em economias emergentes.\n\nCriador do Transfero Academy e mentor de jovens talentos, é movido pelo propósito de transformar vidas por meio da inovação, construindo pontes entre pessoas, tecnologia e oportunidades.\n\nMuito além da alta ou da queda do bitcoin, dos debates sobre regulação entre governantes, a blockchain está resolvendo problemas reais. De stablecoins que combatem a inflação a contratos inteligentes que asseguram transações globais, ela está transformando silenciosamente o dia a dia de pessoas, empresas e países.",imagem:"imagens/palestrantes/marlyson.jpg",id:9,perguntas:[{id:1,pergunta:"Márlyson Silva é fundador de qual empresa?",alternativas:[{id:1,texto:"Nubank"},{id:2,texto:"Mercado Bitcoin"},{id:3,texto:"Transfero"},{id:4,texto:"Foxbit"}],resposta:3},{id:2,pergunta:"Qual foi uma das inovações lideradas por Márlyson?",alternativas:[{id:1,texto:"Primeiro gateway de pagamentos da América Latina a aceitar Bitcoin"},{id:2,texto:"Criação da primeira bolsa de valores digital do Brasil"},{id:3,texto:"Primeiro NFT vendido no Brasil"},{id:4,texto:"Lançamento de uma exchange global"}],resposta:1},{id:3,pergunta:"Qual é o foco principal da Transfero?",alternativas:[{id:1,texto:"Criação de apps bancários para jovens"},{id:2,texto:"Soluções financeiras com blockchain, stablecoins e inclusão financeira"},{id:3,texto:"Investimento em imóveis tokenizados"},{id:4,texto:"Publicidade em metaverso"}],resposta:2},{id:4,pergunta:"Márlyson iniciou sua jornada profissional onde?",alternativas:[{id:1,texto:"Vale do Silício"},{id:2,texto:"Comunidades periféricas do Rio de Janeiro"},{id:3,texto:"Nova York"},{id:4,texto:"Europa"}],resposta:2},{id:5,pergunta:"A palestra defende que a blockchain:",alternativas:[{id:1,texto:"É apenas uma moda passageira"},{id:2,texto:"Só serve para especulação financeira"},{id:3,texto:"Está resolvendo problemas reais no dia a dia"},{id:4,texto:"Deve ser usada apenas por grandes bancos"}],resposta:3}]}],C=function(){var e=r+1;i(e);var t=document.querySelector("#toolTip1"),n=document.querySelector("#toolTip2"),o=document.querySelector("#toolTip3"),a=document.querySelector("#toolTip4"),l=(document.querySelector("#tituloCronograma"),document.querySelector("#cardCronograma1")),c=document.querySelector("#cardCronograma2"),d=document.querySelector(".telaPreta");1===e?(t.style.display="none",n.style.display="flex",p(!1),l.style.zIndex="9999"):2===e?(n.style.display="none",o.style.display="flex",l.style.zIndex="0",c.style.zIndex="9999"):3===e?(o.style.display="none",a.style.display="flex",c.style.zIndex="0"):4===e&&(a.style.display="none",d.style.display="none",localStorage.setItem("toolTipCronograma","true"),s(!1))};return(0,t.useEffect)((function(){var e=JSON.parse(localStorage.getItem("completedQuizzes"))||[];d(e)}),[]),(0,qn.jsxs)(ri,{children:[(0,qn.jsxs)("div",{style:{display:a?"flex":"none",position:"absolute",width:"320px"},children:[(0,qn.jsx)(wi,{className:"toolTip",onClick:C,left:-.5,top:-37.5,id:"toolTip1",children:"Seja bem-vindo ao cronograma do TEDX. Aqui você consegue ver o horário de cada palestrante."}),(0,qn.jsx)(wi,{className:"toolTip",onClick:C,left:.6,top:-32,orientation:"direita",id:"toolTip2",style:{display:"none"},children:(0,qn.jsx)(Ei,{})}),(0,qn.jsx)(wi,{className:"toolTip",onClick:C,left:.6,top:-25,id:"toolTip3",orientation:"direita",style:{display:"none"},children:"Você pode clicar em ON para participar da dinâmica do palestrante. É um Quiz que no final te permite fazer uma pergunta a ele."}),(0,qn.jsx)(wi,{className:"toolTip",onClick:C,left:.55,top:-43.5,id:"toolTip4",orientation:"direita",style:{display:"none"},children:"Clicando no perfil, você pode ver suas informações pessoais, sua pontuação geral e conferir sua posição no ranking geral."}),(0,qn.jsx)(ui,{className:"telaPreta"})]}),(0,qn.jsx)(bi,{titulo:"Cronograma",subtitulo:(0,qn.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 20 20",fill:"none",onClick:function(){s(!0),p(!0);var e=document.querySelector("#toolTip1"),t=document.querySelector("#toolTip2"),n=document.querySelector("#toolTip3"),r=document.querySelector("#toolTip4"),o=document.querySelector(".telaPreta");e.style.display="flex",t.style.display="none",n.style.display="none",r.style.display="none",o.style.display="flex",i(0)},children:(0,qn.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10ZM10 5.75C9.3787 5.75 8.875 6.25368 8.875 6.875C8.875 7.28921 8.5392 7.625 8.125 7.625C7.71079 7.625 7.375 7.28921 7.375 6.875C7.375 5.42525 8.5503 4.25 10 4.25C11.4497 4.25 12.625 5.42525 12.625 6.875C12.625 7.58584 12.3415 8.232 11.883 8.704C11.7907 8.7989 11.7027 8.8869 11.6187 8.9708C11.4029 9.1864 11.2138 9.3753 11.0479 9.5885C10.8289 9.8699 10.75 10.0768 10.75 10.25V11C10.75 11.4142 10.4142 11.75 10 11.75C9.5858 11.75 9.25 11.4142 9.25 11V10.25C9.25 9.5948 9.555 9.0644 9.8642 8.6672C10.0929 8.3733 10.3804 8.0863 10.6138 7.85346C10.6842 7.78321 10.7496 7.71789 10.807 7.65877C11.0046 7.45543 11.125 7.18004 11.125 6.875C11.125 6.25368 10.6213 5.75 10 5.75ZM10 15C10.5523 15 11 14.5523 11 14C11 13.4477 10.5523 13 10 13C9.4477 13 9 13.4477 9 14C9 14.5523 9.4477 15 10 15Z",fill:"white"})}),id:"tituloCronograma",style:m?{zIndex:"999999"}:{zIndex:"0"}}),g.slice(0,4).map((function(e,t){return(0,qn.jsx)(fi,{nomeConvidado:e.nome,horarioInicio:e.horario_inicio,horarioFim:e.horario_fim,onClick:f.bind(null,e),onClickFinalizado:h.bind(null,e),urlFotoConvidado:e.imagem,descricao:e.descricao,id:"cardCronograma"+(t+1)},t)})),(0,qn.jsx)(Ci,{horarioFim:g[4].horario_inicio,horarioInicio:g[3].horario_fim}),g.slice(4,6).map((function(e,t){return(0,qn.jsx)(fi,{nomeConvidado:e.nome,horarioInicio:e.horario_inicio,horarioFim:e.horario_fim,onClick:f.bind(null,e),onClickFinalizado:h.bind(null,e),urlFotoConvidado:e.imagem,descricao:e.descricao,id:"cardCronograma"+(t+1)},t)})),(0,qn.jsx)(Ci,{horarioFim:g[6].horario_inicio,horarioInicio:g[5].horario_fim}),g.slice(6,9).map((function(e,t){return(0,qn.jsx)(fi,{nomeConvidado:e.nome,horarioInicio:e.horario_inicio,horarioFim:e.horario_fim,onClick:f.bind(null,e),onClickFinalizado:h.bind(null,e),urlFotoConvidado:e.imagem,descricao:e.descricao,id:"cardCronograma"+(t+1)},t)}))]})};var Ii,Li,ki=Bn.header(Ii||(Ii=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n"]))),ji=Bn.article(Li||(Li=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 5rem;\n    height: 2.4375rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    \n    .valor{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"]))),Fi=function(){return(0,qn.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"21",height:"21",viewBox:"0 0 21 21",fill:"none",children:(0,qn.jsx)("path",{d:"M9.86046 3.85976C10.063 3.4053 10.1644 3.17807 10.3054 3.1081C10.4279 3.0473 10.5718 3.0473 10.6943 3.1081C10.8353 3.17807 10.9366 3.4053 11.1392 3.85976L12.7527 7.47957C12.8126 7.61392 12.8426 7.68109 12.8889 7.73253C12.9299 7.77805 12.98 7.81446 13.0359 7.83938C13.0992 7.86755 13.1723 7.87527 13.3186 7.89071L17.2599 8.30669C17.7547 8.35891 18.0021 8.38502 18.1122 8.49754C18.2079 8.59526 18.2523 8.73212 18.2324 8.86742C18.2094 9.02318 18.0247 9.18969 17.6551 9.5228L14.7109 12.176C14.6017 12.2744 14.5471 12.3237 14.5125 12.3836C14.4819 12.4367 14.4627 12.4956 14.4563 12.5565C14.4491 12.6254 14.4643 12.6973 14.4948 12.8412L15.3171 16.7181C15.4204 17.2049 15.472 17.4482 15.399 17.5877C15.3356 17.709 15.2192 17.7935 15.0844 17.8163C14.9292 17.8426 14.7137 17.7183 14.2826 17.4697L10.8496 15.4896C10.7222 15.4161 10.6585 15.3794 10.5907 15.365C10.5308 15.3523 10.4689 15.3523 10.4089 15.365C10.3412 15.3794 10.2775 15.4161 10.1501 15.4896L6.71704 17.4697C6.28604 17.7183 6.07053 17.8426 5.9153 17.8163C5.78045 17.7935 5.66404 17.709 5.60066 17.5877C5.52769 17.4482 5.57931 17.2049 5.68255 16.7181L6.50484 12.8412C6.53536 12.6973 6.55062 12.6254 6.54337 12.5565C6.53696 12.4956 6.51782 12.4367 6.4872 12.3836C6.45259 12.3237 6.39796 12.2744 6.2887 12.176L3.34465 9.5228C2.97504 9.18969 2.79024 9.02318 2.76726 8.86742C2.74731 8.73212 2.79177 8.59526 2.88744 8.49754C2.99758 8.38502 3.24499 8.35891 3.7398 8.30669L7.68106 7.89071C7.82734 7.87527 7.90047 7.86755 7.96372 7.83938C8.01967 7.81446 8.06978 7.77805 8.11078 7.73253C8.15711 7.68109 8.18705 7.61392 8.24695 7.47957L9.86046 3.85976Z",fill:"white",stroke:"white",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};const Mi=function(e){var t=e.valor,n=void 0===t?0:t;return(0,qn.jsxs)(ji,{children:[(0,qn.jsx)(Fi,{}),(0,qn.jsx)("div",{className:"valor",children:n})]})};var Ui,Ti=Bn.article(Ui||(Ui=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n\n    .avatar{\n        width: 5rem;\n        height: 5rem;\n\n        svg{\n            width: 3.5rem;\n        }\n    }\n\n    .perfil {\n        display: flex;\n        flex-direction: column;\n        \n        .sair {\n            display: flex;\n            align-items: center;\n            \n            color: #FFF;\n            font-family: Inter;\n            font-size: 0.875rem;\n            font-style: normal;\n            font-weight: 400;\n            line-height: normal;\n            \n            cursor: pointer;\n        }\n    }\n}\n"]))),Ri=function(e){var t=e.onClick;return(0,qn.jsx)("svg",{onClick:t,xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",children:(0,qn.jsx)("path",{d:"M18 12L6 12M6 12L11 17M6 12L11 7",stroke:"#CD0909",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};function Ni(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Wi(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Wi(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wi(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Bi=function(e){var n=e.onClick,r=Ni((0,t.useState)(localStorage.getItem("name")||"Jogador"),2),i=r[0],o=(r[1],Ni((0,t.useState)(localStorage.getItem("avatar")||"homem3"),2)),a=o[0];return o[1],(0,qn.jsxs)(Ti,{children:[(0,qn.jsx)(_r,{className:"avatar",ativado:!0,children:Rr(a)}),(0,qn.jsxs)("div",{className:"perfil",children:[i,(0,qn.jsxs)("div",{className:"sair",onClick:n,children:[(0,qn.jsx)(Ri,{}),"Sair do Quiz"]})]})]})},zi=function(){var e=J(),t=Jr().pontuacao;return(0,qn.jsxs)(ki,{children:[(0,qn.jsx)(Bi,{onClick:function(){e("/cronograma")}}),(0,qn.jsx)(Mi,{valor:t})]})},Gi=function(e){return(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(zi,{}),(0,qn.jsx)("div",{className:"container",children:e.children})]})};var Vi,Hi=Bn.article(Vi||(Vi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n    \n    .barTrack{\n        position: relative;\n        height: 0.625rem;\n        background-color: white;\n        border-radius: 999px;\n        overflow: hidden;\n    }\n    \n    .barFill{\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        background-color: red;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n    \n    .barText{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.625rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        \n        text-align: right;\n        margin-bottom: 4px;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n"])),(function(e){return e.progress}),(function(e){return e.progress+6}));function Ji(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Qi=function(e){var n,r,i=e.progress,o=void 0===i?20:i,a=e.color,s=void 0===a?"red":a,l=e.showPercentage,c=void 0===l||l,d=(n=(0,t.useState)(0),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Ji(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ji(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=d[0],m=d[1];return(0,t.useEffect)((function(){var e=setTimeout((function(){u<o&&m((function(e){return Math.min(e+1,o)}))}),15);return function(){return clearTimeout(e)}}),[u,o]),(0,qn.jsxs)(Hi,{progress:u,children:[c&&(0,qn.jsxs)("div",{className:"barText",children:[u,"%"]}),(0,qn.jsx)("div",{className:"barTrack",children:(0,qn.jsx)("div",{className:"barFill",color:s})})]})};var Yi,$i,qi=Bn.article(Yi||(Yi=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n"]))),Zi=Bn.article($i||($i=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    background: #FFF;\n    width: 16.875rem;\n    height: 3.0625rem;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding-left: 1.31rem;\n    gap: 1rem;\n    cursor: pointer;\n    transition: background 0.3s ease-in-out;\n    \n    &.ativo {\n        background: #CD0909;\n    }\n\n    &.incorreto {\n        background: #878787;\n    }\n    \n    &.correto {\n        background: #008000;\n    }\n\n    &.ativo, &.incorreto, &.correto {\n        .texto-alternativa, .letra-alternativa {\n            color: #FFF;\n        }\n    }\n\n    .letra-alternativa {\n        color: #CD0909;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n\n    .texto-alternativa {\n        color: #000;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"])));const Xi=function(e){var t=e.letraDaAlternativa,n=e.textoDaAlternativa,r=e.selecionado,i=e.incorreto,o=e.correto,a=e.onSelecao,s="";return r?s=i?"incorreto":o?"correto":"ativo":o&&(s="correto"),(0,qn.jsxs)(Zi,{className:s,onClick:a,children:[(0,qn.jsx)("div",{className:"letra-alternativa",children:t}),(0,qn.jsx)("div",{className:"texto-alternativa",children:n})]})},Ki=function(e){var t=e.alternativas,n=e.alternativaSelecionada,r=e.alternativaIncorreta,i=e.respostaCorreta,o=e.handleSelecao;return(0,qn.jsx)(qi,{children:t.map((function(e){return(0,qn.jsx)(Xi,{letraDaAlternativa:(t=e.id,["A","B","C","D"][t-1]),textoDaAlternativa:e.texto,selecionado:n===e.id,incorreto:r===e.id,onSelecao:function(){return o(e.id)},correto:i===e.id},e.id);var t}))})};var eo,to=Bn.article(eo||(eo=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    color: #CD0909;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const no=function(e){var t=e.pontos;return(0,qn.jsxs)(to,{children:["Valendo ",t," pontos"]})};var ro,io=Bn.article(ro||(ro=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n"])));const oo=function(e){var t=e.children;return(0,qn.jsx)(io,{children:t})};var ao,so=Bn.article(ao||(ao=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const lo=function(e){var t=e.children;return(0,qn.jsx)(so,{children:t})};var co,uo=Bn.div(co||(co=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n\n    .spinner {\n        width: 50px;\n        height: 50px;\n        border: 5px solid rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        border-top-color: #fff;\n        animation: spin 1s ease-in-out infinite;\n    }\n\n    .message {\n        color: white;\n        margin-top: 16px;\n        font-size: 16px;\n    }\n\n    @keyframes spin {\n        to {\n            transform: rotate(360deg);\n        }\n    }\n"])));const mo=function(e){var t=e.message;return(0,qn.jsxs)(uo,{children:[(0,qn.jsx)("div",{className:"spinner"}),t&&(0,qn.jsx)("p",{className:"message",children:t})]})};function po(e){return po="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},po(e)}function fo(){fo=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof C?t:C,a=Object.create(o.prototype),s=new I(r||[]);return i(a,"_invoke",{value:E(e,n,s)}),a}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var m="suspendedStart",p="suspendedYield",f="executing",h="completed",g={};function C(){}function v(){}function A(){}var b={};c(b,a,(function(){return this}));var y=Object.getPrototypeOf,S=y&&y(y(L([])));S&&S!==n&&r.call(S,a)&&(b=S);var w=A.prototype=C.prototype=Object.create(b);function P(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(i,o,a,s){var l=u(e[i],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==po(d)&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,a,s)}),(function(e){n("throw",e,a,s)})):t.resolve(d).then((function(e){c.value=e,a(c)}),(function(e){return n("throw",e,a,s)}))}s(l.arg)}var o;i(this,"_invoke",{value:function(e,r){function i(){return new t((function(t,i){n(e,r,t,i)}))}return o=o?o.then(i,i):i()}})}function E(t,n,r){var i=m;return function(o,a){if(i===f)throw new Error("Generator is already running");if(i===h){if("throw"===o)throw a;return{value:e,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var l=_(s,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===m)throw i=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=f;var c=u(t,n,r);if("normal"===c.type){if(i=r.done?h:p,c.arg===g)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(i=h,r.method="throw",r.arg=c.arg)}}}function _(t,n){var r=n.method,i=t.iterator[r];if(i===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var o=u(i,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,g;var a=o.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function D(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function L(t){if(t||""===t){var n=t[a];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function n(){for(;++i<t.length;)if(r.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(po(t)+" is not iterable")}return v.prototype=A,i(w,"constructor",{value:A,configurable:!0}),i(A,"constructor",{value:v,configurable:!0}),v.displayName=c(A,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,A):(e.__proto__=A,c(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},t.awrap=function(e){return{__await:e}},P(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,n,r,i,o){void 0===o&&(o=Promise);var a=new x(d(e,n,r,i),o);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(w),c(w,l,"Generator"),c(w,a,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=L,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(r,i){return s.type="throw",s.arg=t,n.next=r,i&&(n.method="next",n.arg=e),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),O(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;O(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:L(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function ho(e,t,n,r,i,o,a){try{var s=e[o](a),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,i)}function go(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function a(e){ho(o,r,i,a,s,"next",e)}function s(e){ho(o,r,i,a,s,"throw",e)}a(void 0)}))}}function Co(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||vo(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function vo(e,t){if(e){if("string"==typeof e)return Ao(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ao(e,t):void 0}}function Ao(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const bo=function(){var e,n=Co((0,t.useState)(null),2),r=n[0],i=n[1],o=Co((0,t.useState)(null),2),a=o[0],s=o[1],l=Co((0,t.useState)(!1),2),c=l[0],d=l[1],u="perguntaAtual-".concat(localStorage.getItem("palestrante-id")),m="score-".concat(localStorage.getItem("palestrante-id")),p=JSON.parse(localStorage.getItem("perguntas")),f=Co((0,t.useState)(!1),2),h=f[0],g=f[1],C=Co((0,t.useState)((function(){var e=localStorage.getItem(u);return parseInt(e,10)||0})),2),v=C[0],A=C[1],b=Co((0,t.useState)((function(){var e=localStorage.getItem(m);return parseInt(e,10)||0})),2),y=b[0],S=b[1],w=Co((0,t.useState)("ENVIAR"),2),P=w[0],x=w[1],E=Co((0,t.useState)([]),2),_=E[0],D=E[1],O=Jr().adicionarPontos,I=J(),L=function(){var e=go(fo().mark((function e(t){var n,r,i,o;return fo().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return g(!0),n=localStorage.getItem("palestrante-id"),r=[].concat(function(e){if(Array.isArray(e))return Ao(e)}(a=_)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(a)||vo(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n]),i=localStorage.getItem("id"),o=localStorage.getItem("palestrante-id"),D(r),localStorage.setItem("completedQuizzes",JSON.stringify(r)),e.next=9,k(i,o,t);case 9:e.sent?I("/ranking"):g(!1);case 11:case"end":return e.stop()}var a}),e)})));return function(t){return e.apply(this,arguments)}}(),k=function(){var e=go(fo().mark((function e(t,n,r){var i,o,a,s,l;return fo().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(console.log("Iniciando função com parâmetros:",{espectador:t,palestrante:n,score:r}),t&&n&&void 0!==r){e.next=4;break}return console.error("Parâmetros inválidos:",{espectador:t,palestrante:n,score:r}),e.abrupt("return",null);case 4:return i=Kn.get("csrftoken"),console.log("CSRF Token obtido:",i),i||console.error("CSRF Token não encontrado!"),o={espectador:t,palestrante:n,score:r},console.log("Payload montado:",o),e.prev=9,console.log("Iniciando requisição para:","https://tedxibmec.fly.dev/api/scores/"),e.next=13,fetch("https://tedxibmec.fly.dev/api/scores/",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":i},body:JSON.stringify(o)});case 13:if(a=e.sent,console.log("Status da resposta:",a.status),console.log("Headers da resposta:",Object.fromEntries(a.headers.entries())),a.ok){e.next=22;break}return e.next=19,a.text();case 19:return s=e.sent,console.error("Erro na requisição:",{status:a.status,statusText:a.statusText,textoErro:s}),e.abrupt("return",null);case 22:return console.log("Resposta bem-sucedida, processando dados..."),e.next=25,a.json();case 25:return l=e.sent,console.log("Dados recebidos:",l),e.abrupt("return",l);case 30:return e.prev=30,e.t0=e.catch(9),console.error("Exceção capturada na requisição:",e.t0.message),console.error("Stack trace:",e.t0.stack),e.abrupt("return",null);case 35:case"end":return e.stop()}}),e,null,[[9,30]])})));return function(t,n,r){return e.apply(this,arguments)}}();return(0,t.useEffect)((function(){var e=JSON.parse(localStorage.getItem("completedQuizzes"))||[];D(e)}),[]),(0,t.useEffect)((function(){localStorage.setItem(u,JSON.stringify(v))}),[v,u]),(0,qn.jsxs)(Gi,{children:[(0,qn.jsx)(Qi,{progress:(e=v/p.length*100,Math.round(100*e)/100),color:"blue",backgroundColor:"gray",height:10}),(0,qn.jsx)(lo,{children:p[v].pergunta}),(0,qn.jsx)(Ki,{alternativas:p[v].alternativas,alternativaSelecionada:r,alternativaIncorreta:a,respostaCorreta:c?p[v].resposta:null,handleSelecao:function(e){i(e)}}),(0,qn.jsx)(Zn,{disabled:!r||h,type:"button",onClick:function(){r===p[v].resposta?(d(!0),x("ACERTOU!!"),O(),localStorage.setItem(m,JSON.stringify(y+20)),S(y+20),setTimeout((function(){v===p.length-1?(localStorage.removeItem(u),L(y+20).then((function(e){console.log(e)}))):(A(v+1),i(null),d(!1),x("ENVIAR"))}),1e3)):(s(r),d(!0),x("ERROU.."),setTimeout((function(){v===p.length-1?(localStorage.removeItem(u),L(y).then((function(e){console.log(e)}))):(A(v+1),i(null),d(!1),x("ENVIAR"))}),1e3))},children:P}),(0,qn.jsx)(no,{pontos:20}),(0,qn.jsx)(oo,{children:(0,qn.jsx)(ur,{})}),h&&(0,qn.jsx)(mo,{message:"Enviando pontuação..."})]})};var yo,So,wo,Po=Bn.article(yo||(yo=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    gap: 0.5rem;\n    justify-content: flex-end;\n    align-items: flex-end;\n    height: 15rem;\n"])));function xo(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var Eo=zn(So||(So=xo(["\n    from {\n        height: 0;\n        margin-top: auto;\n    }\n    to {\n        height: ","rem;\n        margin-top: 0;\n    }\n"])),(function(e){return e.altura})),_o=Bn.article(wo||(wo=xo(["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n\n    .avatar{\n        width: 4rem;\n        height: 4rem;\n\n        svg{\n            width: 2.5rem;\n        }\n    }\n    \n    .icone{\n        img{\n            width: 3.95088rem;\n            height: 3.6875rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 63.21/59.00;\n        }\n    }\n    \n    .torre {\n        width: 3.4375rem;\n        height: ",";\n        flex-shrink: 0;\n        background: #CD0909;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 900;\n        line-height: normal;\n        animation: "," 5s ease-out forwards;\n        transform-origin: bottom;\n    }\n"])),(function(e){return e.altura||"7.75rem"}),Eo);const Do=function(e){var t=e.posicaoNumero,n=void 0===t?1:t,r=e.nomeCompetidor,i=void 0===r?"michel":r,o=e.iconeCompetidor,a=void 0===o?"homem1":o;return e.altura,(0,qn.jsxs)(_o,{children:[(0,qn.jsx)("div",{className:"nome",children:i}),(0,qn.jsx)("div",{className:"icone",children:(0,qn.jsx)(_r,{className:"avatar",ativado:!0,children:Rr(a)})}),(0,qn.jsx)("div",{className:"torre",style:{height:function(e){switch(e){case 1:return 7.75;case 2:return 5.0625;case 3:return 3.25}}(n)+"rem"},children:n})]})},Oo=function(e){var t=e.top3,n=t.length;return(0,qn.jsxs)(Po,{children:[1===n&&(0,qn.jsx)(Do,{posicaoNumero:1,nomeCompetidor:t[0].espectador,iconeCompetidor:t[0].avatar}),2===n&&(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(Do,{posicaoNumero:2,nomeCompetidor:t[1].espectador,iconeCompetidor:t[1].avatar}),(0,qn.jsx)(Do,{posicaoNumero:1,nomeCompetidor:t[0].espectador,iconeCompetidor:t[0].avatar})]}),3===n&&(0,qn.jsxs)(qn.Fragment,{children:[(0,qn.jsx)(Do,{posicaoNumero:2,nomeCompetidor:t[1].espectador,iconeCompetidor:t[1].avatar}),(0,qn.jsx)(Do,{posicaoNumero:1,nomeCompetidor:t[0].espectador,iconeCompetidor:t[0].avatar}),(0,qn.jsx)(Do,{posicaoNumero:3,nomeCompetidor:t[2].espectador,iconeCompetidor:t[2].avatar})]})]})};var Io,Lo,ko,jo=Bn.article(Io||(Io=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: 0.5rem;\n    width: 100%;\n"])));function Fo(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var Mo=zn(Lo||(Lo=Fo(["\n  from {\n    width: 0;\n  }\n  to {\n    width: ","rem;\n  }\n"])),(function(e){return e.largura})),Uo=Bn.article(ko||(ko=Fo(["\n    width: ","rem;\n    height: 3.625rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.125rem;\n    animation: "," 5s ease-out forwards;\n    gap: 1rem;\n    \n    color: #FFF;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 900;\n    line-height: normal;\n    \n    .competidor{\n        width: 2rem;\n    }\n\n    .avatar{\n        width: 3rem;\n        height: 3rem;\n\n        svg{\n            width: 2rem;\n        }\n    }\n    \n    .info {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        \n        img{\n            width: 2.27681rem;\n            height: 2.125rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 36.43/34.00;\n            border: none;\n        }\n    }\n    \n    .container-pontuacao {\n        position: relative;\n        left: 3rem;\n    }\n"])),(function(e){return e.largura}),Mo);const To=function(e){var t=e.posicao,n=void 0===t?1:t,r=e.icone,i=void 0===r?"homem1":r,o=e.nome,a=void 0===o?"michel":o,s=e.pontuacao,l=void 0===s?90:s,c=e.pontuacaoMaxima,d=void 0===c?100:c;return(0,qn.jsxs)(Uo,{largura:function(e){return 0===d&&(d=100),e/d*15}(l),children:[(0,qn.jsxs)("div",{children:["#",n]}),(0,qn.jsxs)("div",{className:"info",children:[(0,qn.jsx)(_r,{className:"avatar",ativado:!1,children:Rr(i)}),(0,qn.jsx)("div",{className:"competidor",children:a})]}),(0,qn.jsx)("div",{className:"container-pontuacao",children:l})]})};function Ro(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const No=function(e){var n,r,i=e.top5,o=(n=(0,t.useState)(100),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Ro(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ro(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,t.useEffect)((function(){l()}),[i]);var l=function(){var e=0;i.forEach((function(t){t.score>e&&(e=t.score)})),s(e)};return(0,qn.jsx)(jo,{children:i.map((function(e,t){return(0,qn.jsx)(To,{posicao:t+1,icone:e.avatar,nome:e.espectador,pontuacao:e.score,pontuacaoMaxima:a},t)}))})};function Wo(e){return Wo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Wo(e)}function Bo(){Bo=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof C?t:C,a=Object.create(o.prototype),s=new I(r||[]);return i(a,"_invoke",{value:E(e,n,s)}),a}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var m="suspendedStart",p="suspendedYield",f="executing",h="completed",g={};function C(){}function v(){}function A(){}var b={};c(b,a,(function(){return this}));var y=Object.getPrototypeOf,S=y&&y(y(L([])));S&&S!==n&&r.call(S,a)&&(b=S);var w=A.prototype=C.prototype=Object.create(b);function P(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(i,o,a,s){var l=u(e[i],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==Wo(d)&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,a,s)}),(function(e){n("throw",e,a,s)})):t.resolve(d).then((function(e){c.value=e,a(c)}),(function(e){return n("throw",e,a,s)}))}s(l.arg)}var o;i(this,"_invoke",{value:function(e,r){function i(){return new t((function(t,i){n(e,r,t,i)}))}return o=o?o.then(i,i):i()}})}function E(t,n,r){var i=m;return function(o,a){if(i===f)throw new Error("Generator is already running");if(i===h){if("throw"===o)throw a;return{value:e,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var l=_(s,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===m)throw i=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=f;var c=u(t,n,r);if("normal"===c.type){if(i=r.done?h:p,c.arg===g)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(i=h,r.method="throw",r.arg=c.arg)}}}function _(t,n){var r=n.method,i=t.iterator[r];if(i===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var o=u(i,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,g;var a=o.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function D(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function L(t){if(t||""===t){var n=t[a];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function n(){for(;++i<t.length;)if(r.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(Wo(t)+" is not iterable")}return v.prototype=A,i(w,"constructor",{value:A,configurable:!0}),i(A,"constructor",{value:v,configurable:!0}),v.displayName=c(A,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,A):(e.__proto__=A,c(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},t.awrap=function(e){return{__await:e}},P(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,n,r,i,o){void 0===o&&(o=Promise);var a=new x(d(e,n,r,i),o);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(w),c(w,l,"Generator"),c(w,a,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=L,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(r,i){return s.type="throw",s.arg=t,n.next=r,i&&(n.method="next",n.arg=e),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),O(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;O(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:L(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function zo(e,t,n,r,i,o,a){try{var s=e[o](a),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,i)}function Go(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||Vo(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Vo(e,t){if(e){if("string"==typeof e)return Ho(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ho(e,t):void 0}}function Ho(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Jo=function(){var e=J(),n=Go((0,t.useState)(localStorage.getItem("palestrante-id")||"Palestrante"),2),r=n[0],i=(n[1],Go((0,t.useState)(localStorage.getItem("palestrante-nome")||"Palestrante"),2)),o=i[0],a=(i[1],Go((0,t.useState)("Resultado da dinâmica do "+o),2)),s=a[0],l=a[1],c=Go((0,t.useState)([]),2),d=c[0],u=c[1],m=Go((0,t.useState)(!0),2),p=(m[0],m[1]),f=Go((0,t.useState)([]),2),h=f[0],g=f[1],C=function(){var e,t=(e=Bo().mark((function e(){var t,n,r,i,o;return Bo().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=localStorage.getItem("palestrante-id"),t="0"===n?"https://tedxibmec.fly.dev/api/rankings/overall/":"https://tedxibmec.fly.dev/api/rankings/speaker/".concat(n,"/"),r=Kn.get("csrftoken"),e.next=5,fetch(t,{method:"GET",headers:{"Content-Type":"application/json","X-CSRFToken":r}});case 5:if((i=e.sent).ok){e.next=11;break}return console.error("Erro ao buscar o ranking"),g([{espectador:"Lucas",score:100,avatar:"robo2"},{espectador:"Maria",score:90,avatar:"homem2"},{espectador:"João",score:80,avatar:"mulher1"},{espectador:"Ana",score:70,avatar:"mulher2"},{espectador:"Pedro",score:60,avatar:"robo1"}]),e.abrupt("return");case 11:return e.next=13,i.json();case 13:o=e.sent,g(o);case 15:case"end":return e.stop()}}),e)})),function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function a(e){zo(o,r,i,a,s,"next",e)}function s(e){zo(o,r,i,a,s,"throw",e)}a(void 0)}))});return function(){return t.apply(this,arguments)}}();return(0,t.useEffect)((function(){var e,t;console.log("ranking",d),0===h.length&&C(),e=(t=h,function(e){if(Array.isArray(e))return Ho(e)}(t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||Vo(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).sort((function(e,t){return t.score-e.score})).slice(0,5),u(e),function(){p(!0);setTimeout((function(){p(!1)}),5e3)}()}),[h]),(0,t.useEffect)((function(){}),[]),(0,t.useEffect)((function(){"0"===r&&l("Ranking Geral")}),[r]),(0,qn.jsxs)(Gi,{children:[(0,qn.jsx)(bi,{titulo:s,subtitulo:(0,qn.jsx)(qn.Fragment,{children:(0,qn.jsx)(Zn,{className:"mini",onClick:function(){e("/cronograma")},children:"SAIR"})})}),(0,qn.jsx)(Oo,{top3:d.slice(0,3)}),(0,qn.jsx)(No,{top5:d}),(0,qn.jsx)(oo,{children:(0,qn.jsx)(ur,{})})]})};var Qo,Yo=Bn.article(Qo||(Qo=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    color: #FFF;\n    font-family: Inter;\n    font-size: 1rem;\n    font-style: italic;\n    font-weight: 400;\n    line-height: normal;\n"])));const $o=function(e){var t=e.children;return(0,qn.jsx)(Yo,{children:t})},qo=function(e){return(0,qn.jsx)(qn.Fragment,{children:(0,qn.jsx)("div",{className:"container-selecao",children:e.children})})};var Zo,Xo=Bn.article(Zo||(Zo=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    max-width: 365px;\n    display: flex;\n\n    .swiper-slide {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n"])));function Ko(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function ea(e,t){void 0===e&&(e={}),void 0===t&&(t={});const n=["__proto__","constructor","prototype"];Object.keys(t).filter((e=>n.indexOf(e)<0)).forEach((n=>{void 0===e[n]?e[n]=t[n]:Ko(t[n])&&Ko(e[n])&&Object.keys(t[n]).length>0&&ea(e[n],t[n])}))}const ta={body:{},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector:()=>null,querySelectorAll:()=>[],getElementById:()=>null,createEvent:()=>({initEvent(){}}),createElement:()=>({children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName:()=>[]}),createElementNS:()=>({}),importNode:()=>null,location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function na(){const e="undefined"!=typeof document?document:{};return ea(e,ta),e}const ra={document:ta,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState(){},pushState(){},go(){},back(){}},CustomEvent:function(){return this},addEventListener(){},removeEventListener(){},getComputedStyle:()=>({getPropertyValue:()=>""}),Image(){},Date(){},screen:{},setTimeout(){},clearTimeout(){},matchMedia:()=>({}),requestAnimationFrame:e=>"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0),cancelAnimationFrame(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function ia(){const e="undefined"!=typeof window?window:{};return ea(e,ra),e}function oa(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function aa(){return Date.now()}function sa(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)}function la(e){return"undefined"!=typeof window&&void 0!==window.HTMLElement?e instanceof HTMLElement:e&&(1===e.nodeType||11===e.nodeType)}function ca(){const e=Object(arguments.length<=0?void 0:arguments[0]),t=["__proto__","constructor","prototype"];for(let n=1;n<arguments.length;n+=1){const r=n<0||arguments.length<=n?void 0:arguments[n];if(null!=r&&!la(r)){const n=Object.keys(Object(r)).filter((e=>t.indexOf(e)<0));for(let t=0,i=n.length;t<i;t+=1){const i=n[t],o=Object.getOwnPropertyDescriptor(r,i);void 0!==o&&o.enumerable&&(sa(e[i])&&sa(r[i])?r[i].__swiper__?e[i]=r[i]:ca(e[i],r[i]):!sa(e[i])&&sa(r[i])?(e[i]={},r[i].__swiper__?e[i]=r[i]:ca(e[i],r[i])):e[i]=r[i])}}}return e}function da(e,t,n){e.style.setProperty(t,n)}function ua(e){let{swiper:t,targetPosition:n,side:r}=e;const i=ia(),o=-t.translate;let a,s=null;const l=t.params.speed;t.wrapperEl.style.scrollSnapType="none",i.cancelAnimationFrame(t.cssModeFrameID);const c=n>o?"next":"prev",d=(e,t)=>"next"===c&&e>=t||"prev"===c&&e<=t,u=()=>{a=(new Date).getTime(),null===s&&(s=a);const e=Math.max(Math.min((a-s)/l,1),0),c=.5-Math.cos(e*Math.PI)/2;let m=o+c*(n-o);if(d(m,n)&&(m=n),t.wrapperEl.scrollTo({[r]:m}),d(m,n))return t.wrapperEl.style.overflow="hidden",t.wrapperEl.style.scrollSnapType="",setTimeout((()=>{t.wrapperEl.style.overflow="",t.wrapperEl.scrollTo({[r]:m})})),void i.cancelAnimationFrame(t.cssModeFrameID);t.cssModeFrameID=i.requestAnimationFrame(u)};u()}function ma(e,t){void 0===t&&(t="");const n=ia(),r=[...e.children];return n.HTMLSlotElement&&e instanceof HTMLSlotElement&&r.push(...e.assignedElements()),t?r.filter((e=>e.matches(t))):r}function pa(e){try{return void console.warn(e)}catch(e){}}function fa(e,t){void 0===t&&(t=[]);const n=document.createElement(e);return n.classList.add(...Array.isArray(t)?t:function(e){return void 0===e&&(e=""),e.trim().split(" ").filter((e=>!!e.trim()))}(t)),n}function ha(e,t){return ia().getComputedStyle(e,null).getPropertyValue(t)}function ga(e){let t,n=e;if(n){for(t=0;null!==(n=n.previousSibling);)1===n.nodeType&&(t+=1);return t}}function Ca(e,t,n){const r=ia();return n?e["width"===t?"offsetWidth":"offsetHeight"]+parseFloat(r.getComputedStyle(e,null).getPropertyValue("width"===t?"margin-right":"margin-top"))+parseFloat(r.getComputedStyle(e,null).getPropertyValue("width"===t?"margin-left":"margin-bottom")):e.offsetWidth}let va,Aa,ba;function ya(){return va||(va=function(){const e=ia(),t=na();return{smoothScroll:t.documentElement&&t.documentElement.style&&"scrollBehavior"in t.documentElement.style,touch:!!("ontouchstart"in e||e.DocumentTouch&&t instanceof e.DocumentTouch)}}()),va}function Sa(e){return void 0===e&&(e={}),Aa||(Aa=function(e){let{userAgent:t}=void 0===e?{}:e;const n=ya(),r=ia(),i=r.navigator.platform,o=t||r.navigator.userAgent,a={ios:!1,android:!1},s=r.screen.width,l=r.screen.height,c=o.match(/(Android);?[\s\/]+([\d.]+)?/);let d=o.match(/(iPad).*OS\s([\d_]+)/);const u=o.match(/(iPod)(.*OS\s([\d_]+))?/),m=!d&&o.match(/(iPhone\sOS|iOS)\s([\d_]+)/),p="Win32"===i;let f="MacIntel"===i;return!d&&f&&n.touch&&["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(`${s}x${l}`)>=0&&(d=o.match(/(Version)\/([\d.]+)/),d||(d=[0,1,"13_0_0"]),f=!1),c&&!p&&(a.os="android",a.android=!0),(d||m||u)&&(a.os="ios",a.ios=!0),a}(e)),Aa}function wa(){return ba||(ba=function(){const e=ia(),t=Sa();let n=!1;function r(){const t=e.navigator.userAgent.toLowerCase();return t.indexOf("safari")>=0&&t.indexOf("chrome")<0&&t.indexOf("android")<0}if(r()){const t=String(e.navigator.userAgent);if(t.includes("Version/")){const[e,r]=t.split("Version/")[1].split(" ")[0].split(".").map((e=>Number(e)));n=e<16||16===e&&r<2}}const i=/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent),o=r();return{isSafari:n||o,needPerspectiveFix:n,need3dFix:o||i&&t.ios,isWebView:i}}()),ba}var Pa={on(e,t,n){const r=this;if(!r.eventsListeners||r.destroyed)return r;if("function"!=typeof t)return r;const i=n?"unshift":"push";return e.split(" ").forEach((e=>{r.eventsListeners[e]||(r.eventsListeners[e]=[]),r.eventsListeners[e][i](t)})),r},once(e,t,n){const r=this;if(!r.eventsListeners||r.destroyed)return r;if("function"!=typeof t)return r;function i(){r.off(e,i),i.__emitterProxy&&delete i.__emitterProxy;for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];t.apply(r,o)}return i.__emitterProxy=t,r.on(e,i,n)},onAny(e,t){const n=this;if(!n.eventsListeners||n.destroyed)return n;if("function"!=typeof e)return n;const r=t?"unshift":"push";return n.eventsAnyListeners.indexOf(e)<0&&n.eventsAnyListeners[r](e),n},offAny(e){const t=this;if(!t.eventsListeners||t.destroyed)return t;if(!t.eventsAnyListeners)return t;const n=t.eventsAnyListeners.indexOf(e);return n>=0&&t.eventsAnyListeners.splice(n,1),t},off(e,t){const n=this;return!n.eventsListeners||n.destroyed?n:n.eventsListeners?(e.split(" ").forEach((e=>{void 0===t?n.eventsListeners[e]=[]:n.eventsListeners[e]&&n.eventsListeners[e].forEach(((r,i)=>{(r===t||r.__emitterProxy&&r.__emitterProxy===t)&&n.eventsListeners[e].splice(i,1)}))})),n):n},emit(){const e=this;if(!e.eventsListeners||e.destroyed)return e;if(!e.eventsListeners)return e;let t,n,r;for(var i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];return"string"==typeof o[0]||Array.isArray(o[0])?(t=o[0],n=o.slice(1,o.length),r=e):(t=o[0].events,n=o[0].data,r=o[0].context||e),n.unshift(r),(Array.isArray(t)?t:t.split(" ")).forEach((t=>{e.eventsAnyListeners&&e.eventsAnyListeners.length&&e.eventsAnyListeners.forEach((e=>{e.apply(r,[t,...n])})),e.eventsListeners&&e.eventsListeners[t]&&e.eventsListeners[t].forEach((e=>{e.apply(r,n)}))})),e}};const xa=(e,t,n)=>{t&&!e.classList.contains(n)?e.classList.add(n):!t&&e.classList.contains(n)&&e.classList.remove(n)},Ea=(e,t,n)=>{t&&!e.classList.contains(n)?e.classList.add(n):!t&&e.classList.contains(n)&&e.classList.remove(n)},_a=(e,t)=>{if(!e||e.destroyed||!e.params)return;const n=t.closest(e.isElement?"swiper-slide":`.${e.params.slideClass}`);if(n){let t=n.querySelector(`.${e.params.lazyPreloaderClass}`);!t&&e.isElement&&(n.shadowRoot?t=n.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`):requestAnimationFrame((()=>{n.shadowRoot&&(t=n.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`),t&&t.remove())}))),t&&t.remove()}},Da=(e,t)=>{if(!e.slides[t])return;const n=e.slides[t].querySelector('[loading="lazy"]');n&&n.removeAttribute("loading")},Oa=e=>{if(!e||e.destroyed||!e.params)return;let t=e.params.lazyPreloadPrevNext;const n=e.slides.length;if(!n||!t||t<0)return;t=Math.min(t,n);const r="auto"===e.params.slidesPerView?e.slidesPerViewDynamic():Math.ceil(e.params.slidesPerView),i=e.activeIndex;if(e.params.grid&&e.params.grid.rows>1){const n=i,o=[n-t];return o.push(...Array.from({length:t}).map(((e,t)=>n+r+t))),void e.slides.forEach(((t,n)=>{o.includes(t.column)&&Da(e,n)}))}const o=i+r-1;if(e.params.rewind||e.params.loop)for(let r=i-t;r<=o+t;r+=1){const t=(r%n+n)%n;(t<i||t>o)&&Da(e,t)}else for(let r=Math.max(i-t,0);r<=Math.min(o+t,n-1);r+=1)r!==i&&(r>o||r<i)&&Da(e,r)};var Ia={updateSize:function(){const e=this;let t,n;const r=e.el;t=void 0!==e.params.width&&null!==e.params.width?e.params.width:r.clientWidth,n=void 0!==e.params.height&&null!==e.params.height?e.params.height:r.clientHeight,0===t&&e.isHorizontal()||0===n&&e.isVertical()||(t=t-parseInt(ha(r,"padding-left")||0,10)-parseInt(ha(r,"padding-right")||0,10),n=n-parseInt(ha(r,"padding-top")||0,10)-parseInt(ha(r,"padding-bottom")||0,10),Number.isNaN(t)&&(t=0),Number.isNaN(n)&&(n=0),Object.assign(e,{width:t,height:n,size:e.isHorizontal()?t:n}))},updateSlides:function(){const e=this;function t(t,n){return parseFloat(t.getPropertyValue(e.getDirectionLabel(n))||0)}const n=e.params,{wrapperEl:r,slidesEl:i,size:o,rtlTranslate:a,wrongRTL:s}=e,l=e.virtual&&n.virtual.enabled,c=l?e.virtual.slides.length:e.slides.length,d=ma(i,`.${e.params.slideClass}, swiper-slide`),u=l?e.virtual.slides.length:d.length;let m=[];const p=[],f=[];let h=n.slidesOffsetBefore;"function"==typeof h&&(h=n.slidesOffsetBefore.call(e));let g=n.slidesOffsetAfter;"function"==typeof g&&(g=n.slidesOffsetAfter.call(e));const C=e.snapGrid.length,v=e.slidesGrid.length;let A=n.spaceBetween,b=-h,y=0,S=0;if(void 0===o)return;"string"==typeof A&&A.indexOf("%")>=0?A=parseFloat(A.replace("%",""))/100*o:"string"==typeof A&&(A=parseFloat(A)),e.virtualSize=-A,d.forEach((e=>{a?e.style.marginLeft="":e.style.marginRight="",e.style.marginBottom="",e.style.marginTop=""})),n.centeredSlides&&n.cssMode&&(da(r,"--swiper-centered-offset-before",""),da(r,"--swiper-centered-offset-after",""));const w=n.grid&&n.grid.rows>1&&e.grid;let P;w?e.grid.initSlides(d):e.grid&&e.grid.unsetSlides();const x="auto"===n.slidesPerView&&n.breakpoints&&Object.keys(n.breakpoints).filter((e=>void 0!==n.breakpoints[e].slidesPerView)).length>0;for(let r=0;r<u;r+=1){let i;if(P=0,d[r]&&(i=d[r]),w&&e.grid.updateSlide(r,i,d),!d[r]||"none"!==ha(i,"display")){if("auto"===n.slidesPerView){x&&(d[r].style[e.getDirectionLabel("width")]="");const o=getComputedStyle(i),a=i.style.transform,s=i.style.webkitTransform;if(a&&(i.style.transform="none"),s&&(i.style.webkitTransform="none"),n.roundLengths)P=e.isHorizontal()?Ca(i,"width",!0):Ca(i,"height",!0);else{const e=t(o,"width"),n=t(o,"padding-left"),r=t(o,"padding-right"),a=t(o,"margin-left"),s=t(o,"margin-right"),l=o.getPropertyValue("box-sizing");if(l&&"border-box"===l)P=e+a+s;else{const{clientWidth:t,offsetWidth:o}=i;P=e+n+r+a+s+(o-t)}}a&&(i.style.transform=a),s&&(i.style.webkitTransform=s),n.roundLengths&&(P=Math.floor(P))}else P=(o-(n.slidesPerView-1)*A)/n.slidesPerView,n.roundLengths&&(P=Math.floor(P)),d[r]&&(d[r].style[e.getDirectionLabel("width")]=`${P}px`);d[r]&&(d[r].swiperSlideSize=P),f.push(P),n.centeredSlides?(b=b+P/2+y/2+A,0===y&&0!==r&&(b=b-o/2-A),0===r&&(b=b-o/2-A),Math.abs(b)<.001&&(b=0),n.roundLengths&&(b=Math.floor(b)),S%n.slidesPerGroup==0&&m.push(b),p.push(b)):(n.roundLengths&&(b=Math.floor(b)),(S-Math.min(e.params.slidesPerGroupSkip,S))%e.params.slidesPerGroup==0&&m.push(b),p.push(b),b=b+P+A),e.virtualSize+=P+A,y=P,S+=1}}if(e.virtualSize=Math.max(e.virtualSize,o)+g,a&&s&&("slide"===n.effect||"coverflow"===n.effect)&&(r.style.width=`${e.virtualSize+A}px`),n.setWrapperSize&&(r.style[e.getDirectionLabel("width")]=`${e.virtualSize+A}px`),w&&e.grid.updateWrapperSize(P,m),!n.centeredSlides){const t=[];for(let r=0;r<m.length;r+=1){let i=m[r];n.roundLengths&&(i=Math.floor(i)),m[r]<=e.virtualSize-o&&t.push(i)}m=t,Math.floor(e.virtualSize-o)-Math.floor(m[m.length-1])>1&&m.push(e.virtualSize-o)}if(l&&n.loop){const t=f[0]+A;if(n.slidesPerGroup>1){const r=Math.ceil((e.virtual.slidesBefore+e.virtual.slidesAfter)/n.slidesPerGroup),i=t*n.slidesPerGroup;for(let e=0;e<r;e+=1)m.push(m[m.length-1]+i)}for(let r=0;r<e.virtual.slidesBefore+e.virtual.slidesAfter;r+=1)1===n.slidesPerGroup&&m.push(m[m.length-1]+t),p.push(p[p.length-1]+t),e.virtualSize+=t}if(0===m.length&&(m=[0]),0!==A){const t=e.isHorizontal()&&a?"marginLeft":e.getDirectionLabel("marginRight");d.filter(((e,t)=>!(n.cssMode&&!n.loop)||t!==d.length-1)).forEach((e=>{e.style[t]=`${A}px`}))}if(n.centeredSlides&&n.centeredSlidesBounds){let e=0;f.forEach((t=>{e+=t+(A||0)})),e-=A;const t=e>o?e-o:0;m=m.map((e=>e<=0?-h:e>t?t+g:e))}if(n.centerInsufficientSlides){let e=0;f.forEach((t=>{e+=t+(A||0)})),e-=A;const t=(n.slidesOffsetBefore||0)+(n.slidesOffsetAfter||0);if(e+t<o){const n=(o-e-t)/2;m.forEach(((e,t)=>{m[t]=e-n})),p.forEach(((e,t)=>{p[t]=e+n}))}}if(Object.assign(e,{slides:d,snapGrid:m,slidesGrid:p,slidesSizesGrid:f}),n.centeredSlides&&n.cssMode&&!n.centeredSlidesBounds){da(r,"--swiper-centered-offset-before",-m[0]+"px"),da(r,"--swiper-centered-offset-after",e.size/2-f[f.length-1]/2+"px");const t=-e.snapGrid[0],n=-e.slidesGrid[0];e.snapGrid=e.snapGrid.map((e=>e+t)),e.slidesGrid=e.slidesGrid.map((e=>e+n))}if(u!==c&&e.emit("slidesLengthChange"),m.length!==C&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),p.length!==v&&e.emit("slidesGridLengthChange"),n.watchSlidesProgress&&e.updateSlidesOffset(),e.emit("slidesUpdated"),!(l||n.cssMode||"slide"!==n.effect&&"fade"!==n.effect)){const t=`${n.containerModifierClass}backface-hidden`,r=e.el.classList.contains(t);u<=n.maxBackfaceHiddenSlides?r||e.el.classList.add(t):r&&e.el.classList.remove(t)}},updateAutoHeight:function(e){const t=this,n=[],r=t.virtual&&t.params.virtual.enabled;let i,o=0;"number"==typeof e?t.setTransition(e):!0===e&&t.setTransition(t.params.speed);const a=e=>r?t.slides[t.getSlideIndexByData(e)]:t.slides[e];if("auto"!==t.params.slidesPerView&&t.params.slidesPerView>1)if(t.params.centeredSlides)(t.visibleSlides||[]).forEach((e=>{n.push(e)}));else for(i=0;i<Math.ceil(t.params.slidesPerView);i+=1){const e=t.activeIndex+i;if(e>t.slides.length&&!r)break;n.push(a(e))}else n.push(a(t.activeIndex));for(i=0;i<n.length;i+=1)if(void 0!==n[i]){const e=n[i].offsetHeight;o=e>o?e:o}(o||0===o)&&(t.wrapperEl.style.height=`${o}px`)},updateSlidesOffset:function(){const e=this,t=e.slides,n=e.isElement?e.isHorizontal()?e.wrapperEl.offsetLeft:e.wrapperEl.offsetTop:0;for(let r=0;r<t.length;r+=1)t[r].swiperSlideOffset=(e.isHorizontal()?t[r].offsetLeft:t[r].offsetTop)-n-e.cssOverflowAdjustment()},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);const t=this,n=t.params,{slides:r,rtlTranslate:i,snapGrid:o}=t;if(0===r.length)return;void 0===r[0].swiperSlideOffset&&t.updateSlidesOffset();let a=-e;i&&(a=e),t.visibleSlidesIndexes=[],t.visibleSlides=[];let s=n.spaceBetween;"string"==typeof s&&s.indexOf("%")>=0?s=parseFloat(s.replace("%",""))/100*t.size:"string"==typeof s&&(s=parseFloat(s));for(let e=0;e<r.length;e+=1){const l=r[e];let c=l.swiperSlideOffset;n.cssMode&&n.centeredSlides&&(c-=r[0].swiperSlideOffset);const d=(a+(n.centeredSlides?t.minTranslate():0)-c)/(l.swiperSlideSize+s),u=(a-o[0]+(n.centeredSlides?t.minTranslate():0)-c)/(l.swiperSlideSize+s),m=-(a-c),p=m+t.slidesSizesGrid[e],f=m>=0&&m<=t.size-t.slidesSizesGrid[e],h=m>=0&&m<t.size-1||p>1&&p<=t.size||m<=0&&p>=t.size;h&&(t.visibleSlides.push(l),t.visibleSlidesIndexes.push(e)),xa(l,h,n.slideVisibleClass),xa(l,f,n.slideFullyVisibleClass),l.progress=i?-d:d,l.originalProgress=i?-u:u}},updateProgress:function(e){const t=this;if(void 0===e){const n=t.rtlTranslate?-1:1;e=t&&t.translate&&t.translate*n||0}const n=t.params,r=t.maxTranslate()-t.minTranslate();let{progress:i,isBeginning:o,isEnd:a,progressLoop:s}=t;const l=o,c=a;if(0===r)i=0,o=!0,a=!0;else{i=(e-t.minTranslate())/r;const n=Math.abs(e-t.minTranslate())<1,s=Math.abs(e-t.maxTranslate())<1;o=n||i<=0,a=s||i>=1,n&&(i=0),s&&(i=1)}if(n.loop){const n=t.getSlideIndexByData(0),r=t.getSlideIndexByData(t.slides.length-1),i=t.slidesGrid[n],o=t.slidesGrid[r],a=t.slidesGrid[t.slidesGrid.length-1],l=Math.abs(e);s=l>=i?(l-i)/a:(l+a-o)/a,s>1&&(s-=1)}Object.assign(t,{progress:i,progressLoop:s,isBeginning:o,isEnd:a}),(n.watchSlidesProgress||n.centeredSlides&&n.autoHeight)&&t.updateSlidesProgress(e),o&&!l&&t.emit("reachBeginning toEdge"),a&&!c&&t.emit("reachEnd toEdge"),(l&&!o||c&&!a)&&t.emit("fromEdge"),t.emit("progress",i)},updateSlidesClasses:function(){const e=this,{slides:t,params:n,slidesEl:r,activeIndex:i}=e,o=e.virtual&&n.virtual.enabled,a=e.grid&&n.grid&&n.grid.rows>1,s=e=>ma(r,`.${n.slideClass}${e}, swiper-slide${e}`)[0];let l,c,d;if(o)if(n.loop){let t=i-e.virtual.slidesBefore;t<0&&(t=e.virtual.slides.length+t),t>=e.virtual.slides.length&&(t-=e.virtual.slides.length),l=s(`[data-swiper-slide-index="${t}"]`)}else l=s(`[data-swiper-slide-index="${i}"]`);else a?(l=t.find((e=>e.column===i)),d=t.find((e=>e.column===i+1)),c=t.find((e=>e.column===i-1))):l=t[i];l&&(a||(d=function(e,t){const n=[];for(;e.nextElementSibling;){const r=e.nextElementSibling;t?r.matches(t)&&n.push(r):n.push(r),e=r}return n}(l,`.${n.slideClass}, swiper-slide`)[0],n.loop&&!d&&(d=t[0]),c=function(e,t){const n=[];for(;e.previousElementSibling;){const r=e.previousElementSibling;t?r.matches(t)&&n.push(r):n.push(r),e=r}return n}(l,`.${n.slideClass}, swiper-slide`)[0],n.loop&&0===!c&&(c=t[t.length-1]))),t.forEach((e=>{Ea(e,e===l,n.slideActiveClass),Ea(e,e===d,n.slideNextClass),Ea(e,e===c,n.slidePrevClass)})),e.emitSlidesClasses()},updateActiveIndex:function(e){const t=this,n=t.rtlTranslate?t.translate:-t.translate,{snapGrid:r,params:i,activeIndex:o,realIndex:a,snapIndex:s}=t;let l,c=e;const d=e=>{let n=e-t.virtual.slidesBefore;return n<0&&(n=t.virtual.slides.length+n),n>=t.virtual.slides.length&&(n-=t.virtual.slides.length),n};if(void 0===c&&(c=function(e){const{slidesGrid:t,params:n}=e,r=e.rtlTranslate?e.translate:-e.translate;let i;for(let e=0;e<t.length;e+=1)void 0!==t[e+1]?r>=t[e]&&r<t[e+1]-(t[e+1]-t[e])/2?i=e:r>=t[e]&&r<t[e+1]&&(i=e+1):r>=t[e]&&(i=e);return n.normalizeSlideIndex&&(i<0||void 0===i)&&(i=0),i}(t)),r.indexOf(n)>=0)l=r.indexOf(n);else{const e=Math.min(i.slidesPerGroupSkip,c);l=e+Math.floor((c-e)/i.slidesPerGroup)}if(l>=r.length&&(l=r.length-1),c===o&&!t.params.loop)return void(l!==s&&(t.snapIndex=l,t.emit("snapIndexChange")));if(c===o&&t.params.loop&&t.virtual&&t.params.virtual.enabled)return void(t.realIndex=d(c));const u=t.grid&&i.grid&&i.grid.rows>1;let m;if(t.virtual&&i.virtual.enabled&&i.loop)m=d(c);else if(u){const e=t.slides.find((e=>e.column===c));let n=parseInt(e.getAttribute("data-swiper-slide-index"),10);Number.isNaN(n)&&(n=Math.max(t.slides.indexOf(e),0)),m=Math.floor(n/i.grid.rows)}else if(t.slides[c]){const e=t.slides[c].getAttribute("data-swiper-slide-index");m=e?parseInt(e,10):c}else m=c;Object.assign(t,{previousSnapIndex:s,snapIndex:l,previousRealIndex:a,realIndex:m,previousIndex:o,activeIndex:c}),t.initialized&&Oa(t),t.emit("activeIndexChange"),t.emit("snapIndexChange"),(t.initialized||t.params.runCallbacksOnInit)&&(a!==m&&t.emit("realIndexChange"),t.emit("slideChange"))},updateClickedSlide:function(e,t){const n=this,r=n.params;let i=e.closest(`.${r.slideClass}, swiper-slide`);!i&&n.isElement&&t&&t.length>1&&t.includes(e)&&[...t.slice(t.indexOf(e)+1,t.length)].forEach((e=>{!i&&e.matches&&e.matches(`.${r.slideClass}, swiper-slide`)&&(i=e)}));let o,a=!1;if(i)for(let e=0;e<n.slides.length;e+=1)if(n.slides[e]===i){a=!0,o=e;break}if(!i||!a)return n.clickedSlide=void 0,void(n.clickedIndex=void 0);n.clickedSlide=i,n.virtual&&n.params.virtual.enabled?n.clickedIndex=parseInt(i.getAttribute("data-swiper-slide-index"),10):n.clickedIndex=o,r.slideToClickedSlide&&void 0!==n.clickedIndex&&n.clickedIndex!==n.activeIndex&&n.slideToClickedSlide()}},La={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");const{params:t,rtlTranslate:n,translate:r,wrapperEl:i}=this;if(t.virtualTranslate)return n?-r:r;if(t.cssMode)return r;let o=function(e,t){void 0===t&&(t="x");const n=ia();let r,i,o;const a=function(e){const t=ia();let n;return t.getComputedStyle&&(n=t.getComputedStyle(e,null)),!n&&e.currentStyle&&(n=e.currentStyle),n||(n=e.style),n}(e);return n.WebKitCSSMatrix?(i=a.transform||a.webkitTransform,i.split(",").length>6&&(i=i.split(", ").map((e=>e.replace(",","."))).join(", ")),o=new n.WebKitCSSMatrix("none"===i?"":i)):(o=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),r=o.toString().split(",")),"x"===t&&(i=n.WebKitCSSMatrix?o.m41:16===r.length?parseFloat(r[12]):parseFloat(r[4])),"y"===t&&(i=n.WebKitCSSMatrix?o.m42:16===r.length?parseFloat(r[13]):parseFloat(r[5])),i||0}(i,e);return o+=this.cssOverflowAdjustment(),n&&(o=-o),o||0},setTranslate:function(e,t){const n=this,{rtlTranslate:r,params:i,wrapperEl:o,progress:a}=n;let s,l=0,c=0;n.isHorizontal()?l=r?-e:e:c=e,i.roundLengths&&(l=Math.floor(l),c=Math.floor(c)),n.previousTranslate=n.translate,n.translate=n.isHorizontal()?l:c,i.cssMode?o[n.isHorizontal()?"scrollLeft":"scrollTop"]=n.isHorizontal()?-l:-c:i.virtualTranslate||(n.isHorizontal()?l-=n.cssOverflowAdjustment():c-=n.cssOverflowAdjustment(),o.style.transform=`translate3d(${l}px, ${c}px, 0px)`);const d=n.maxTranslate()-n.minTranslate();s=0===d?0:(e-n.minTranslate())/d,s!==a&&n.updateProgress(e),n.emit("setTranslate",n.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,n,r,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0),void 0===r&&(r=!0);const o=this,{params:a,wrapperEl:s}=o;if(o.animating&&a.preventInteractionOnTransition)return!1;const l=o.minTranslate(),c=o.maxTranslate();let d;if(d=r&&e>l?l:r&&e<c?c:e,o.updateProgress(d),a.cssMode){const e=o.isHorizontal();if(0===t)s[e?"scrollLeft":"scrollTop"]=-d;else{if(!o.support.smoothScroll)return ua({swiper:o,targetPosition:-d,side:e?"left":"top"}),!0;s.scrollTo({[e?"left":"top"]:-d,behavior:"smooth"})}return!0}return 0===t?(o.setTransition(0),o.setTranslate(d),n&&(o.emit("beforeTransitionStart",t,i),o.emit("transitionEnd"))):(o.setTransition(t),o.setTranslate(d),n&&(o.emit("beforeTransitionStart",t,i),o.emit("transitionStart")),o.animating||(o.animating=!0,o.onTranslateToWrapperTransitionEnd||(o.onTranslateToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.wrapperEl.removeEventListener("transitionend",o.onTranslateToWrapperTransitionEnd),o.onTranslateToWrapperTransitionEnd=null,delete o.onTranslateToWrapperTransitionEnd,o.animating=!1,n&&o.emit("transitionEnd"))}),o.wrapperEl.addEventListener("transitionend",o.onTranslateToWrapperTransitionEnd))),!0}};function ka(e){let{swiper:t,runCallbacks:n,direction:r,step:i}=e;const{activeIndex:o,previousIndex:a}=t;let s=r;if(s||(s=o>a?"next":o<a?"prev":"reset"),t.emit(`transition${i}`),n&&o!==a){if("reset"===s)return void t.emit(`slideResetTransition${i}`);t.emit(`slideChangeTransition${i}`),"next"===s?t.emit(`slideNextTransition${i}`):t.emit(`slidePrevTransition${i}`)}}var ja={setTransition:function(e,t){const n=this;n.params.cssMode||(n.wrapperEl.style.transitionDuration=`${e}ms`,n.wrapperEl.style.transitionDelay=0===e?"0ms":""),n.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);const n=this,{params:r}=n;r.cssMode||(r.autoHeight&&n.updateAutoHeight(),ka({swiper:n,runCallbacks:e,direction:t,step:"Start"}))},transitionEnd:function(e,t){void 0===e&&(e=!0);const n=this,{params:r}=n;n.animating=!1,r.cssMode||(n.setTransition(0),ka({swiper:n,runCallbacks:e,direction:t,step:"End"}))}},Fa={slideTo:function(e,t,n,r,i){void 0===e&&(e=0),void 0===n&&(n=!0),"string"==typeof e&&(e=parseInt(e,10));const o=this;let a=e;a<0&&(a=0);const{params:s,snapGrid:l,slidesGrid:c,previousIndex:d,activeIndex:u,rtlTranslate:m,wrapperEl:p,enabled:f}=o;if(!f&&!r&&!i||o.destroyed||o.animating&&s.preventInteractionOnTransition)return!1;void 0===t&&(t=o.params.speed);const h=Math.min(o.params.slidesPerGroupSkip,a);let g=h+Math.floor((a-h)/o.params.slidesPerGroup);g>=l.length&&(g=l.length-1);const C=-l[g];if(s.normalizeSlideIndex)for(let e=0;e<c.length;e+=1){const t=-Math.floor(100*C),n=Math.floor(100*c[e]),r=Math.floor(100*c[e+1]);void 0!==c[e+1]?t>=n&&t<r-(r-n)/2?a=e:t>=n&&t<r&&(a=e+1):t>=n&&(a=e)}if(o.initialized&&a!==u){if(!o.allowSlideNext&&(m?C>o.translate&&C>o.minTranslate():C<o.translate&&C<o.minTranslate()))return!1;if(!o.allowSlidePrev&&C>o.translate&&C>o.maxTranslate()&&(u||0)!==a)return!1}let v;a!==(d||0)&&n&&o.emit("beforeSlideChangeStart"),o.updateProgress(C),v=a>u?"next":a<u?"prev":"reset";const A=o.virtual&&o.params.virtual.enabled;if((!A||!i)&&(m&&-C===o.translate||!m&&C===o.translate))return o.updateActiveIndex(a),s.autoHeight&&o.updateAutoHeight(),o.updateSlidesClasses(),"slide"!==s.effect&&o.setTranslate(C),"reset"!==v&&(o.transitionStart(n,v),o.transitionEnd(n,v)),!1;if(s.cssMode){const e=o.isHorizontal(),n=m?C:-C;if(0===t)A&&(o.wrapperEl.style.scrollSnapType="none",o._immediateVirtual=!0),A&&!o._cssModeVirtualInitialSet&&o.params.initialSlide>0?(o._cssModeVirtualInitialSet=!0,requestAnimationFrame((()=>{p[e?"scrollLeft":"scrollTop"]=n}))):p[e?"scrollLeft":"scrollTop"]=n,A&&requestAnimationFrame((()=>{o.wrapperEl.style.scrollSnapType="",o._immediateVirtual=!1}));else{if(!o.support.smoothScroll)return ua({swiper:o,targetPosition:n,side:e?"left":"top"}),!0;p.scrollTo({[e?"left":"top"]:n,behavior:"smooth"})}return!0}const b=wa().isSafari;return A&&!i&&b&&o.isElement&&o.virtual.update(!1,!1,a),o.setTransition(t),o.setTranslate(C),o.updateActiveIndex(a),o.updateSlidesClasses(),o.emit("beforeTransitionStart",t,r),o.transitionStart(n,v),0===t?o.transitionEnd(n,v):o.animating||(o.animating=!0,o.onSlideToWrapperTransitionEnd||(o.onSlideToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.wrapperEl.removeEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.onSlideToWrapperTransitionEnd=null,delete o.onSlideToWrapperTransitionEnd,o.transitionEnd(n,v))}),o.wrapperEl.addEventListener("transitionend",o.onSlideToWrapperTransitionEnd)),!0},slideToLoop:function(e,t,n,r){void 0===e&&(e=0),void 0===n&&(n=!0),"string"==typeof e&&(e=parseInt(e,10));const i=this;if(i.destroyed)return;void 0===t&&(t=i.params.speed);const o=i.grid&&i.params.grid&&i.params.grid.rows>1;let a=e;if(i.params.loop)if(i.virtual&&i.params.virtual.enabled)a+=i.virtual.slidesBefore;else{let e;if(o){const t=a*i.params.grid.rows;e=i.slides.find((e=>1*e.getAttribute("data-swiper-slide-index")===t)).column}else e=i.getSlideIndexByData(a);const t=o?Math.ceil(i.slides.length/i.params.grid.rows):i.slides.length,{centeredSlides:n}=i.params;let s=i.params.slidesPerView;"auto"===s?s=i.slidesPerViewDynamic():(s=Math.ceil(parseFloat(i.params.slidesPerView,10)),n&&s%2==0&&(s+=1));let l=t-e<s;if(n&&(l=l||e<Math.ceil(s/2)),r&&n&&"auto"!==i.params.slidesPerView&&!o&&(l=!1),l){const r=n?e<i.activeIndex?"prev":"next":e-i.activeIndex-1<i.params.slidesPerView?"next":"prev";i.loopFix({direction:r,slideTo:!0,activeSlideIndex:"next"===r?e+1:e-t+1,slideRealIndex:"next"===r?i.realIndex:void 0})}if(o){const e=a*i.params.grid.rows;a=i.slides.find((t=>1*t.getAttribute("data-swiper-slide-index")===e)).column}else a=i.getSlideIndexByData(a)}return requestAnimationFrame((()=>{i.slideTo(a,t,n,r)})),i},slideNext:function(e,t,n){void 0===t&&(t=!0);const r=this,{enabled:i,params:o,animating:a}=r;if(!i||r.destroyed)return r;void 0===e&&(e=r.params.speed);let s=o.slidesPerGroup;"auto"===o.slidesPerView&&1===o.slidesPerGroup&&o.slidesPerGroupAuto&&(s=Math.max(r.slidesPerViewDynamic("current",!0),1));const l=r.activeIndex<o.slidesPerGroupSkip?1:s,c=r.virtual&&o.virtual.enabled;if(o.loop){if(a&&!c&&o.loopPreventsSliding)return!1;if(r.loopFix({direction:"next"}),r._clientLeft=r.wrapperEl.clientLeft,r.activeIndex===r.slides.length-1&&o.cssMode)return requestAnimationFrame((()=>{r.slideTo(r.activeIndex+l,e,t,n)})),!0}return o.rewind&&r.isEnd?r.slideTo(0,e,t,n):r.slideTo(r.activeIndex+l,e,t,n)},slidePrev:function(e,t,n){void 0===t&&(t=!0);const r=this,{params:i,snapGrid:o,slidesGrid:a,rtlTranslate:s,enabled:l,animating:c}=r;if(!l||r.destroyed)return r;void 0===e&&(e=r.params.speed);const d=r.virtual&&i.virtual.enabled;if(i.loop){if(c&&!d&&i.loopPreventsSliding)return!1;r.loopFix({direction:"prev"}),r._clientLeft=r.wrapperEl.clientLeft}function u(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}const m=u(s?r.translate:-r.translate),p=o.map((e=>u(e))),f=i.freeMode&&i.freeMode.enabled;let h=o[p.indexOf(m)-1];if(void 0===h&&(i.cssMode||f)){let e;o.forEach(((t,n)=>{m>=t&&(e=n)})),void 0!==e&&(h=f?o[e]:o[e>0?e-1:e])}let g=0;if(void 0!==h&&(g=a.indexOf(h),g<0&&(g=r.activeIndex-1),"auto"===i.slidesPerView&&1===i.slidesPerGroup&&i.slidesPerGroupAuto&&(g=g-r.slidesPerViewDynamic("previous",!0)+1,g=Math.max(g,0))),i.rewind&&r.isBeginning){const i=r.params.virtual&&r.params.virtual.enabled&&r.virtual?r.virtual.slides.length-1:r.slides.length-1;return r.slideTo(i,e,t,n)}return i.loop&&0===r.activeIndex&&i.cssMode?(requestAnimationFrame((()=>{r.slideTo(g,e,t,n)})),!0):r.slideTo(g,e,t,n)},slideReset:function(e,t,n){void 0===t&&(t=!0);const r=this;if(!r.destroyed)return void 0===e&&(e=r.params.speed),r.slideTo(r.activeIndex,e,t,n)},slideToClosest:function(e,t,n,r){void 0===t&&(t=!0),void 0===r&&(r=.5);const i=this;if(i.destroyed)return;void 0===e&&(e=i.params.speed);let o=i.activeIndex;const a=Math.min(i.params.slidesPerGroupSkip,o),s=a+Math.floor((o-a)/i.params.slidesPerGroup),l=i.rtlTranslate?i.translate:-i.translate;if(l>=i.snapGrid[s]){const e=i.snapGrid[s];l-e>(i.snapGrid[s+1]-e)*r&&(o+=i.params.slidesPerGroup)}else{const e=i.snapGrid[s-1];l-e<=(i.snapGrid[s]-e)*r&&(o-=i.params.slidesPerGroup)}return o=Math.max(o,0),o=Math.min(o,i.slidesGrid.length-1),i.slideTo(o,e,t,n)},slideToClickedSlide:function(){const e=this;if(e.destroyed)return;const{params:t,slidesEl:n}=e,r="auto"===t.slidesPerView?e.slidesPerViewDynamic():t.slidesPerView;let i,o=e.clickedIndex;const a=e.isElement?"swiper-slide":`.${t.slideClass}`;if(t.loop){if(e.animating)return;i=parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"),10),t.centeredSlides?o<e.loopedSlides-r/2||o>e.slides.length-e.loopedSlides+r/2?(e.loopFix(),o=e.getSlideIndex(ma(n,`${a}[data-swiper-slide-index="${i}"]`)[0]),oa((()=>{e.slideTo(o)}))):e.slideTo(o):o>e.slides.length-r?(e.loopFix(),o=e.getSlideIndex(ma(n,`${a}[data-swiper-slide-index="${i}"]`)[0]),oa((()=>{e.slideTo(o)}))):e.slideTo(o)}else e.slideTo(o)}},Ma={loopCreate:function(e,t){const n=this,{params:r,slidesEl:i}=n;if(!r.loop||n.virtual&&n.params.virtual.enabled)return;const o=()=>{ma(i,`.${r.slideClass}, swiper-slide`).forEach(((e,t)=>{e.setAttribute("data-swiper-slide-index",t)}))},a=n.grid&&r.grid&&r.grid.rows>1,s=r.slidesPerGroup*(a?r.grid.rows:1),l=n.slides.length%s!=0,c=a&&n.slides.length%r.grid.rows!=0,d=e=>{for(let t=0;t<e;t+=1){const e=n.isElement?fa("swiper-slide",[r.slideBlankClass]):fa("div",[r.slideClass,r.slideBlankClass]);n.slidesEl.append(e)}};l?(r.loopAddBlankSlides?(d(s-n.slides.length%s),n.recalcSlides(),n.updateSlides()):pa("Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"),o()):c?(r.loopAddBlankSlides?(d(r.grid.rows-n.slides.length%r.grid.rows),n.recalcSlides(),n.updateSlides()):pa("Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"),o()):o(),n.loopFix({slideRealIndex:e,direction:r.centeredSlides?void 0:"next",initial:t})},loopFix:function(e){let{slideRealIndex:t,slideTo:n=!0,direction:r,setTranslate:i,activeSlideIndex:o,initial:a,byController:s,byMousewheel:l}=void 0===e?{}:e;const c=this;if(!c.params.loop)return;c.emit("beforeLoopFix");const{slides:d,allowSlidePrev:u,allowSlideNext:m,slidesEl:p,params:f}=c,{centeredSlides:h,initialSlide:g}=f;if(c.allowSlidePrev=!0,c.allowSlideNext=!0,c.virtual&&f.virtual.enabled)return n&&(f.centeredSlides||0!==c.snapIndex?f.centeredSlides&&c.snapIndex<f.slidesPerView?c.slideTo(c.virtual.slides.length+c.snapIndex,0,!1,!0):c.snapIndex===c.snapGrid.length-1&&c.slideTo(c.virtual.slidesBefore,0,!1,!0):c.slideTo(c.virtual.slides.length,0,!1,!0)),c.allowSlidePrev=u,c.allowSlideNext=m,void c.emit("loopFix");let C=f.slidesPerView;"auto"===C?C=c.slidesPerViewDynamic():(C=Math.ceil(parseFloat(f.slidesPerView,10)),h&&C%2==0&&(C+=1));const v=f.slidesPerGroupAuto?C:f.slidesPerGroup;let A=v;A%v!=0&&(A+=v-A%v),A+=f.loopAdditionalSlides,c.loopedSlides=A;const b=c.grid&&f.grid&&f.grid.rows>1;d.length<C+A||"cards"===c.params.effect&&d.length<C+2*A?pa("Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"):b&&"row"===f.grid.fill&&pa("Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`");const y=[],S=[],w=b?Math.ceil(d.length/f.grid.rows):d.length,P=a&&w-g<C&&!h;let x=P?g:c.activeIndex;void 0===o?o=c.getSlideIndex(d.find((e=>e.classList.contains(f.slideActiveClass)))):x=o;const E="next"===r||!r,_="prev"===r||!r;let D=0,O=0;const I=(b?d[o].column:o)+(h&&void 0===i?-C/2+.5:0);if(I<A){D=Math.max(A-I,v);for(let e=0;e<A-I;e+=1){const t=e-Math.floor(e/w)*w;if(b){const e=w-t-1;for(let t=d.length-1;t>=0;t-=1)d[t].column===e&&y.push(t)}else y.push(w-t-1)}}else if(I+C>w-A){O=Math.max(I-(w-2*A),v),P&&(O=Math.max(O,C-w+g+1));for(let e=0;e<O;e+=1){const t=e-Math.floor(e/w)*w;b?d.forEach(((e,n)=>{e.column===t&&S.push(n)})):S.push(t)}}if(c.__preventObserver__=!0,requestAnimationFrame((()=>{c.__preventObserver__=!1})),"cards"===c.params.effect&&d.length<C+2*A&&(S.includes(o)&&S.splice(S.indexOf(o),1),y.includes(o)&&y.splice(y.indexOf(o),1)),_&&y.forEach((e=>{d[e].swiperLoopMoveDOM=!0,p.prepend(d[e]),d[e].swiperLoopMoveDOM=!1})),E&&S.forEach((e=>{d[e].swiperLoopMoveDOM=!0,p.append(d[e]),d[e].swiperLoopMoveDOM=!1})),c.recalcSlides(),"auto"===f.slidesPerView?c.updateSlides():b&&(y.length>0&&_||S.length>0&&E)&&c.slides.forEach(((e,t)=>{c.grid.updateSlide(t,e,c.slides)})),f.watchSlidesProgress&&c.updateSlidesOffset(),n)if(y.length>0&&_){if(void 0===t){const e=c.slidesGrid[x],t=c.slidesGrid[x+D]-e;l?c.setTranslate(c.translate-t):(c.slideTo(x+Math.ceil(D),0,!1,!0),i&&(c.touchEventsData.startTranslate=c.touchEventsData.startTranslate-t,c.touchEventsData.currentTranslate=c.touchEventsData.currentTranslate-t))}else if(i){const e=b?y.length/f.grid.rows:y.length;c.slideTo(c.activeIndex+e,0,!1,!0),c.touchEventsData.currentTranslate=c.translate}}else if(S.length>0&&E)if(void 0===t){const e=c.slidesGrid[x],t=c.slidesGrid[x-O]-e;l?c.setTranslate(c.translate-t):(c.slideTo(x-O,0,!1,!0),i&&(c.touchEventsData.startTranslate=c.touchEventsData.startTranslate-t,c.touchEventsData.currentTranslate=c.touchEventsData.currentTranslate-t))}else{const e=b?S.length/f.grid.rows:S.length;c.slideTo(c.activeIndex-e,0,!1,!0)}if(c.allowSlidePrev=u,c.allowSlideNext=m,c.controller&&c.controller.control&&!s){const e={slideRealIndex:t,direction:r,setTranslate:i,activeSlideIndex:o,byController:!0};Array.isArray(c.controller.control)?c.controller.control.forEach((t=>{!t.destroyed&&t.params.loop&&t.loopFix({...e,slideTo:t.params.slidesPerView===f.slidesPerView&&n})})):c.controller.control instanceof c.constructor&&c.controller.control.params.loop&&c.controller.control.loopFix({...e,slideTo:c.controller.control.params.slidesPerView===f.slidesPerView&&n})}c.emit("loopFix")},loopDestroy:function(){const e=this,{params:t,slidesEl:n}=e;if(!t.loop||!n||e.virtual&&e.params.virtual.enabled)return;e.recalcSlides();const r=[];e.slides.forEach((e=>{const t=void 0===e.swiperSlideIndex?1*e.getAttribute("data-swiper-slide-index"):e.swiperSlideIndex;r[t]=e})),e.slides.forEach((e=>{e.removeAttribute("data-swiper-slide-index")})),r.forEach((e=>{n.append(e)})),e.recalcSlides(),e.slideTo(e.realIndex,0)}},Ua={setGrabCursor:function(e){const t=this;if(!t.params.simulateTouch||t.params.watchOverflow&&t.isLocked||t.params.cssMode)return;const n="container"===t.params.touchEventsTarget?t.el:t.wrapperEl;t.isElement&&(t.__preventObserver__=!0),n.style.cursor="move",n.style.cursor=e?"grabbing":"grab",t.isElement&&requestAnimationFrame((()=>{t.__preventObserver__=!1}))},unsetGrabCursor:function(){const e=this;e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e.isElement&&(e.__preventObserver__=!0),e["container"===e.params.touchEventsTarget?"el":"wrapperEl"].style.cursor="",e.isElement&&requestAnimationFrame((()=>{e.__preventObserver__=!1})))}};function Ta(e,t,n){const r=ia(),{params:i}=e,o=i.edgeSwipeDetection,a=i.edgeSwipeThreshold;return!o||!(n<=a||n>=r.innerWidth-a)||"prevent"===o&&(t.preventDefault(),!0)}function Ra(e){const t=this,n=na();let r=e;r.originalEvent&&(r=r.originalEvent);const i=t.touchEventsData;if("pointerdown"===r.type){if(null!==i.pointerId&&i.pointerId!==r.pointerId)return;i.pointerId=r.pointerId}else"touchstart"===r.type&&1===r.targetTouches.length&&(i.touchId=r.targetTouches[0].identifier);if("touchstart"===r.type)return void Ta(t,r,r.targetTouches[0].pageX);const{params:o,touches:a,enabled:s}=t;if(!s)return;if(!o.simulateTouch&&"mouse"===r.pointerType)return;if(t.animating&&o.preventInteractionOnTransition)return;!t.animating&&o.cssMode&&o.loop&&t.loopFix();let l=r.target;if("wrapper"===o.touchEventsTarget&&!function(e,t){const n=ia();let r=t.contains(e);return!r&&n.HTMLSlotElement&&t instanceof HTMLSlotElement&&(r=[...t.assignedElements()].includes(e),r||(r=function(e,t){const n=[t];for(;n.length>0;){const t=n.shift();if(e===t)return!0;n.push(...t.children,...t.shadowRoot?t.shadowRoot.children:[],...t.assignedElements?t.assignedElements():[])}}(e,t))),r}(l,t.wrapperEl))return;if("which"in r&&3===r.which)return;if("button"in r&&r.button>0)return;if(i.isTouched&&i.isMoved)return;const c=!!o.noSwipingClass&&""!==o.noSwipingClass,d=r.composedPath?r.composedPath():r.path;c&&r.target&&r.target.shadowRoot&&d&&(l=d[0]);const u=o.noSwipingSelector?o.noSwipingSelector:`.${o.noSwipingClass}`,m=!(!r.target||!r.target.shadowRoot);if(o.noSwiping&&(m?function(e,t){return void 0===t&&(t=this),function t(n){if(!n||n===na()||n===ia())return null;n.assignedSlot&&(n=n.assignedSlot);const r=n.closest(e);return r||n.getRootNode?r||t(n.getRootNode().host):null}(t)}(u,l):l.closest(u)))return void(t.allowClick=!0);if(o.swipeHandler&&!l.closest(o.swipeHandler))return;a.currentX=r.pageX,a.currentY=r.pageY;const p=a.currentX,f=a.currentY;if(!Ta(t,r,p))return;Object.assign(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),a.startX=p,a.startY=f,i.touchStartTime=aa(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,o.threshold>0&&(i.allowThresholdMove=!1);let h=!0;l.matches(i.focusableElements)&&(h=!1,"SELECT"===l.nodeName&&(i.isTouched=!1)),n.activeElement&&n.activeElement.matches(i.focusableElements)&&n.activeElement!==l&&("mouse"===r.pointerType||"mouse"!==r.pointerType&&!l.matches(i.focusableElements))&&n.activeElement.blur();const g=h&&t.allowTouchMove&&o.touchStartPreventDefault;!o.touchStartForcePreventDefault&&!g||l.isContentEditable||r.preventDefault(),o.freeMode&&o.freeMode.enabled&&t.freeMode&&t.animating&&!o.cssMode&&t.freeMode.onTouchStart(),t.emit("touchStart",r)}function Na(e){const t=na(),n=this,r=n.touchEventsData,{params:i,touches:o,rtlTranslate:a,enabled:s}=n;if(!s)return;if(!i.simulateTouch&&"mouse"===e.pointerType)return;let l,c=e;if(c.originalEvent&&(c=c.originalEvent),"pointermove"===c.type){if(null!==r.touchId)return;if(c.pointerId!==r.pointerId)return}if("touchmove"===c.type){if(l=[...c.changedTouches].find((e=>e.identifier===r.touchId)),!l||l.identifier!==r.touchId)return}else l=c;if(!r.isTouched)return void(r.startMoving&&r.isScrolling&&n.emit("touchMoveOpposite",c));const d=l.pageX,u=l.pageY;if(c.preventedByNestedSwiper)return o.startX=d,void(o.startY=u);if(!n.allowTouchMove)return c.target.matches(r.focusableElements)||(n.allowClick=!1),void(r.isTouched&&(Object.assign(o,{startX:d,startY:u,currentX:d,currentY:u}),r.touchStartTime=aa()));if(i.touchReleaseOnEdges&&!i.loop)if(n.isVertical()){if(u<o.startY&&n.translate<=n.maxTranslate()||u>o.startY&&n.translate>=n.minTranslate())return r.isTouched=!1,void(r.isMoved=!1)}else{if(a&&(d>o.startX&&-n.translate<=n.maxTranslate()||d<o.startX&&-n.translate>=n.minTranslate()))return;if(!a&&(d<o.startX&&n.translate<=n.maxTranslate()||d>o.startX&&n.translate>=n.minTranslate()))return}if(t.activeElement&&t.activeElement.matches(r.focusableElements)&&t.activeElement!==c.target&&"mouse"!==c.pointerType&&t.activeElement.blur(),t.activeElement&&c.target===t.activeElement&&c.target.matches(r.focusableElements))return r.isMoved=!0,void(n.allowClick=!1);r.allowTouchCallbacks&&n.emit("touchMove",c),o.previousX=o.currentX,o.previousY=o.currentY,o.currentX=d,o.currentY=u;const m=o.currentX-o.startX,p=o.currentY-o.startY;if(n.params.threshold&&Math.sqrt(m**2+p**2)<n.params.threshold)return;if(void 0===r.isScrolling){let e;n.isHorizontal()&&o.currentY===o.startY||n.isVertical()&&o.currentX===o.startX?r.isScrolling=!1:m*m+p*p>=25&&(e=180*Math.atan2(Math.abs(p),Math.abs(m))/Math.PI,r.isScrolling=n.isHorizontal()?e>i.touchAngle:90-e>i.touchAngle)}if(r.isScrolling&&n.emit("touchMoveOpposite",c),void 0===r.startMoving&&(o.currentX===o.startX&&o.currentY===o.startY||(r.startMoving=!0)),r.isScrolling||"touchmove"===c.type&&r.preventTouchMoveFromPointerMove)return void(r.isTouched=!1);if(!r.startMoving)return;n.allowClick=!1,!i.cssMode&&c.cancelable&&c.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&c.stopPropagation();let f=n.isHorizontal()?m:p,h=n.isHorizontal()?o.currentX-o.previousX:o.currentY-o.previousY;i.oneWayMovement&&(f=Math.abs(f)*(a?1:-1),h=Math.abs(h)*(a?1:-1)),o.diff=f,f*=i.touchRatio,a&&(f=-f,h=-h);const g=n.touchesDirection;n.swipeDirection=f>0?"prev":"next",n.touchesDirection=h>0?"prev":"next";const C=n.params.loop&&!i.cssMode,v="next"===n.touchesDirection&&n.allowSlideNext||"prev"===n.touchesDirection&&n.allowSlidePrev;if(!r.isMoved){if(C&&v&&n.loopFix({direction:n.swipeDirection}),r.startTranslate=n.getTranslate(),n.setTransition(0),n.animating){const e=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0,detail:{bySwiperTouchMove:!0}});n.wrapperEl.dispatchEvent(e)}r.allowMomentumBounce=!1,!i.grabCursor||!0!==n.allowSlideNext&&!0!==n.allowSlidePrev||n.setGrabCursor(!0),n.emit("sliderFirstMove",c)}if((new Date).getTime(),!1!==i._loopSwapReset&&r.isMoved&&r.allowThresholdMove&&g!==n.touchesDirection&&C&&v&&Math.abs(f)>=1)return Object.assign(o,{startX:d,startY:u,currentX:d,currentY:u,startTranslate:r.currentTranslate}),r.loopSwapReset=!0,void(r.startTranslate=r.currentTranslate);n.emit("sliderMove",c),r.isMoved=!0,r.currentTranslate=f+r.startTranslate;let A=!0,b=i.resistanceRatio;if(i.touchReleaseOnEdges&&(b=0),f>0?(C&&v&&r.allowThresholdMove&&r.currentTranslate>(i.centeredSlides?n.minTranslate()-n.slidesSizesGrid[n.activeIndex+1]-("auto"!==i.slidesPerView&&n.slides.length-i.slidesPerView>=2?n.slidesSizesGrid[n.activeIndex+1]+n.params.spaceBetween:0)-n.params.spaceBetween:n.minTranslate())&&n.loopFix({direction:"prev",setTranslate:!0,activeSlideIndex:0}),r.currentTranslate>n.minTranslate()&&(A=!1,i.resistance&&(r.currentTranslate=n.minTranslate()-1+(-n.minTranslate()+r.startTranslate+f)**b))):f<0&&(C&&v&&r.allowThresholdMove&&r.currentTranslate<(i.centeredSlides?n.maxTranslate()+n.slidesSizesGrid[n.slidesSizesGrid.length-1]+n.params.spaceBetween+("auto"!==i.slidesPerView&&n.slides.length-i.slidesPerView>=2?n.slidesSizesGrid[n.slidesSizesGrid.length-1]+n.params.spaceBetween:0):n.maxTranslate())&&n.loopFix({direction:"next",setTranslate:!0,activeSlideIndex:n.slides.length-("auto"===i.slidesPerView?n.slidesPerViewDynamic():Math.ceil(parseFloat(i.slidesPerView,10)))}),r.currentTranslate<n.maxTranslate()&&(A=!1,i.resistance&&(r.currentTranslate=n.maxTranslate()+1-(n.maxTranslate()-r.startTranslate-f)**b))),A&&(c.preventedByNestedSwiper=!0),!n.allowSlideNext&&"next"===n.swipeDirection&&r.currentTranslate<r.startTranslate&&(r.currentTranslate=r.startTranslate),!n.allowSlidePrev&&"prev"===n.swipeDirection&&r.currentTranslate>r.startTranslate&&(r.currentTranslate=r.startTranslate),n.allowSlidePrev||n.allowSlideNext||(r.currentTranslate=r.startTranslate),i.threshold>0){if(!(Math.abs(f)>i.threshold||r.allowThresholdMove))return void(r.currentTranslate=r.startTranslate);if(!r.allowThresholdMove)return r.allowThresholdMove=!0,o.startX=o.currentX,o.startY=o.currentY,r.currentTranslate=r.startTranslate,void(o.diff=n.isHorizontal()?o.currentX-o.startX:o.currentY-o.startY)}i.followFinger&&!i.cssMode&&((i.freeMode&&i.freeMode.enabled&&n.freeMode||i.watchSlidesProgress)&&(n.updateActiveIndex(),n.updateSlidesClasses()),i.freeMode&&i.freeMode.enabled&&n.freeMode&&n.freeMode.onTouchMove(),n.updateProgress(r.currentTranslate),n.setTranslate(r.currentTranslate))}function Wa(e){const t=this,n=t.touchEventsData;let r,i=e;if(i.originalEvent&&(i=i.originalEvent),"touchend"===i.type||"touchcancel"===i.type){if(r=[...i.changedTouches].find((e=>e.identifier===n.touchId)),!r||r.identifier!==n.touchId)return}else{if(null!==n.touchId)return;if(i.pointerId!==n.pointerId)return;r=i}if(["pointercancel","pointerout","pointerleave","contextmenu"].includes(i.type)&&(!["pointercancel","contextmenu"].includes(i.type)||!t.browser.isSafari&&!t.browser.isWebView))return;n.pointerId=null,n.touchId=null;const{params:o,touches:a,rtlTranslate:s,slidesGrid:l,enabled:c}=t;if(!c)return;if(!o.simulateTouch&&"mouse"===i.pointerType)return;if(n.allowTouchCallbacks&&t.emit("touchEnd",i),n.allowTouchCallbacks=!1,!n.isTouched)return n.isMoved&&o.grabCursor&&t.setGrabCursor(!1),n.isMoved=!1,void(n.startMoving=!1);o.grabCursor&&n.isMoved&&n.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);const d=aa(),u=d-n.touchStartTime;if(t.allowClick){const e=i.path||i.composedPath&&i.composedPath();t.updateClickedSlide(e&&e[0]||i.target,e),t.emit("tap click",i),u<300&&d-n.lastClickTime<300&&t.emit("doubleTap doubleClick",i)}if(n.lastClickTime=aa(),oa((()=>{t.destroyed||(t.allowClick=!0)})),!n.isTouched||!n.isMoved||!t.swipeDirection||0===a.diff&&!n.loopSwapReset||n.currentTranslate===n.startTranslate&&!n.loopSwapReset)return n.isTouched=!1,n.isMoved=!1,void(n.startMoving=!1);let m;if(n.isTouched=!1,n.isMoved=!1,n.startMoving=!1,m=o.followFinger?s?t.translate:-t.translate:-n.currentTranslate,o.cssMode)return;if(o.freeMode&&o.freeMode.enabled)return void t.freeMode.onTouchEnd({currentPos:m});const p=m>=-t.maxTranslate()&&!t.params.loop;let f=0,h=t.slidesSizesGrid[0];for(let e=0;e<l.length;e+=e<o.slidesPerGroupSkip?1:o.slidesPerGroup){const t=e<o.slidesPerGroupSkip-1?1:o.slidesPerGroup;void 0!==l[e+t]?(p||m>=l[e]&&m<l[e+t])&&(f=e,h=l[e+t]-l[e]):(p||m>=l[e])&&(f=e,h=l[l.length-1]-l[l.length-2])}let g=null,C=null;o.rewind&&(t.isBeginning?C=o.virtual&&o.virtual.enabled&&t.virtual?t.virtual.slides.length-1:t.slides.length-1:t.isEnd&&(g=0));const v=(m-l[f])/h,A=f<o.slidesPerGroupSkip-1?1:o.slidesPerGroup;if(u>o.longSwipesMs){if(!o.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(v>=o.longSwipesRatio?t.slideTo(o.rewind&&t.isEnd?g:f+A):t.slideTo(f)),"prev"===t.swipeDirection&&(v>1-o.longSwipesRatio?t.slideTo(f+A):null!==C&&v<0&&Math.abs(v)>o.longSwipesRatio?t.slideTo(C):t.slideTo(f))}else{if(!o.shortSwipes)return void t.slideTo(t.activeIndex);!t.navigation||i.target!==t.navigation.nextEl&&i.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(null!==g?g:f+A),"prev"===t.swipeDirection&&t.slideTo(null!==C?C:f)):i.target===t.navigation.nextEl?t.slideTo(f+A):t.slideTo(f)}}function Ba(){const e=this,{params:t,el:n}=e;if(n&&0===n.offsetWidth)return;t.breakpoints&&e.setBreakpoint();const{allowSlideNext:r,allowSlidePrev:i,snapGrid:o}=e,a=e.virtual&&e.params.virtual.enabled;e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),e.updateSlidesClasses();const s=a&&t.loop;!("auto"===t.slidesPerView||t.slidesPerView>1)||!e.isEnd||e.isBeginning||e.params.centeredSlides||s?e.params.loop&&!a?e.slideToLoop(e.realIndex,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0):e.slideTo(e.slides.length-1,0,!1,!0),e.autoplay&&e.autoplay.running&&e.autoplay.paused&&(clearTimeout(e.autoplay.resizeTimeout),e.autoplay.resizeTimeout=setTimeout((()=>{e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.resume()}),500)),e.allowSlidePrev=i,e.allowSlideNext=r,e.params.watchOverflow&&o!==e.snapGrid&&e.checkOverflow()}function za(e){const t=this;t.enabled&&(t.allowClick||(t.params.preventClicks&&e.preventDefault(),t.params.preventClicksPropagation&&t.animating&&(e.stopPropagation(),e.stopImmediatePropagation())))}function Ga(){const e=this,{wrapperEl:t,rtlTranslate:n,enabled:r}=e;if(!r)return;let i;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=-t.scrollLeft:e.translate=-t.scrollTop,0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();const o=e.maxTranslate()-e.minTranslate();i=0===o?0:(e.translate-e.minTranslate())/o,i!==e.progress&&e.updateProgress(n?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}function Va(e){const t=this;_a(t,e.target),t.params.cssMode||"auto"!==t.params.slidesPerView&&!t.params.autoHeight||t.update()}function Ha(){const e=this;e.documentTouchHandlerProceeded||(e.documentTouchHandlerProceeded=!0,e.params.touchReleaseOnEdges&&(e.el.style.touchAction="auto"))}const Ja=(e,t)=>{const n=na(),{params:r,el:i,wrapperEl:o,device:a}=e,s=!!r.nested,l="on"===t?"addEventListener":"removeEventListener",c=t;i&&"string"!=typeof i&&(n[l]("touchstart",e.onDocumentTouchStart,{passive:!1,capture:s}),i[l]("touchstart",e.onTouchStart,{passive:!1}),i[l]("pointerdown",e.onTouchStart,{passive:!1}),n[l]("touchmove",e.onTouchMove,{passive:!1,capture:s}),n[l]("pointermove",e.onTouchMove,{passive:!1,capture:s}),n[l]("touchend",e.onTouchEnd,{passive:!0}),n[l]("pointerup",e.onTouchEnd,{passive:!0}),n[l]("pointercancel",e.onTouchEnd,{passive:!0}),n[l]("touchcancel",e.onTouchEnd,{passive:!0}),n[l]("pointerout",e.onTouchEnd,{passive:!0}),n[l]("pointerleave",e.onTouchEnd,{passive:!0}),n[l]("contextmenu",e.onTouchEnd,{passive:!0}),(r.preventClicks||r.preventClicksPropagation)&&i[l]("click",e.onClick,!0),r.cssMode&&o[l]("scroll",e.onScroll),r.updateOnWindowResize?e[c](a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",Ba,!0):e[c]("observerUpdate",Ba,!0),i[l]("load",e.onLoad,{capture:!0}))};var Qa={attachEvents:function(){const e=this,{params:t}=e;e.onTouchStart=Ra.bind(e),e.onTouchMove=Na.bind(e),e.onTouchEnd=Wa.bind(e),e.onDocumentTouchStart=Ha.bind(e),t.cssMode&&(e.onScroll=Ga.bind(e)),e.onClick=za.bind(e),e.onLoad=Va.bind(e),Ja(e,"on")},detachEvents:function(){Ja(this,"off")}};const Ya=(e,t)=>e.grid&&t.grid&&t.grid.rows>1;var $a={setBreakpoint:function(){const e=this,{realIndex:t,initialized:n,params:r,el:i}=e,o=r.breakpoints;if(!o||o&&0===Object.keys(o).length)return;const a=na(),s="window"!==r.breakpointsBase&&r.breakpointsBase?"container":r.breakpointsBase,l=["window","container"].includes(r.breakpointsBase)||!r.breakpointsBase?e.el:a.querySelector(r.breakpointsBase),c=e.getBreakpoint(o,s,l);if(!c||e.currentBreakpoint===c)return;const d=(c in o?o[c]:void 0)||e.originalParams,u=Ya(e,r),m=Ya(e,d),p=e.params.grabCursor,f=d.grabCursor,h=r.enabled;u&&!m?(i.classList.remove(`${r.containerModifierClass}grid`,`${r.containerModifierClass}grid-column`),e.emitContainerClasses()):!u&&m&&(i.classList.add(`${r.containerModifierClass}grid`),(d.grid.fill&&"column"===d.grid.fill||!d.grid.fill&&"column"===r.grid.fill)&&i.classList.add(`${r.containerModifierClass}grid-column`),e.emitContainerClasses()),p&&!f?e.unsetGrabCursor():!p&&f&&e.setGrabCursor(),["navigation","pagination","scrollbar"].forEach((t=>{if(void 0===d[t])return;const n=r[t]&&r[t].enabled,i=d[t]&&d[t].enabled;n&&!i&&e[t].disable(),!n&&i&&e[t].enable()}));const g=d.direction&&d.direction!==r.direction,C=r.loop&&(d.slidesPerView!==r.slidesPerView||g),v=r.loop;g&&n&&e.changeDirection(),ca(e.params,d);const A=e.params.enabled,b=e.params.loop;Object.assign(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),h&&!A?e.disable():!h&&A&&e.enable(),e.currentBreakpoint=c,e.emit("_beforeBreakpoint",d),n&&(C?(e.loopDestroy(),e.loopCreate(t),e.updateSlides()):!v&&b?(e.loopCreate(t),e.updateSlides()):v&&!b&&e.loopDestroy()),e.emit("breakpoint",d)},getBreakpoint:function(e,t,n){if(void 0===t&&(t="window"),!e||"container"===t&&!n)return;let r=!1;const i=ia(),o="window"===t?i.innerHeight:n.clientHeight,a=Object.keys(e).map((e=>{if("string"==typeof e&&0===e.indexOf("@")){const t=parseFloat(e.substr(1));return{value:o*t,point:e}}return{value:e,point:e}}));a.sort(((e,t)=>parseInt(e.value,10)-parseInt(t.value,10)));for(let e=0;e<a.length;e+=1){const{point:o,value:s}=a[e];"window"===t?i.matchMedia(`(min-width: ${s}px)`).matches&&(r=o):s<=n.clientWidth&&(r=o)}return r||"max"}},qa={addClasses:function(){const e=this,{classNames:t,params:n,rtl:r,el:i,device:o}=e,a=function(e,t){const n=[];return e.forEach((e=>{"object"==typeof e?Object.keys(e).forEach((r=>{e[r]&&n.push(t+r)})):"string"==typeof e&&n.push(t+e)})),n}(["initialized",n.direction,{"free-mode":e.params.freeMode&&n.freeMode.enabled},{autoheight:n.autoHeight},{rtl:r},{grid:n.grid&&n.grid.rows>1},{"grid-column":n.grid&&n.grid.rows>1&&"column"===n.grid.fill},{android:o.android},{ios:o.ios},{"css-mode":n.cssMode},{centered:n.cssMode&&n.centeredSlides},{"watch-progress":n.watchSlidesProgress}],n.containerModifierClass);t.push(...a),i.classList.add(...t),e.emitContainerClasses()},removeClasses:function(){const{el:e,classNames:t}=this;e&&"string"!=typeof e&&(e.classList.remove(...t),this.emitContainerClasses())}},Za={init:!0,direction:"horizontal",oneWayMovement:!1,swiperElementNodeName:"SWIPER-CONTAINER",touchEventsTarget:"wrapper",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,resizeObserver:!0,nested:!1,createElements:!1,eventsPrefix:"swiper",enabled:!0,focusableElements:"input, select, option, textarea, button, video, label",width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsBase:"window",spaceBetween:0,slidesPerView:1,slidesPerGroup:1,slidesPerGroupSkip:0,slidesPerGroupAuto:!1,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:5,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,loop:!1,loopAddBlankSlides:!0,loopAdditionalSlides:0,loopPreventsSliding:!0,rewind:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,maxBackfaceHiddenSlides:10,containerModifierClass:"swiper-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-blank",slideActiveClass:"swiper-slide-active",slideVisibleClass:"swiper-slide-visible",slideFullyVisibleClass:"swiper-slide-fully-visible",slideNextClass:"swiper-slide-next",slidePrevClass:"swiper-slide-prev",wrapperClass:"swiper-wrapper",lazyPreloaderClass:"swiper-lazy-preloader",lazyPreloadPrevNext:0,runCallbacksOnInit:!0,_emitClasses:!1};function Xa(e,t){return function(n){void 0===n&&(n={});const r=Object.keys(n)[0],i=n[r];"object"==typeof i&&null!==i?(!0===e[r]&&(e[r]={enabled:!0}),"navigation"===r&&e[r]&&e[r].enabled&&!e[r].prevEl&&!e[r].nextEl&&(e[r].auto=!0),["pagination","scrollbar"].indexOf(r)>=0&&e[r]&&e[r].enabled&&!e[r].el&&(e[r].auto=!0),r in e&&"enabled"in i?("object"!=typeof e[r]||"enabled"in e[r]||(e[r].enabled=!0),e[r]||(e[r]={enabled:!1}),ca(t,n)):ca(t,n)):ca(t,n)}}const Ka={eventsEmitter:Pa,update:Ia,translate:La,transition:ja,slide:Fa,loop:Ma,grabCursor:Ua,events:Qa,breakpoints:$a,checkOverflow:{checkOverflow:function(){const e=this,{isLocked:t,params:n}=e,{slidesOffsetBefore:r}=n;if(r){const t=e.slides.length-1,n=e.slidesGrid[t]+e.slidesSizesGrid[t]+2*r;e.isLocked=e.size>n}else e.isLocked=1===e.snapGrid.length;!0===n.allowSlideNext&&(e.allowSlideNext=!e.isLocked),!0===n.allowSlidePrev&&(e.allowSlidePrev=!e.isLocked),t&&t!==e.isLocked&&(e.isEnd=!1),t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock")}},classes:qa},es={};class ts{constructor(){let e,t;for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];1===r.length&&r[0].constructor&&"Object"===Object.prototype.toString.call(r[0]).slice(8,-1)?t=r[0]:[e,t]=r,t||(t={}),t=ca({},t),e&&!t.el&&(t.el=e);const o=na();if(t.el&&"string"==typeof t.el&&o.querySelectorAll(t.el).length>1){const e=[];return o.querySelectorAll(t.el).forEach((n=>{const r=ca({},t,{el:n});e.push(new ts(r))})),e}const a=this;a.__swiper__=!0,a.support=ya(),a.device=Sa({userAgent:t.userAgent}),a.browser=wa(),a.eventsListeners={},a.eventsAnyListeners=[],a.modules=[...a.__modules__],t.modules&&Array.isArray(t.modules)&&a.modules.push(...t.modules);const s={};a.modules.forEach((e=>{e({params:t,swiper:a,extendParams:Xa(t,s),on:a.on.bind(a),once:a.once.bind(a),off:a.off.bind(a),emit:a.emit.bind(a)})}));const l=ca({},Za,s);return a.params=ca({},l,es,t),a.originalParams=ca({},a.params),a.passedParams=ca({},t),a.params&&a.params.on&&Object.keys(a.params.on).forEach((e=>{a.on(e,a.params.on[e])})),a.params&&a.params.onAny&&a.onAny(a.params.onAny),Object.assign(a,{enabled:a.params.enabled,el:e,classNames:[],slides:[],slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:()=>"horizontal"===a.params.direction,isVertical:()=>"vertical"===a.params.direction,activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,cssOverflowAdjustment(){return Math.trunc(this.translate/2**23)*2**23},allowSlideNext:a.params.allowSlideNext,allowSlidePrev:a.params.allowSlidePrev,touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,focusableElements:a.params.focusableElements,lastClickTime:0,clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,startMoving:void 0,pointerId:null,touchId:null},allowClick:!0,allowTouchMove:a.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),a.emit("_swiper"),a.params.init&&a.init(),a}getDirectionLabel(e){return this.isHorizontal()?e:{width:"height","margin-top":"margin-left","margin-bottom ":"margin-right","margin-left":"margin-top","margin-right":"margin-bottom","padding-left":"padding-top","padding-right":"padding-bottom",marginRight:"marginBottom"}[e]}getSlideIndex(e){const{slidesEl:t,params:n}=this,r=ga(ma(t,`.${n.slideClass}, swiper-slide`)[0]);return ga(e)-r}getSlideIndexByData(e){return this.getSlideIndex(this.slides.find((t=>1*t.getAttribute("data-swiper-slide-index")===e)))}recalcSlides(){const{slidesEl:e,params:t}=this;this.slides=ma(e,`.${t.slideClass}, swiper-slide`)}enable(){const e=this;e.enabled||(e.enabled=!0,e.params.grabCursor&&e.setGrabCursor(),e.emit("enable"))}disable(){const e=this;e.enabled&&(e.enabled=!1,e.params.grabCursor&&e.unsetGrabCursor(),e.emit("disable"))}setProgress(e,t){const n=this;e=Math.min(Math.max(e,0),1);const r=n.minTranslate(),i=(n.maxTranslate()-r)*e+r;n.translateTo(i,void 0===t?0:t),n.updateActiveIndex(),n.updateSlidesClasses()}emitContainerClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=e.el.className.split(" ").filter((t=>0===t.indexOf("swiper")||0===t.indexOf(e.params.containerModifierClass)));e.emit("_containerClasses",t.join(" "))}getSlideClasses(e){const t=this;return t.destroyed?"":e.className.split(" ").filter((e=>0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass))).join(" ")}emitSlidesClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=[];e.slides.forEach((n=>{const r=e.getSlideClasses(n);t.push({slideEl:n,classNames:r}),e.emit("_slideClass",n,r)})),e.emit("_slideClasses",t)}slidesPerViewDynamic(e,t){void 0===e&&(e="current"),void 0===t&&(t=!1);const{params:n,slides:r,slidesGrid:i,slidesSizesGrid:o,size:a,activeIndex:s}=this;let l=1;if("number"==typeof n.slidesPerView)return n.slidesPerView;if(n.centeredSlides){let e,t=r[s]?Math.ceil(r[s].swiperSlideSize):0;for(let n=s+1;n<r.length;n+=1)r[n]&&!e&&(t+=Math.ceil(r[n].swiperSlideSize),l+=1,t>a&&(e=!0));for(let n=s-1;n>=0;n-=1)r[n]&&!e&&(t+=r[n].swiperSlideSize,l+=1,t>a&&(e=!0))}else if("current"===e)for(let e=s+1;e<r.length;e+=1)(t?i[e]+o[e]-i[s]<a:i[e]-i[s]<a)&&(l+=1);else for(let e=s-1;e>=0;e-=1)i[s]-i[e]<a&&(l+=1);return l}update(){const e=this;if(!e||e.destroyed)return;const{snapGrid:t,params:n}=e;function r(){const t=e.rtlTranslate?-1*e.translate:e.translate,n=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(n),e.updateActiveIndex(),e.updateSlidesClasses()}let i;if(n.breakpoints&&e.setBreakpoint(),[...e.el.querySelectorAll('[loading="lazy"]')].forEach((t=>{t.complete&&_a(e,t)})),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),n.freeMode&&n.freeMode.enabled&&!n.cssMode)r(),n.autoHeight&&e.updateAutoHeight();else{if(("auto"===n.slidesPerView||n.slidesPerView>1)&&e.isEnd&&!n.centeredSlides){const t=e.virtual&&n.virtual.enabled?e.virtual.slides:e.slides;i=e.slideTo(t.length-1,0,!1,!0)}else i=e.slideTo(e.activeIndex,0,!1,!0);i||r()}n.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}changeDirection(e,t){void 0===t&&(t=!0);const n=this,r=n.params.direction;return e||(e="horizontal"===r?"vertical":"horizontal"),e===r||"horizontal"!==e&&"vertical"!==e||(n.el.classList.remove(`${n.params.containerModifierClass}${r}`),n.el.classList.add(`${n.params.containerModifierClass}${e}`),n.emitContainerClasses(),n.params.direction=e,n.slides.forEach((t=>{"vertical"===e?t.style.width="":t.style.height=""})),n.emit("changeDirection"),t&&n.update()),n}changeLanguageDirection(e){const t=this;t.rtl&&"rtl"===e||!t.rtl&&"ltr"===e||(t.rtl="rtl"===e,t.rtlTranslate="horizontal"===t.params.direction&&t.rtl,t.rtl?(t.el.classList.add(`${t.params.containerModifierClass}rtl`),t.el.dir="rtl"):(t.el.classList.remove(`${t.params.containerModifierClass}rtl`),t.el.dir="ltr"),t.update())}mount(e){const t=this;if(t.mounted)return!0;let n=e||t.params.el;if("string"==typeof n&&(n=document.querySelector(n)),!n)return!1;n.swiper=t,n.parentNode&&n.parentNode.host&&n.parentNode.host.nodeName===t.params.swiperElementNodeName.toUpperCase()&&(t.isElement=!0);const r=()=>`.${(t.params.wrapperClass||"").trim().split(" ").join(".")}`;let i=n&&n.shadowRoot&&n.shadowRoot.querySelector?n.shadowRoot.querySelector(r()):ma(n,r())[0];return!i&&t.params.createElements&&(i=fa("div",t.params.wrapperClass),n.append(i),ma(n,`.${t.params.slideClass}`).forEach((e=>{i.append(e)}))),Object.assign(t,{el:n,wrapperEl:i,slidesEl:t.isElement&&!n.parentNode.host.slideSlots?n.parentNode.host:i,hostEl:t.isElement?n.parentNode.host:n,mounted:!0,rtl:"rtl"===n.dir.toLowerCase()||"rtl"===ha(n,"direction"),rtlTranslate:"horizontal"===t.params.direction&&("rtl"===n.dir.toLowerCase()||"rtl"===ha(n,"direction")),wrongRTL:"-webkit-box"===ha(i,"display")}),!0}init(e){const t=this;if(t.initialized)return t;if(!1===t.mount(e))return t;t.emit("beforeInit"),t.params.breakpoints&&t.setBreakpoint(),t.addClasses(),t.updateSize(),t.updateSlides(),t.params.watchOverflow&&t.checkOverflow(),t.params.grabCursor&&t.enabled&&t.setGrabCursor(),t.params.loop&&t.virtual&&t.params.virtual.enabled?t.slideTo(t.params.initialSlide+t.virtual.slidesBefore,0,t.params.runCallbacksOnInit,!1,!0):t.slideTo(t.params.initialSlide,0,t.params.runCallbacksOnInit,!1,!0),t.params.loop&&t.loopCreate(void 0,!0),t.attachEvents();const n=[...t.el.querySelectorAll('[loading="lazy"]')];return t.isElement&&n.push(...t.hostEl.querySelectorAll('[loading="lazy"]')),n.forEach((e=>{e.complete?_a(t,e):e.addEventListener("load",(e=>{_a(t,e.target)}))})),Oa(t),t.initialized=!0,Oa(t),t.emit("init"),t.emit("afterInit"),t}destroy(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);const n=this,{params:r,el:i,wrapperEl:o,slides:a}=n;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),r.loop&&n.loopDestroy(),t&&(n.removeClasses(),i&&"string"!=typeof i&&i.removeAttribute("style"),o&&o.removeAttribute("style"),a&&a.length&&a.forEach((e=>{e.classList.remove(r.slideVisibleClass,r.slideFullyVisibleClass,r.slideActiveClass,r.slideNextClass,r.slidePrevClass),e.removeAttribute("style"),e.removeAttribute("data-swiper-slide-index")}))),n.emit("destroy"),Object.keys(n.eventsListeners).forEach((e=>{n.off(e)})),!1!==e&&(n.el&&"string"!=typeof n.el&&(n.el.swiper=null),function(e){const t=e;Object.keys(t).forEach((e=>{try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}}))}(n)),n.destroyed=!0),null}static extendDefaults(e){ca(es,e)}static get extendedDefaults(){return es}static get defaults(){return Za}static installModule(e){ts.prototype.__modules__||(ts.prototype.__modules__=[]);const t=ts.prototype.__modules__;"function"==typeof e&&t.indexOf(e)<0&&t.push(e)}static use(e){return Array.isArray(e)?(e.forEach((e=>ts.installModule(e))),ts):(ts.installModule(e),ts)}}Object.keys(Ka).forEach((e=>{Object.keys(Ka[e]).forEach((t=>{ts.prototype[t]=Ka[e][t]}))})),ts.use([function(e){let{swiper:t,on:n,emit:r}=e;const i=ia();let o=null,a=null;const s=()=>{t&&!t.destroyed&&t.initialized&&(r("beforeResize"),r("resize"))},l=()=>{t&&!t.destroyed&&t.initialized&&r("orientationchange")};n("init",(()=>{t.params.resizeObserver&&void 0!==i.ResizeObserver?t&&!t.destroyed&&t.initialized&&(o=new ResizeObserver((e=>{a=i.requestAnimationFrame((()=>{const{width:n,height:r}=t;let i=n,o=r;e.forEach((e=>{let{contentBoxSize:n,contentRect:r,target:a}=e;a&&a!==t.el||(i=r?r.width:(n[0]||n).inlineSize,o=r?r.height:(n[0]||n).blockSize)})),i===n&&o===r||s()}))})),o.observe(t.el)):(i.addEventListener("resize",s),i.addEventListener("orientationchange",l))})),n("destroy",(()=>{a&&i.cancelAnimationFrame(a),o&&o.unobserve&&t.el&&(o.unobserve(t.el),o=null),i.removeEventListener("resize",s),i.removeEventListener("orientationchange",l)}))},function(e){let{swiper:t,extendParams:n,on:r,emit:i}=e;const o=[],a=ia(),s=function(e,n){void 0===n&&(n={});const r=new(a.MutationObserver||a.WebkitMutationObserver)((e=>{if(t.__preventObserver__)return;if(1===e.length)return void i("observerUpdate",e[0]);const n=function(){i("observerUpdate",e[0])};a.requestAnimationFrame?a.requestAnimationFrame(n):a.setTimeout(n,0)}));r.observe(e,{attributes:void 0===n.attributes||n.attributes,childList:t.isElement||(void 0===n.childList||n).childList,characterData:void 0===n.characterData||n.characterData}),o.push(r)};n({observer:!1,observeParents:!1,observeSlideChildren:!1}),r("init",(()=>{if(t.params.observer){if(t.params.observeParents){const e=function(e,t){const n=[];let r=e.parentElement;for(;r;)n.push(r),r=r.parentElement;return n}(t.hostEl);for(let t=0;t<e.length;t+=1)s(e[t])}s(t.hostEl,{childList:t.params.observeSlideChildren}),s(t.wrapperEl,{attributes:!1})}})),r("destroy",(()=>{o.forEach((e=>{e.disconnect()})),o.splice(0,o.length)}))}]);const ns=["eventsPrefix","injectStyles","injectStylesUrls","modules","init","_direction","oneWayMovement","swiperElementNodeName","touchEventsTarget","initialSlide","_speed","cssMode","updateOnWindowResize","resizeObserver","nested","focusableElements","_enabled","_width","_height","preventInteractionOnTransition","userAgent","url","_edgeSwipeDetection","_edgeSwipeThreshold","_freeMode","_autoHeight","setWrapperSize","virtualTranslate","_effect","breakpoints","breakpointsBase","_spaceBetween","_slidesPerView","maxBackfaceHiddenSlides","_grid","_slidesPerGroup","_slidesPerGroupSkip","_slidesPerGroupAuto","_centeredSlides","_centeredSlidesBounds","_slidesOffsetBefore","_slidesOffsetAfter","normalizeSlideIndex","_centerInsufficientSlides","_watchOverflow","roundLengths","touchRatio","touchAngle","simulateTouch","_shortSwipes","_longSwipes","longSwipesRatio","longSwipesMs","_followFinger","allowTouchMove","_threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","_resistance","_resistanceRatio","_watchSlidesProgress","_grabCursor","preventClicks","preventClicksPropagation","_slideToClickedSlide","_loop","loopAdditionalSlides","loopAddBlankSlides","loopPreventsSliding","_rewind","_allowSlidePrev","_allowSlideNext","_swipeHandler","_noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideActiveClass","slideVisibleClass","slideFullyVisibleClass","slideNextClass","slidePrevClass","slideBlankClass","wrapperClass","lazyPreloaderClass","lazyPreloadPrevNext","runCallbacksOnInit","observer","observeParents","observeSlideChildren","a11y","_autoplay","_controller","coverflowEffect","cubeEffect","fadeEffect","flipEffect","creativeEffect","cardsEffect","hashNavigation","history","keyboard","mousewheel","_navigation","_pagination","parallax","_scrollbar","_thumbs","virtual","zoom","control"];function rs(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)&&!e.__swiper__}function is(e,t){const n=["__proto__","constructor","prototype"];Object.keys(t).filter((e=>n.indexOf(e)<0)).forEach((n=>{void 0===e[n]?e[n]=t[n]:rs(t[n])&&rs(e[n])&&Object.keys(t[n]).length>0?t[n].__swiper__?e[n]=t[n]:is(e[n],t[n]):e[n]=t[n]}))}function os(e){return void 0===e&&(e={}),e.navigation&&void 0===e.navigation.nextEl&&void 0===e.navigation.prevEl}function as(e){return void 0===e&&(e={}),e.pagination&&void 0===e.pagination.el}function ss(e){return void 0===e&&(e={}),e.scrollbar&&void 0===e.scrollbar.el}function ls(e){void 0===e&&(e="");const t=e.split(" ").map((e=>e.trim())).filter((e=>!!e)),n=[];return t.forEach((e=>{n.indexOf(e)<0&&n.push(e)})),n.join(" ")}function cs(e){return void 0===e&&(e=""),e?e.includes("swiper-wrapper")?e:`swiper-wrapper ${e}`:"swiper-wrapper"}function ds(){return ds=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ds.apply(this,arguments)}function us(e){return e.type&&e.type.displayName&&e.type.displayName.includes("SwiperSlide")}function ms(e){const n=[];return t.Children.toArray(e).forEach((e=>{us(e)?n.push(e):e.props&&e.props.children&&ms(e.props.children).forEach((e=>n.push(e)))})),n}function ps(e){const n=[],r={"container-start":[],"container-end":[],"wrapper-start":[],"wrapper-end":[]};return t.Children.toArray(e).forEach((e=>{if(us(e))n.push(e);else if(e.props&&e.props.slot&&r[e.props.slot])r[e.props.slot].push(e);else if(e.props&&e.props.children){const t=ms(e.props.children);t.length>0?t.forEach((e=>n.push(e))):r["container-end"].push(e)}else r["container-end"].push(e)})),{slides:n,slots:r}}function fs(e,n){return"undefined"==typeof window?(0,t.useEffect)(e,n):(0,t.useLayoutEffect)(e,n)}const hs=(0,t.createContext)(null),gs=(0,t.createContext)(null),Cs=(0,t.forwardRef)((function(e,n){let{className:r,tag:i="div",wrapperTag:o="div",children:a,onSwiper:s,...l}=void 0===e?{}:e,c=!1;const[d,u]=(0,t.useState)("swiper"),[m,p]=(0,t.useState)(null),[f,h]=(0,t.useState)(!1),g=(0,t.useRef)(!1),C=(0,t.useRef)(null),v=(0,t.useRef)(null),A=(0,t.useRef)(null),b=(0,t.useRef)(null),y=(0,t.useRef)(null),S=(0,t.useRef)(null),w=(0,t.useRef)(null),P=(0,t.useRef)(null),{params:x,passedParams:E,rest:_,events:D}=function(e,t){void 0===e&&(e={}),void 0===t&&(t=!0);const n={on:{}},r={},i={};is(n,Za),n._emitClasses=!0,n.init=!1;const o={},a=ns.map((e=>e.replace(/_/,""))),s=Object.assign({},e);return Object.keys(s).forEach((s=>{void 0!==e[s]&&(a.indexOf(s)>=0?rs(e[s])?(n[s]={},i[s]={},is(n[s],e[s]),is(i[s],e[s])):(n[s]=e[s],i[s]=e[s]):0===s.search(/on[A-Z]/)&&"function"==typeof e[s]?t?r[`${s[2].toLowerCase()}${s.substr(3)}`]=e[s]:n.on[`${s[2].toLowerCase()}${s.substr(3)}`]=e[s]:o[s]=e[s])})),["navigation","pagination","scrollbar"].forEach((e=>{!0===n[e]&&(n[e]={}),!1===n[e]&&delete n[e]})),{params:n,passedParams:i,rest:o,events:r}}(l),{slides:O,slots:I}=ps(a),L=()=>{h(!f)};Object.assign(x.on,{_containerClasses(e,t){u(t)}});const k=()=>{Object.assign(x.on,D),c=!0;const e={...x};if(delete e.wrapperClass,v.current=new ts(e),v.current.virtual&&v.current.params.virtual.enabled){v.current.virtual.slides=O;const e={cache:!1,slides:O,renderExternal:p,renderExternalUpdate:!1};is(v.current.params.virtual,e),is(v.current.originalParams.virtual,e)}};return C.current||k(),v.current&&v.current.on("_beforeBreakpoint",L),(0,t.useEffect)((()=>()=>{v.current&&v.current.off("_beforeBreakpoint",L)})),(0,t.useEffect)((()=>{!g.current&&v.current&&(v.current.emitSlidesClasses(),g.current=!0)})),fs((()=>{if(n&&(n.current=C.current),C.current)return v.current.destroyed&&k(),function(e,t){let{el:n,nextEl:r,prevEl:i,paginationEl:o,scrollbarEl:a,swiper:s}=e;os(t)&&r&&i&&(s.params.navigation.nextEl=r,s.originalParams.navigation.nextEl=r,s.params.navigation.prevEl=i,s.originalParams.navigation.prevEl=i),as(t)&&o&&(s.params.pagination.el=o,s.originalParams.pagination.el=o),ss(t)&&a&&(s.params.scrollbar.el=a,s.originalParams.scrollbar.el=a),s.init(n)}({el:C.current,nextEl:y.current,prevEl:S.current,paginationEl:w.current,scrollbarEl:P.current,swiper:v.current},x),s&&!v.current.destroyed&&s(v.current),()=>{v.current&&!v.current.destroyed&&v.current.destroy(!0,!1)}}),[]),fs((()=>{!c&&D&&v.current&&Object.keys(D).forEach((e=>{v.current.on(e,D[e])}));const e=function(e,t,n,r,i){const o=[];if(!t)return o;const a=e=>{o.indexOf(e)<0&&o.push(e)};if(n&&r){const e=r.map(i),t=n.map(i);e.join("")!==t.join("")&&a("children"),r.length!==n.length&&a("children")}return ns.filter((e=>"_"===e[0])).map((e=>e.replace(/_/,""))).forEach((n=>{if(n in e&&n in t)if(rs(e[n])&&rs(t[n])){const r=Object.keys(e[n]),i=Object.keys(t[n]);r.length!==i.length?a(n):(r.forEach((r=>{e[n][r]!==t[n][r]&&a(n)})),i.forEach((r=>{e[n][r]!==t[n][r]&&a(n)})))}else e[n]!==t[n]&&a(n)})),o}(E,A.current,O,b.current,(e=>e.key));return A.current=E,b.current=O,e.length&&v.current&&!v.current.destroyed&&function(e){let{swiper:t,slides:n,passedParams:r,changedParams:i,nextEl:o,prevEl:a,scrollbarEl:s,paginationEl:l}=e;const c=i.filter((e=>"children"!==e&&"direction"!==e&&"wrapperClass"!==e)),{params:d,pagination:u,navigation:m,scrollbar:p,virtual:f,thumbs:h}=t;let g,C,v,A,b,y,S,w;i.includes("thumbs")&&r.thumbs&&r.thumbs.swiper&&!r.thumbs.swiper.destroyed&&d.thumbs&&(!d.thumbs.swiper||d.thumbs.swiper.destroyed)&&(g=!0),i.includes("controller")&&r.controller&&r.controller.control&&d.controller&&!d.controller.control&&(C=!0),i.includes("pagination")&&r.pagination&&(r.pagination.el||l)&&(d.pagination||!1===d.pagination)&&u&&!u.el&&(v=!0),i.includes("scrollbar")&&r.scrollbar&&(r.scrollbar.el||s)&&(d.scrollbar||!1===d.scrollbar)&&p&&!p.el&&(A=!0),i.includes("navigation")&&r.navigation&&(r.navigation.prevEl||a)&&(r.navigation.nextEl||o)&&(d.navigation||!1===d.navigation)&&m&&!m.prevEl&&!m.nextEl&&(b=!0);const P=e=>{t[e]&&(t[e].destroy(),"navigation"===e?(t.isElement&&(t[e].prevEl.remove(),t[e].nextEl.remove()),d[e].prevEl=void 0,d[e].nextEl=void 0,t[e].prevEl=void 0,t[e].nextEl=void 0):(t.isElement&&t[e].el.remove(),d[e].el=void 0,t[e].el=void 0))};i.includes("loop")&&t.isElement&&(d.loop&&!r.loop?y=!0:!d.loop&&r.loop?S=!0:w=!0),c.forEach((e=>{if(rs(d[e])&&rs(r[e]))Object.assign(d[e],r[e]),"navigation"!==e&&"pagination"!==e&&"scrollbar"!==e||!("enabled"in r[e])||r[e].enabled||P(e);else{const t=r[e];!0!==t&&!1!==t||"navigation"!==e&&"pagination"!==e&&"scrollbar"!==e?d[e]=r[e]:!1===t&&P(e)}})),c.includes("controller")&&!C&&t.controller&&t.controller.control&&d.controller&&d.controller.control&&(t.controller.control=d.controller.control),i.includes("children")&&n&&f&&d.virtual.enabled?(f.slides=n,f.update(!0)):i.includes("virtual")&&f&&d.virtual.enabled&&(n&&(f.slides=n),f.update(!0)),i.includes("children")&&n&&d.loop&&(w=!0),g&&h.init()&&h.update(!0),C&&(t.controller.control=d.controller.control),v&&(!t.isElement||l&&"string"!=typeof l||(l=document.createElement("div"),l.classList.add("swiper-pagination"),l.part.add("pagination"),t.el.appendChild(l)),l&&(d.pagination.el=l),u.init(),u.render(),u.update()),A&&(!t.isElement||s&&"string"!=typeof s||(s=document.createElement("div"),s.classList.add("swiper-scrollbar"),s.part.add("scrollbar"),t.el.appendChild(s)),s&&(d.scrollbar.el=s),p.init(),p.updateSize(),p.setTranslate()),b&&(t.isElement&&(o&&"string"!=typeof o||(o=document.createElement("div"),o.classList.add("swiper-button-next"),o.innerHTML=t.hostEl.constructor.nextButtonSvg,o.part.add("button-next"),t.el.appendChild(o)),a&&"string"!=typeof a||(a=document.createElement("div"),a.classList.add("swiper-button-prev"),a.innerHTML=t.hostEl.constructor.prevButtonSvg,a.part.add("button-prev"),t.el.appendChild(a))),o&&(d.navigation.nextEl=o),a&&(d.navigation.prevEl=a),m.init(),m.update()),i.includes("allowSlideNext")&&(t.allowSlideNext=r.allowSlideNext),i.includes("allowSlidePrev")&&(t.allowSlidePrev=r.allowSlidePrev),i.includes("direction")&&t.changeDirection(r.direction,!1),(y||w)&&t.loopDestroy(),(S||w)&&t.loopCreate(),t.update()}({swiper:v.current,slides:O,passedParams:E,changedParams:e,nextEl:y.current,prevEl:S.current,scrollbarEl:P.current,paginationEl:w.current}),()=>{D&&v.current&&Object.keys(D).forEach((e=>{v.current.off(e,D[e])}))}})),fs((()=>{(e=>{!e||e.destroyed||!e.params.virtual||e.params.virtual&&!e.params.virtual.enabled||(e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.parallax&&e.params.parallax&&e.params.parallax.enabled&&e.parallax.setTranslate())})(v.current)}),[m]),t.createElement(i,ds({ref:C,className:ls(`${d}${r?` ${r}`:""}`)},_),t.createElement(gs.Provider,{value:v.current},I["container-start"],t.createElement(o,{className:cs(x.wrapperClass)},I["wrapper-start"],x.virtual?function(e,n,r){if(!r)return null;const i=e=>{let t=e;return e<0?t=n.length+e:t>=n.length&&(t-=n.length),t},o=e.isHorizontal()?{[e.rtlTranslate?"right":"left"]:`${r.offset}px`}:{top:`${r.offset}px`},{from:a,to:s}=r,l=e.params.loop?-n.length:0,c=e.params.loop?2*n.length:n.length,d=[];for(let e=l;e<c;e+=1)e>=a&&e<=s&&d.push(n[i(e)]);return d.map(((n,r)=>t.cloneElement(n,{swiper:e,style:o,key:n.props.virtualIndex||n.key||`slide-${r}`})))}(v.current,O,m):O.map(((e,n)=>t.cloneElement(e,{swiper:v.current,swiperSlideIndex:n}))),I["wrapper-end"]),os(x)&&t.createElement(t.Fragment,null,t.createElement("div",{ref:S,className:"swiper-button-prev"}),t.createElement("div",{ref:y,className:"swiper-button-next"})),ss(x)&&t.createElement("div",{ref:P,className:"swiper-scrollbar"}),as(x)&&t.createElement("div",{ref:w,className:"swiper-pagination"}),I["container-end"]))}));Cs.displayName="Swiper";const vs=(0,t.forwardRef)((function(e,n){let{tag:r="div",children:i,className:o="",swiper:a,zoom:s,lazy:l,virtualIndex:c,swiperSlideIndex:d,...u}=void 0===e?{}:e;const m=(0,t.useRef)(null),[p,f]=(0,t.useState)("swiper-slide"),[h,g]=(0,t.useState)(!1);function C(e,t,n){t===m.current&&f(n)}fs((()=>{if(void 0!==d&&(m.current.swiperSlideIndex=d),n&&(n.current=m.current),m.current&&a){if(!a.destroyed)return a.on("_slideClass",C),()=>{a&&a.off("_slideClass",C)};"swiper-slide"!==p&&f("swiper-slide")}})),fs((()=>{a&&m.current&&!a.destroyed&&f(a.getSlideClasses(m.current))}),[a]);const v={isActive:p.indexOf("swiper-slide-active")>=0,isVisible:p.indexOf("swiper-slide-visible")>=0,isPrev:p.indexOf("swiper-slide-prev")>=0,isNext:p.indexOf("swiper-slide-next")>=0},A=()=>"function"==typeof i?i(v):i;return t.createElement(r,ds({ref:m,className:ls(`${p}${o?` ${o}`:""}`),"data-swiper-slide-index":c,onLoad:()=>{g(!0)}},u),s&&t.createElement(hs.Provider,{value:v},t.createElement("div",{className:"swiper-zoom-container","data-swiper-zoom":"number"==typeof s?s:void 0},A(),l&&!h&&t.createElement("div",{className:"swiper-lazy-preloader"}))),!s&&t.createElement(hs.Provider,{value:v},A(),l&&!h&&t.createElement("div",{className:"swiper-lazy-preloader"})))}));vs.displayName="SwiperSlide";var As=i(379),bs=i.n(As),ys=i(795),Ss=i.n(ys),ws=i(569),Ps=i.n(ws),xs=i(565),Es=i.n(xs),_s=i(216),Ds=i.n(_s),Os=i(589),Is=i.n(Os),Ls=i(709),ks={};function js(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}ks.styleTagTransform=Is(),ks.setAttributes=Es(),ks.insert=Ps().bind(null,"head"),ks.domAPI=Ss(),ks.insertStyleElement=Ds(),bs()(Ls.Z,ks),Ls.Z&&Ls.Z.locals&&Ls.Z.locals;const Fs=function(){var e,n,r=(e=(0,t.useState)(null),n=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,t){if(e){if("string"==typeof e)return js(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?js(e,t):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0],o=r[1],a=[{id:"homem1",componente:(0,qn.jsx)(Dr,{})},{id:"homem2",componente:(0,qn.jsx)(Or,{})},{id:"homem3",componente:(0,qn.jsx)(Ir,{})},{id:"mulher1",componente:(0,qn.jsx)(Lr,{})},{id:"mulher2",componente:(0,qn.jsx)(kr,{})},{id:"mulher3",componente:(0,qn.jsx)(jr,{})},{id:"mulher4",componente:(0,qn.jsx)(Fr,{})},{id:"robo1",componente:(0,qn.jsx)(Mr,{})},{id:"robo2",componente:(0,qn.jsx)(Ur,{})}];return(0,qn.jsx)(Xo,{children:(0,qn.jsx)(Cs,{spaceBetween:0,slidesPerView:1.5,centeredSlides:!0,loop:!0,onSlideChange:function(e){return function(e){var t=e.slides[e.activeIndex].querySelector("[id]"),n=null==t?void 0:t.id;o(n)}(e)},children:a.map((function(e){return(0,qn.jsx)(vs,{children:(0,qn.jsx)(_r,{id:e.id,ativado:i===e.id,children:e.componente})},e.id)}))})})};function Ms(e){return Ms="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ms(e)}function Us(){Us=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(e){c=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof C?t:C,a=Object.create(o.prototype),s=new I(r||[]);return i(a,"_invoke",{value:E(e,n,s)}),a}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var m="suspendedStart",p="suspendedYield",f="executing",h="completed",g={};function C(){}function v(){}function A(){}var b={};c(b,a,(function(){return this}));var y=Object.getPrototypeOf,S=y&&y(y(L([])));S&&S!==n&&r.call(S,a)&&(b=S);var w=A.prototype=C.prototype=Object.create(b);function P(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(i,o,a,s){var l=u(e[i],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==Ms(d)&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,a,s)}),(function(e){n("throw",e,a,s)})):t.resolve(d).then((function(e){c.value=e,a(c)}),(function(e){return n("throw",e,a,s)}))}s(l.arg)}var o;i(this,"_invoke",{value:function(e,r){function i(){return new t((function(t,i){n(e,r,t,i)}))}return o=o?o.then(i,i):i()}})}function E(t,n,r){var i=m;return function(o,a){if(i===f)throw new Error("Generator is already running");if(i===h){if("throw"===o)throw a;return{value:e,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var l=_(s,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===m)throw i=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=f;var c=u(t,n,r);if("normal"===c.type){if(i=r.done?h:p,c.arg===g)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(i=h,r.method="throw",r.arg=c.arg)}}}function _(t,n){var r=n.method,i=t.iterator[r];if(i===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var o=u(i,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,g;var a=o.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function D(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function L(t){if(t||""===t){var n=t[a];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,o=function n(){for(;++i<t.length;)if(r.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(Ms(t)+" is not iterable")}return v.prototype=A,i(w,"constructor",{value:A,configurable:!0}),i(A,"constructor",{value:v,configurable:!0}),v.displayName=c(A,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,A):(e.__proto__=A,c(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},t.awrap=function(e){return{__await:e}},P(x.prototype),c(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,n,r,i,o){void 0===o&&(o=Promise);var a=new x(d(e,n,r,i),o);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(w),c(w,l,"Generator"),c(w,a,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=L,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(r,i){return s.type="throw",s.arg=t,n.next=r,i&&(n.method="next",n.arg=e),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),c=r.call(a,"finallyLoc");if(l&&c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),O(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;O(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:L(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function Ts(e,t,n,r,i,o,a){try{var s=e[o](a),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,i)}function Rs(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function a(e){Ts(o,r,i,a,s,"next",e)}function s(e){Ts(o,r,i,a,s,"throw",e)}a(void 0)}))}}function Ns(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Ws(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ws(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ws(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Bs=function(){var e=J(),n=Ns((0,t.useState)(localStorage.getItem("name")),2),r=n[0],i=n[1],o=Ns((0,t.useState)(""),2),a=(o[0],o[1],Ns((0,t.useState)(!1),2)),s=a[0],l=a[1],c=function(){var t=Rs(Us().mark((function t(){var n,r,i;return Us().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=document.querySelector(".swiper-slide-active [id]"),r=null==n?void 0:n.id){t.next=5;break}return alert("Por favor, selecione um avatar"),t.abrupt("return");case 5:return l(!0),localStorage.setItem("avatar",r),t.prev=7,t.next=10,d(r);case 10:(i=t.sent)?(localStorage.setItem("id",i),e("/cronograma")):l(!1),t.next=19;break;case 14:t.prev=14,t.t0=t.catch(7),console.error("Erro ao processar seleção de avatar:",t.t0),l(!1),alert("Ocorreu um erro ao selecionar o avatar. Tente novamente.");case 19:case"end":return t.stop()}}),t,null,[[7,14]])})));return function(){return t.apply(this,arguments)}}(),d=function(){var e=Rs(Us().mark((function e(t){var n,i,o;return Us().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=Kn.get("csrftoken"),e.next=3,fetch("https://tedxibmec.fly.dev/api/espectador/",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":n},body:JSON.stringify({nome:r,avatar:t})});case 3:if((i=e.sent).ok){e.next=7;break}return console.error("Erro ao adicionar usuário ao backend"),e.abrupt("return",null);case 7:return e.next=9,i.json();case 9:return o=e.sent,e.abrupt("return",o.id);case 11:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return(0,t.useEffect)((function(){var e=localStorage.getItem("name");i(e)}),[e]),(0,qn.jsxs)(qo,{children:[(0,qn.jsx)(mr,{}),(0,qn.jsx)($o,{children:"Selecione o seu avatar"}),(0,qn.jsx)(Fs,{}),(0,qn.jsx)(Zn,{onClick:c,children:"SELECIONAR"}),s&&(0,qn.jsx)(mo,{message:"Processando sua seleção..."})]})};var zs=document.getElementById("root");(0,r.s)(zs).render((0,qn.jsx)(t.StrictMode,{children:(0,qn.jsx)(br,{children:(0,qn.jsx)(Hr,{children:(0,qn.jsxs)(re,{children:[(0,qn.jsx)(te,{path:"/",element:(0,qn.jsx)(gr,{})}),(0,qn.jsx)(te,{path:"/avatar",element:(0,qn.jsx)(Bs,{})}),(0,qn.jsx)(te,{path:"/cronograma",element:(0,qn.jsx)(Oi,{})}),(0,qn.jsx)(te,{path:"/palestrante",element:(0,qn.jsx)(bo,{})}),(0,qn.jsx)(te,{path:"/ranking",element:(0,qn.jsx)(Jo,{})})]})})})}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,