/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,n,t={709:(e,n,t)=>{"use strict";t.d(n,{Z:()=>m});var r=t(537),i=t.n(r),o=t(645),a=t.n(o),s=t(667),l=t.n(s),d=new URL(t(954),t.b),c=a()(i()),u=l()(d);c.push([e.id,`/**\n * Swiper 11.2.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2025 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 19, 2025\n */\n\n/* FONT_START */\n@font-face {\n  font-family: 'swiper-icons';\n  src: url(${u});\n  font-weight: 400;\n  font-style: normal;\n}\n/* FONT_END */\n:root {\n  --swiper-theme-color: #007aff;\n  /*\n  --swiper-preloader-color: var(--swiper-theme-color);\n  --swiper-wrapper-transition-timing-function: initial;\n  */\n}\n:host {\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 1;\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n  display: block;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-ios .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-horizontal {\n  touch-action: pan-y;\n}\n.swiper-vertical {\n  touch-action: pan-x;\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n  display: block;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight,\n.swiper-autoheight .swiper-slide {\n  height: auto;\n}\n.swiper-autoheight .swiper-wrapper {\n  align-items: flex-start;\n  transition-property: transform, height;\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d.swiper-css-mode .swiper-wrapper {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-wrapper {\n  transform-style: preserve-3d;\n}\n.swiper-3d {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-slide,\n.swiper-3d .swiper-cube-shadow {\n  transform-style: preserve-3d;\n}\n/* CSS Mode */\n.swiper-css-mode > .swiper-wrapper {\n  overflow: auto;\n  scrollbar-width: none;\n  /* For Firefox */\n  -ms-overflow-style: none;\n  /* For Internet Explorer and Edge */\n}\n.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {\n  display: none;\n}\n.swiper-css-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: start start;\n}\n.swiper-css-mode.swiper-horizontal > .swiper-wrapper {\n  scroll-snap-type: x mandatory;\n}\n.swiper-css-mode.swiper-vertical > .swiper-wrapper {\n  scroll-snap-type: y mandatory;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper {\n  scroll-snap-type: none;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: none;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper::before {\n  content: '';\n  flex-shrink: 0;\n  order: 9999;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: center center;\n  scroll-snap-stop: always;\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {\n  margin-inline-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {\n  height: 100%;\n  min-height: 1px;\n  width: var(--swiper-centered-offset-after);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {\n  margin-block-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {\n  width: 100%;\n  min-width: 1px;\n  height: var(--swiper-centered-offset-after);\n}\n/* Slide styles start */\n/* 3D Shadows */\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom,\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: rgba(0, 0, 0, 0.15);\n}\n.swiper-3d .swiper-slide-shadow-left {\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-right {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-top {\n  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-bottom {\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-lazy-preloader {\n  width: 42px;\n  height: 42px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -21px;\n  margin-top: -21px;\n  z-index: 10;\n  transform-origin: 50%;\n  box-sizing: border-box;\n  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));\n  border-radius: 50%;\n  border-top-color: transparent;\n}\n.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,\n.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {\n  animation: swiper-preloader-spin 1s infinite linear;\n}\n.swiper-lazy-preloader-white {\n  --swiper-preloader-color: #fff;\n}\n.swiper-lazy-preloader-black {\n  --swiper-preloader-color: #000;\n}\n@keyframes swiper-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n/* Slide styles end */\n`,"",{version:3,sources:["webpack://./node_modules/swiper/swiper.css"],names:[],mappings:"AAAA;;;;;;;;;;EAUE;;AAEF,eAAe;AACf;EACE,2BAA2B;EAC3B,4CAA6rE;EAC7rE,gBAAgB;EAChB,kBAAkB;AACpB;AACA,aAAa;AACb;EACE,6BAA6B;EAC7B;;;GAGC;AACH;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;AACA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,UAAU;EACV,6BAA6B;EAC7B,UAAU;EACV,cAAc;AAChB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,qFAAqF;EACrF,uBAAuB;AACzB;AACA;;;EAGE,iCAAiC;AACnC;AACA;EACE,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,8BAA8B;EAC9B,cAAc;AAChB;AACA;EACE,kBAAkB;AACpB;AACA,gBAAgB;AAChB;;EAEE,YAAY;AACd;AACA;EACE,uBAAuB;EACvB,sCAAsC;AACxC;AACA;EACE,wBAAwB;EACxB,mCAAmC;UAC3B,2BAA2B;AACrC;AACA,eAAe;AACf;EACE,mBAAmB;AACrB;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,4BAA4B;AAC9B;AACA,aAAa;AACb;EACE,cAAc;EACd,qBAAqB;EACrB,gBAAgB;EAChB,wBAAwB;EACxB,mCAAmC;AACrC;AACA;EACE,aAAa;AACf;AACA;EACE,8BAA8B;AAChC;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,sBAAsB;AACxB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,cAAc;EACd,WAAW;AACb;AACA;EACE,gCAAgC;EAChC,wBAAwB;AAC1B;AACA;EACE,yDAAyD;AAC3D;AACA;EACE,YAAY;EACZ,eAAe;EACf,0CAA0C;AAC5C;AACA;EACE,wDAAwD;AAC1D;AACA;EACE,WAAW;EACX,cAAc;EACd,2CAA2C;AAC7C;AACA,uBAAuB;AACvB,eAAe;AACf;;;;;;;;;;EAUE,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,oBAAoB;EACpB,WAAW;AACb;AACA;EACE,+BAA+B;AACjC;AACA;EACE,gFAAgF;AAClF;AACA;EACE,iFAAiF;AACnF;AACA;EACE,+EAA+E;AACjF;AACA;EACE,kFAAkF;AACpF;AACA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,kBAAkB;EAClB,iBAAiB;EACjB,WAAW;EACX,qBAAqB;EACrB,sBAAsB;EACtB,0EAA0E;EAC1E,kBAAkB;EAClB,6BAA6B;AAC/B;AACA;;EAEE,mDAAmD;AACrD;AACA;EACE,8BAA8B;AAChC;AACA;EACE,8BAA8B;AAChC;AACA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;AACA,qBAAqB",sourcesContent:["/**\n * Swiper 11.2.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2025 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 19, 2025\n */\n\n/* FONT_START */\n@font-face {\n  font-family: 'swiper-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA');\n  font-weight: 400;\n  font-style: normal;\n}\n/* FONT_END */\n:root {\n  --swiper-theme-color: #007aff;\n  /*\n  --swiper-preloader-color: var(--swiper-theme-color);\n  --swiper-wrapper-transition-timing-function: initial;\n  */\n}\n:host {\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: 1;\n}\n.swiper {\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  /* Fix of Webkit flickering */\n  z-index: 1;\n  display: block;\n}\n.swiper-vertical > .swiper-wrapper {\n  flex-direction: column;\n}\n.swiper-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  display: flex;\n  transition-property: transform;\n  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);\n  box-sizing: content-box;\n}\n.swiper-android .swiper-slide,\n.swiper-ios .swiper-slide,\n.swiper-wrapper {\n  transform: translate3d(0px, 0, 0);\n}\n.swiper-horizontal {\n  touch-action: pan-y;\n}\n.swiper-vertical {\n  touch-action: pan-x;\n}\n.swiper-slide {\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition-property: transform;\n  display: block;\n}\n.swiper-slide-invisible-blank {\n  visibility: hidden;\n}\n/* Auto Height */\n.swiper-autoheight,\n.swiper-autoheight .swiper-slide {\n  height: auto;\n}\n.swiper-autoheight .swiper-wrapper {\n  align-items: flex-start;\n  transition-property: transform, height;\n}\n.swiper-backface-hidden .swiper-slide {\n  transform: translateZ(0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n/* 3D Effects */\n.swiper-3d.swiper-css-mode .swiper-wrapper {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-wrapper {\n  transform-style: preserve-3d;\n}\n.swiper-3d {\n  perspective: 1200px;\n}\n.swiper-3d .swiper-slide,\n.swiper-3d .swiper-cube-shadow {\n  transform-style: preserve-3d;\n}\n/* CSS Mode */\n.swiper-css-mode > .swiper-wrapper {\n  overflow: auto;\n  scrollbar-width: none;\n  /* For Firefox */\n  -ms-overflow-style: none;\n  /* For Internet Explorer and Edge */\n}\n.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {\n  display: none;\n}\n.swiper-css-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: start start;\n}\n.swiper-css-mode.swiper-horizontal > .swiper-wrapper {\n  scroll-snap-type: x mandatory;\n}\n.swiper-css-mode.swiper-vertical > .swiper-wrapper {\n  scroll-snap-type: y mandatory;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper {\n  scroll-snap-type: none;\n}\n.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: none;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper::before {\n  content: '';\n  flex-shrink: 0;\n  order: 9999;\n}\n.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {\n  scroll-snap-align: center center;\n  scroll-snap-stop: always;\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {\n  margin-inline-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {\n  height: 100%;\n  min-height: 1px;\n  width: var(--swiper-centered-offset-after);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {\n  margin-block-start: var(--swiper-centered-offset-before);\n}\n.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {\n  width: 100%;\n  min-width: 1px;\n  height: var(--swiper-centered-offset-after);\n}\n/* Slide styles start */\n/* 3D Shadows */\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom,\n.swiper-3d .swiper-slide-shadow,\n.swiper-3d .swiper-slide-shadow-left,\n.swiper-3d .swiper-slide-shadow-right,\n.swiper-3d .swiper-slide-shadow-top,\n.swiper-3d .swiper-slide-shadow-bottom {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 10;\n}\n.swiper-3d .swiper-slide-shadow {\n  background: rgba(0, 0, 0, 0.15);\n}\n.swiper-3d .swiper-slide-shadow-left {\n  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-right {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-top {\n  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-3d .swiper-slide-shadow-bottom {\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));\n}\n.swiper-lazy-preloader {\n  width: 42px;\n  height: 42px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -21px;\n  margin-top: -21px;\n  z-index: 10;\n  transform-origin: 50%;\n  box-sizing: border-box;\n  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));\n  border-radius: 50%;\n  border-top-color: transparent;\n}\n.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,\n.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {\n  animation: swiper-preloader-spin 1s infinite linear;\n}\n.swiper-lazy-preloader-white {\n  --swiper-preloader-color: #fff;\n}\n.swiper-lazy-preloader-black {\n  --swiper-preloader-color: #000;\n}\n@keyframes swiper-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n/* Slide styles end */\n"],sourceRoot:""}]);const m=c},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);r&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),n.push(c))}},n}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},448:(e,n,t)=>{"use strict";var r=t(294),i=t(840);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,s={};function l(e,n){d(e,n),d(e+"Capture",n)}function d(e,n){for(s[e]=n,e=0;e<n.length;e++)a.add(n[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function h(e,n,t,r,i,o,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=a}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];g[n]=new h(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var C=/[\-:]([a-z])/g;function A(e){return e[1].toUpperCase()}function v(e,n,t,r){var i=g.hasOwnProperty(n)?g[n]:null;(null!==i?0!==i.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,i,r)&&(t=null),r||null===i?function(e){return!!u.call(f,e)||!u.call(p,e)&&(m.test(e)?f[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):i.mustUseProperty?e[i.propertyName]=null===t?3!==i.type&&"":t:(n=i.attributeName,r=i.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(i=i.type)||4===i&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(C,A);g[n]=new h(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(C,A);g[n]=new h(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(C,A);g[n]=new h(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),S=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),P=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),x=Symbol.for("react.provider"),_=Symbol.for("react.context"),D=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),k=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function j(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var U,R=Object.assign;function T(e){if(void 0===U)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);U=n&&n[1]||""}return"\n"+U+e}var N=!1;function W(e,n){if(!e||N)return"";N=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var i=n.stack.split("\n"),o=r.stack.split("\n"),a=i.length-1,s=o.length-1;1<=a&&0<=s&&i[a]!==o[s];)s--;for(;1<=a&&0<=s;a--,s--)if(i[a]!==o[s]){if(1!==a||1!==s)do{if(a--,0>--s||i[a]!==o[s]){var l="\n"+i[a].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=a&&0<=s);break}}}finally{N=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?T(e):""}function B(e){switch(e.tag){case 5:return T(e.type);case 16:return T("Lazy");case 13:return T("Suspense");case 19:return T("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 1:return W(e.type,!0);default:return""}}function z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case S:return"Portal";case E:return"Profiler";case P:return"StrictMode";case O:return"Suspense";case I:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case x:return(e._context.displayName||"Context")+".Provider";case D:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(n=e.displayName||null)?n:z(e.type)||"Memo";case k:n=e._payload,e=e._init;try{return z(e(n))}catch(e){}}return null}function V(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return z(n);case 8:return n===P?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function J(e){e._valueTracker||(e._valueTracker=function(e){var n=H(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var i=t.get,o=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Y(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Z(e,n){var t=n.checked;return R({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function $(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=G(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function X(e,n){null!=(n=n.checked)&&v(e,"checked",n,!1)}function q(e,n){X(e,n);var t=G(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,G(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function K(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&Q(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var i=0;i<t.length;i++)n["$"+t[i]]=!0;for(t=0;t<e.length;t++)i=n.hasOwnProperty("$"+e[t].value),e[t].selected!==i&&(e[t].selected=i),i&&r&&(e[t].defaultSelected=!0)}else{for(t=""+G(t),n=null,i=0;i<e.length;i++){if(e[i].value===t)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==n||e[i].disabled||(n=e[i])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return R({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(o(92));if(ne(t)){if(1<t.length)throw Error(o(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:G(t)}}function oe(e,n){var t=G(n.value),r=G(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ae(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var de,ce,ue=(ce=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((de=de||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=de.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,n)}))}:ce);function me(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function he(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function ge(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),i=he(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,i):e[t]=i}}Object.keys(pe).forEach((function(e){fe.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var Ce=R({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ae(e,n){if(n){if(Ce[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function ve(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function ye(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,we=null,Pe=null;function Ee(e){if(e=vi(e)){if("function"!=typeof Se)throw Error(o(280));var n=e.stateNode;n&&(n=yi(n),Se(e.stateNode,e.type,n))}}function xe(e){we?Pe?Pe.push(e):Pe=[e]:we=e}function _e(){if(we){var e=we,n=Pe;if(Pe=we=null,Ee(e),n)for(e=0;e<n.length;e++)Ee(n[e])}}function De(e,n){return e(n)}function Oe(){}var Ie=!1;function Le(e,n,t){if(Ie)return e(n,t);Ie=!0;try{return De(e,n,t)}finally{Ie=!1,(null!==we||null!==Pe)&&(Oe(),_e())}}function ke(e,n){var t=e.stateNode;if(null===t)return null;var r=yi(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(o(231,n,typeof t));return t}var Fe=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Fe=!1}function je(e,n,t,r,i,o,a,s,l){var d=Array.prototype.slice.call(arguments,3);try{n.apply(t,d)}catch(e){this.onError(e)}}var Ue=!1,Re=null,Te=!1,Ne=null,We={onError:function(e){Ue=!0,Re=e}};function Be(e,n,t,r,i,o,a,s,l){Ue=!1,Re=null,je.apply(We,arguments)}function ze(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ve(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ge(e){if(ze(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=ze(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var i=t.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){t=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===t)return Ge(i),e;if(a===r)return Ge(i),n;a=a.sibling}throw Error(o(188))}if(t.return!==r.return)t=i,r=a;else{for(var s=!1,l=i.child;l;){if(l===t){s=!0,t=i,r=a;break}if(l===r){s=!0,r=i,t=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===t){s=!0,t=a,r=i;break}if(l===r){s=!0,r=a,t=i;break}l=l.sibling}if(!s)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(e))?Je(e):null}function Je(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=Je(e);if(null!==n)return n;e=e.sibling}return null}var Ye=i.unstable_scheduleCallback,Qe=i.unstable_cancelCallback,Ze=i.unstable_shouldYield,$e=i.unstable_requestPaint,Xe=i.unstable_now,qe=i.unstable_getCurrentPriorityLevel,Ke=i.unstable_ImmediatePriority,en=i.unstable_UserBlockingPriority,nn=i.unstable_NormalPriority,tn=i.unstable_LowPriority,rn=i.unstable_IdlePriority,on=null,an=null,sn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ln(e)/dn|0)|0},ln=Math.log,dn=Math.LN2,cn=64,un=4194304;function mn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,i=e.suspendedLanes,o=e.pingedLanes,a=268435455&t;if(0!==a){var s=a&~i;0!==s?r=mn(s):0!=(o&=a)&&(r=mn(o))}else 0!=(a=t&~i)?r=mn(a):0!==o&&(r=mn(o));if(0===r)return 0;if(0!==n&&n!==r&&0==(n&i)&&((i=r&-r)>=(o=n&-n)||16===i&&0!=(4194240&o)))return n;if(0!=(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)i=1<<(t=31-sn(n)),r|=e[t],n&=~i;return r}function fn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function hn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gn(){var e=cn;return 0==(4194240&(cn<<=1))&&(cn=64),e}function Cn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function An(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=t}function vn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-sn(t),i=1<<r;i&n|e[r]&n&&(e[r]|=n),t&=~i}}var bn=0;function yn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Sn,wn,Pn,En,xn,_n=!1,Dn=[],On=null,In=null,Ln=null,kn=new Map,Fn=new Map,Mn=[],jn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Un(e,n){switch(e){case"focusin":case"focusout":On=null;break;case"dragenter":case"dragleave":In=null;break;case"mouseover":case"mouseout":Ln=null;break;case"pointerover":case"pointerout":kn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Fn.delete(n.pointerId)}}function Rn(e,n,t,r,i,o){return null===e||e.nativeEvent!==o?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},null!==n&&null!==(n=vi(n))&&wn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==i&&-1===n.indexOf(i)&&n.push(i),e)}function Tn(e){var n=Ai(e.target);if(null!==n){var t=ze(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ve(t)))return e.blockedOn=n,void xn(e.priority,(function(){Pn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Nn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=$n(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=vi(t))&&wn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);be=r,t.target.dispatchEvent(r),be=null,n.shift()}return!0}function Wn(e,n,t){Nn(e)&&t.delete(n)}function Bn(){_n=!1,null!==On&&Nn(On)&&(On=null),null!==In&&Nn(In)&&(In=null),null!==Ln&&Nn(Ln)&&(Ln=null),kn.forEach(Wn),Fn.forEach(Wn)}function zn(e,n){e.blockedOn===n&&(e.blockedOn=null,_n||(_n=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Bn)))}function Vn(e){function n(n){return zn(n,e)}if(0<Dn.length){zn(Dn[0],e);for(var t=1;t<Dn.length;t++){var r=Dn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==On&&zn(On,e),null!==In&&zn(In,e),null!==Ln&&zn(Ln,e),kn.forEach(n),Fn.forEach(n),t=0;t<Mn.length;t++)(r=Mn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Mn.length&&null===(t=Mn[0]).blockedOn;)Tn(t),null===t.blockedOn&&Mn.shift()}var Gn=b.ReactCurrentBatchConfig,Hn=!0;function Jn(e,n,t,r){var i=bn,o=Gn.transition;Gn.transition=null;try{bn=1,Qn(e,n,t,r)}finally{bn=i,Gn.transition=o}}function Yn(e,n,t,r){var i=bn,o=Gn.transition;Gn.transition=null;try{bn=4,Qn(e,n,t,r)}finally{bn=i,Gn.transition=o}}function Qn(e,n,t,r){if(Hn){var i=$n(e,n,t,r);if(null===i)Gr(e,n,r,Zn,t),Un(e,r);else if(function(e,n,t,r,i){switch(n){case"focusin":return On=Rn(On,e,n,t,r,i),!0;case"dragenter":return In=Rn(In,e,n,t,r,i),!0;case"mouseover":return Ln=Rn(Ln,e,n,t,r,i),!0;case"pointerover":var o=i.pointerId;return kn.set(o,Rn(kn.get(o)||null,e,n,t,r,i)),!0;case"gotpointercapture":return o=i.pointerId,Fn.set(o,Rn(Fn.get(o)||null,e,n,t,r,i)),!0}return!1}(i,e,n,t,r))r.stopPropagation();else if(Un(e,r),4&n&&-1<jn.indexOf(e)){for(;null!==i;){var o=vi(i);if(null!==o&&Sn(o),null===(o=$n(e,n,t,r))&&Gr(e,n,r,Zn,t),o===i)break;i=o}null!==i&&r.stopPropagation()}else Gr(e,n,r,null,t)}}var Zn=null;function $n(e,n,t,r){if(Zn=null,null!==(e=Ai(e=ye(r))))if(null===(n=ze(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ve(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Zn=e,null}function Xn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(qe()){case Ke:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var qn=null,Kn=null,et=null;function nt(){if(et)return et;var e,n,t=Kn,r=t.length,i="value"in qn?qn.value:qn.textContent,o=i.length;for(e=0;e<r&&t[e]===i[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===i[o-n];n++);return et=i.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function it(){return!1}function ot(e){function n(n,t,r,i,o){for(var a in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=i,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(a)&&(n=e[a],this[a]=n?n(i):i[a]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?rt:it,this.isPropagationStopped=it,this}return R(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var at,st,lt,dt={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ct=ot(dt),ut=R({},dt,{view:0,detail:0}),mt=ot(ut),pt=R({},ut,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Et,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(at=e.screenX-lt.screenX,st=e.screenY-lt.screenY):st=at=0,lt=e),at)},movementY:function(e){return"movementY"in e?e.movementY:st}}),ft=ot(pt),ht=ot(R({},pt,{dataTransfer:0})),gt=ot(R({},ut,{relatedTarget:0})),Ct=ot(R({},dt,{animationName:0,elapsedTime:0,pseudoElement:0})),At=R({},dt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vt=ot(At),bt=ot(R({},dt,{data:0})),yt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},St={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=wt[e])&&!!n[e]}function Et(){return Pt}var xt=R({},ut,{key:function(e){if(e.key){var n=yt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?St[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Et,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_t=ot(xt),Dt=ot(R({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ot=ot(R({},ut,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Et})),It=ot(R({},dt,{propertyName:0,elapsedTime:0,pseudoElement:0})),Lt=R({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),kt=ot(Lt),Ft=[9,13,27,32],Mt=c&&"CompositionEvent"in window,jt=null;c&&"documentMode"in document&&(jt=document.documentMode);var Ut=c&&"TextEvent"in window&&!jt,Rt=c&&(!Mt||jt&&8<jt&&11>=jt),Tt=String.fromCharCode(32),Nt=!1;function Wt(e,n){switch(e){case"keyup":return-1!==Ft.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zt=!1,Vt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Vt[e.type]:"textarea"===n}function Ht(e,n,t,r){xe(r),0<(n=Jr(n,"onChange")).length&&(t=new ct("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Jt=null,Yt=null;function Qt(e){Tr(e,0)}function Zt(e){if(Y(bi(e)))return e}function $t(e,n){if("change"===e)return n}var Xt=!1;if(c){var qt;if(c){var Kt="oninput"in document;if(!Kt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Kt="function"==typeof er.oninput}qt=Kt}else qt=!1;Xt=qt&&(!document.documentMode||9<document.documentMode)}function nr(){Jt&&(Jt.detachEvent("onpropertychange",tr),Yt=Jt=null)}function tr(e){if("value"===e.propertyName&&Zt(Yt)){var n=[];Ht(n,Yt,e,ye(e)),Le(Qt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Yt=t,(Jt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zt(Yt)}function or(e,n){if("click"===e)return Zt(n)}function ar(e,n){if("input"===e||"change"===e)return Zt(n)}var sr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lr(e,n){if(sr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var i=t[r];if(!u.call(n,i)||!sr(e[i],n[i]))return!1}return!0}function dr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,n){var t,r=dr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dr(r)}}function ur(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?ur(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function mr(){for(var e=window,n=Q();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=Q((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function fr(e){var n=mr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&ur(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var i=t.textContent.length,o=Math.min(r.start,i);r=void 0===r.end?o:Math.min(r.end,i),!e.extend&&o>r&&(i=r,r=o,o=i),i=cr(t,o);var a=cr(t,r);i&&a&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((n=n.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),o>r?(e.addRange(n),e.extend(a.node,a.offset)):(n.setEnd(a.node,a.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,Cr=null,Ar=null,vr=!1;function br(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;vr||null==gr||gr!==Q(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Ar&&lr(Ar,r)||(Ar=r,0<(r=Jr(Cr,"onSelect")).length&&(n=new ct("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=gr)))}function yr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Sr={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},wr={},Pr={};function Er(e){if(wr[e])return wr[e];if(!Sr[e])return e;var n,t=Sr[e];for(n in t)if(t.hasOwnProperty(n)&&n in Pr)return wr[e]=t[n];return e}c&&(Pr=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var xr=Er("animationend"),_r=Er("animationiteration"),Dr=Er("animationstart"),Or=Er("transitionend"),Ir=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function kr(e,n){Ir.set(e,n),l(n,[e])}for(var Fr=0;Fr<Lr.length;Fr++){var Mr=Lr[Fr];kr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}kr(xr,"onAnimationEnd"),kr(_r,"onAnimationIteration"),kr(Dr,"onAnimationStart"),kr("dblclick","onDoubleClick"),kr("focusin","onFocus"),kr("focusout","onBlur"),kr(Or,"onTransitionEnd"),d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var jr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ur=new Set("cancel close invalid load scroll toggle".split(" ").concat(jr));function Rr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,i,a,s,l,d){if(Be.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var c=Re;Ue=!1,Re=null,Te||(Te=!0,Ne=c)}}(r,n,void 0,e),e.currentTarget=null}function Tr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],i=r.event;r=r.listeners;e:{var o=void 0;if(n)for(var a=r.length-1;0<=a;a--){var s=r[a],l=s.instance,d=s.currentTarget;if(s=s.listener,l!==o&&i.isPropagationStopped())break e;Rr(i,s,d),o=l}else for(a=0;a<r.length;a++){if(l=(s=r[a]).instance,d=s.currentTarget,s=s.listener,l!==o&&i.isPropagationStopped())break e;Rr(i,s,d),o=l}}}if(Te)throw e=Ne,Te=!1,Ne=null,e}function Nr(e,n){var t=n[hi];void 0===t&&(t=n[hi]=new Set);var r=e+"__bubble";t.has(r)||(Vr(n,e,2,!1),t.add(r))}function Wr(e,n,t){var r=0;n&&(r|=4),Vr(t,e,r,n)}var Br="_reactListening"+Math.random().toString(36).slice(2);function zr(e){if(!e[Br]){e[Br]=!0,a.forEach((function(n){"selectionchange"!==n&&(Ur.has(n)||Wr(n,!1,e),Wr(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Br]||(n[Br]=!0,Wr("selectionchange",!1,n))}}function Vr(e,n,t,r){switch(Xn(n)){case 1:var i=Jn;break;case 4:i=Yn;break;default:i=Qn}t=i.bind(null,n,t,e),i=void 0,!Fe||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(i=!0),r?void 0!==i?e.addEventListener(n,t,{capture:!0,passive:i}):e.addEventListener(n,t,!0):void 0!==i?e.addEventListener(n,t,{passive:i}):e.addEventListener(n,t,!1)}function Gr(e,n,t,r,i){var o=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var s=r.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===a)for(a=r.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;a=a.return}for(;null!==s;){if(null===(a=Ai(s)))return;if(5===(l=a.tag)||6===l){r=o=a;continue e}s=s.parentNode}}r=r.return}Le((function(){var r=o,i=ye(t),a=[];e:{var s=Ir.get(e);if(void 0!==s){var l=ct,d=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=_t;break;case"focusin":d="focus",l=gt;break;case"focusout":d="blur",l=gt;break;case"beforeblur":case"afterblur":l=gt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=ft;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Ot;break;case xr:case _r:case Dr:l=Ct;break;case Or:l=It;break;case"scroll":l=mt;break;case"wheel":l=kt;break;case"copy":case"cut":case"paste":l=vt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Dt}var c=0!=(4&n),u=!c&&"scroll"===e,m=c?null!==s?s+"Capture":null:s;c=[];for(var p,f=r;null!==f;){var h=(p=f).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==m&&null!=(h=ke(f,m))&&c.push(Hr(f,h,p))),u)break;f=f.return}0<c.length&&(s=new l(s,d,null,t,i),a.push({event:s,listeners:c}))}}if(0==(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||t===be||!(d=t.relatedTarget||t.fromElement)||!Ai(d)&&!d[fi])&&(l||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(d=(d=t.relatedTarget||t.toElement)?Ai(d):null)&&(d!==(u=ze(d))||5!==d.tag&&6!==d.tag)&&(d=null)):(l=null,d=r),l!==d)){if(c=ft,h="onMouseLeave",m="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=Dt,h="onPointerLeave",m="onPointerEnter",f="pointer"),u=null==l?s:bi(l),p=null==d?s:bi(d),(s=new c(h,f+"leave",l,t,i)).target=u,s.relatedTarget=p,h=null,Ai(i)===r&&((c=new c(m,f+"enter",d,t,i)).target=p,c.relatedTarget=u,h=c),u=h,l&&d)e:{for(m=d,f=0,p=c=l;p;p=Yr(p))f++;for(p=0,h=m;h;h=Yr(h))p++;for(;0<f-p;)c=Yr(c),f--;for(;0<p-f;)m=Yr(m),p--;for(;f--;){if(c===m||null!==m&&c===m.alternate)break e;c=Yr(c),m=Yr(m)}c=null}else c=null;null!==l&&Qr(a,s,l,c,!1),null!==d&&null!==u&&Qr(a,u,d,c,!0)}if("select"===(l=(s=r?bi(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=$t;else if(Gt(s))if(Xt)g=ar;else{g=ir;var C=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=or);switch(g&&(g=g(e,r))?Ht(a,g,t,i):(C&&C(e,s,r),"focusout"===e&&(C=s._wrapperState)&&C.controlled&&"number"===s.type&&ee(s,"number",s.value)),C=r?bi(r):window,e){case"focusin":(Gt(C)||"true"===C.contentEditable)&&(gr=C,Cr=r,Ar=null);break;case"focusout":Ar=Cr=gr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,br(a,t,i);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(a,t,i)}var A;if(Mt)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else zt?Wt(e,t)&&(v="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(v="onCompositionStart");v&&(Rt&&"ko"!==t.locale&&(zt||"onCompositionStart"!==v?"onCompositionEnd"===v&&zt&&(A=nt()):(Kn="value"in(qn=i)?qn.value:qn.textContent,zt=!0)),0<(C=Jr(r,v)).length&&(v=new bt(v,e,null,t,i),a.push({event:v,listeners:C}),(A||null!==(A=Bt(t)))&&(v.data=A))),(A=Ut?function(e,n){switch(e){case"compositionend":return Bt(n);case"keypress":return 32!==n.which?null:(Nt=!0,Tt);case"textInput":return(e=n.data)===Tt&&Nt?null:e;default:return null}}(e,t):function(e,n){if(zt)return"compositionend"===e||!Mt&&Wt(e,n)?(e=nt(),et=Kn=qn=null,zt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Rt&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Jr(r,"onBeforeInput")).length&&(i=new bt("onBeforeInput","beforeinput",null,t,i),a.push({event:i,listeners:r}),i.data=A)}Tr(a,n)}))}function Hr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Jr(e,n){for(var t=n+"Capture",r=[];null!==e;){var i=e,o=i.stateNode;5===i.tag&&null!==o&&(i=o,null!=(o=ke(e,t))&&r.unshift(Hr(e,o,i)),null!=(o=ke(e,n))&&r.push(Hr(e,o,i))),e=e.return}return r}function Yr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,n,t,r,i){for(var o=n._reactName,a=[];null!==t&&t!==r;){var s=t,l=s.alternate,d=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==d&&(s=d,i?null!=(l=ke(t,o))&&a.unshift(Hr(t,l,s)):i||null!=(l=ke(t,o))&&a.push(Hr(t,l,s))),t=t.return}0!==a.length&&e.push({event:n,listeners:a})}var Zr=/\r\n?/g,$r=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Zr,"\n").replace($r,"")}function qr(e,n,t){if(n=Xr(n),Xr(e)!==n&&t)throw Error(o(425))}function Kr(){}var ei=null,ni=null;function ti(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ri="function"==typeof setTimeout?setTimeout:void 0,ii="function"==typeof clearTimeout?clearTimeout:void 0,oi="function"==typeof Promise?Promise:void 0,ai="function"==typeof queueMicrotask?queueMicrotask:void 0!==oi?function(e){return oi.resolve(null).then(e).catch(si)}:ri;function si(e){setTimeout((function(){throw e}))}function li(e,n){var t=n,r=0;do{var i=t.nextSibling;if(e.removeChild(t),i&&8===i.nodeType)if("/$"===(t=i.data)){if(0===r)return e.removeChild(i),void Vn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=i}while(t);Vn(n)}function di(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ci(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var ui=Math.random().toString(36).slice(2),mi="__reactFiber$"+ui,pi="__reactProps$"+ui,fi="__reactContainer$"+ui,hi="__reactEvents$"+ui,gi="__reactListeners$"+ui,Ci="__reactHandles$"+ui;function Ai(e){var n=e[mi];if(n)return n;for(var t=e.parentNode;t;){if(n=t[fi]||t[mi]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ci(e);null!==e;){if(t=e[mi])return t;e=ci(e)}return n}t=(e=t).parentNode}return null}function vi(e){return!(e=e[mi]||e[fi])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function yi(e){return e[pi]||null}var Si=[],wi=-1;function Pi(e){return{current:e}}function Ei(e){0>wi||(e.current=Si[wi],Si[wi]=null,wi--)}function xi(e,n){wi++,Si[wi]=e.current,e.current=n}var _i={},Di=Pi(_i),Oi=Pi(!1),Ii=_i;function Li(e,n){var t=e.type.contextTypes;if(!t)return _i;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in t)o[i]=n[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function ki(e){return null!=e.childContextTypes}function Fi(){Ei(Oi),Ei(Di)}function Mi(e,n,t){if(Di.current!==_i)throw Error(o(168));xi(Di,n),xi(Oi,t)}function ji(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var i in r=r.getChildContext())if(!(i in n))throw Error(o(108,V(e)||"Unknown",i));return R({},t,r)}function Ui(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_i,Ii=Di.current,xi(Di,e),xi(Oi,Oi.current),!0}function Ri(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=ji(e,n,Ii),r.__reactInternalMemoizedMergedChildContext=e,Ei(Oi),Ei(Di),xi(Di,e)):Ei(Oi),xi(Oi,t)}var Ti=null,Ni=!1,Wi=!1;function Bi(e){null===Ti?Ti=[e]:Ti.push(e)}function zi(){if(!Wi&&null!==Ti){Wi=!0;var e=0,n=bn;try{var t=Ti;for(bn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Ti=null,Ni=!1}catch(n){throw null!==Ti&&(Ti=Ti.slice(e+1)),Ye(Ke,zi),n}finally{bn=n,Wi=!1}}return null}var Vi=[],Gi=0,Hi=null,Ji=0,Yi=[],Qi=0,Zi=null,$i=1,Xi="";function qi(e,n){Vi[Gi++]=Ji,Vi[Gi++]=Hi,Hi=e,Ji=n}function Ki(e,n,t){Yi[Qi++]=$i,Yi[Qi++]=Xi,Yi[Qi++]=Zi,Zi=e;var r=$i;e=Xi;var i=32-sn(r)-1;r&=~(1<<i),t+=1;var o=32-sn(n)+i;if(30<o){var a=i-i%5;o=(r&(1<<a)-1).toString(32),r>>=a,i-=a,$i=1<<32-sn(n)+i|t<<i|r,Xi=o+e}else $i=1<<o|t<<i|r,Xi=e}function eo(e){null!==e.return&&(qi(e,1),Ki(e,1,0))}function no(e){for(;e===Hi;)Hi=Vi[--Gi],Vi[Gi]=null,Ji=Vi[--Gi],Vi[Gi]=null;for(;e===Zi;)Zi=Yi[--Qi],Yi[Qi]=null,Xi=Yi[--Qi],Yi[Qi]=null,$i=Yi[--Qi],Yi[Qi]=null}var to=null,ro=null,io=!1,oo=null;function ao(e,n){var t=kd(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function so(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,to=e,ro=di(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,to=e,ro=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Zi?{id:$i,overflow:Xi}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=kd(18,null,null,0)).stateNode=n,t.return=e,e.child=t,to=e,ro=null,!0);default:return!1}}function lo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(io){var n=ro;if(n){var t=n;if(!so(e,n)){if(lo(e))throw Error(o(418));n=di(t.nextSibling);var r=to;n&&so(e,n)?ao(r,t):(e.flags=-4097&e.flags|2,io=!1,to=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,io=!1,to=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;to=e}function mo(e){if(e!==to)return!1;if(!io)return uo(e),io=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ti(e.type,e.memoizedProps)),n&&(n=ro)){if(lo(e))throw po(),Error(o(418));for(;n;)ao(e,n),n=di(n.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ro=di(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ro=null}}else ro=to?di(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=di(e.nextSibling)}function fo(){ro=to=null,io=!1}function ho(e){null===oo?oo=[e]:oo.push(e)}var go=b.ReactCurrentBatchConfig;function Co(e,n){if(e&&e.defaultProps){for(var t in n=R({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var Ao=Pi(null),vo=null,bo=null,yo=null;function So(){yo=bo=vo=null}function wo(e){var n=Ao.current;Ei(Ao),e._currentValue=n}function Po(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Eo(e,n){vo=e,yo=bo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(bs=!0),e.firstContext=null)}function xo(e){var n=e._currentValue;if(yo!==e)if(e={context:e,memoizedValue:n,next:null},null===bo){if(null===vo)throw Error(o(308));bo=e,vo.dependencies={lanes:0,firstContext:e}}else bo=bo.next=e;return n}var _o=null;function Do(e){null===_o?_o=[e]:_o.push(e)}function Oo(e,n,t,r){var i=n.interleaved;return null===i?(t.next=t,Do(n)):(t.next=i.next,i.next=t),n.interleaved=t,Io(e,r)}function Io(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Lo=!1;function ko(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fo(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Mo(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function jo(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ol)){var i=r.pending;return null===i?n.next=n:(n.next=i.next,i.next=n),r.pending=n,Io(e,t)}return null===(i=r.interleaved)?(n.next=n,Do(r)):(n.next=i.next,i.next=n),r.interleaved=n,Io(e,t)}function Uo(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}function Ro(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var i=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var a={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?i=o=a:o=o.next=a,t=t.next}while(null!==t);null===o?i=o=n:o=o.next=n}else i=o=n;return t={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function To(e,n,t,r){var i=e.updateQueue;Lo=!1;var o=i.firstBaseUpdate,a=i.lastBaseUpdate,s=i.shared.pending;if(null!==s){i.shared.pending=null;var l=s,d=l.next;l.next=null,null===a?o=d:a.next=d,a=l;var c=e.alternate;null!==c&&(s=(c=c.updateQueue).lastBaseUpdate)!==a&&(null===s?c.firstBaseUpdate=d:s.next=d,c.lastBaseUpdate=l)}if(null!==o){var u=i.baseState;for(a=0,c=d=l=null,s=o;;){var m=s.lane,p=s.eventTime;if((r&m)===m){null!==c&&(c=c.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,h=s;switch(m=n,p=t,h.tag){case 1:if("function"==typeof(f=h.payload)){u=f.call(p,u,m);break e}u=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(m="function"==typeof(f=h.payload)?f.call(p,u,m):f))break e;u=R({},u,m);break e;case 2:Lo=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(m=i.effects)?i.effects=[s]:m.push(s))}else p={eventTime:p,lane:m,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(d=c=p,l=u):c=c.next=p,a|=m;if(null===(s=s.next)){if(null===(s=i.shared.pending))break;s=(m=s).next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}if(null===c&&(l=u),i.baseState=l,i.firstBaseUpdate=d,i.lastBaseUpdate=c,null!==(n=i.shared.interleaved)){i=n;do{a|=i.lane,i=i.next}while(i!==n)}else null===o&&(i.shared.lanes=0);Rl|=a,e.lanes=a,e.memoizedState=u}}function No(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],i=r.callback;if(null!==i){if(r.callback=null,r=t,"function"!=typeof i)throw Error(o(191,i));i.call(r)}}}var Wo=(new r.Component).refs;function Bo(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:R({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var zo={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=nd(),i=td(e),o=Mo(r,i);o.payload=n,null!=t&&(o.callback=t),null!==(n=jo(e,o,i))&&(rd(n,e,i,r),Uo(n,e,i))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=nd(),i=td(e),o=Mo(r,i);o.tag=1,o.payload=n,null!=t&&(o.callback=t),null!==(n=jo(e,o,i))&&(rd(n,e,i,r),Uo(n,e,i))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=nd(),r=td(e),i=Mo(t,r);i.tag=2,null!=n&&(i.callback=n),null!==(n=jo(e,i,r))&&(rd(n,e,r,t),Uo(n,e,r))}};function Vo(e,n,t,r,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!(n.prototype&&n.prototype.isPureReactComponent&&lr(t,r)&&lr(i,o))}function Go(e,n,t){var r=!1,i=_i,o=n.contextType;return"object"==typeof o&&null!==o?o=xo(o):(i=ki(n)?Ii:Di.current,o=(r=null!=(r=n.contextTypes))?Li(e,i):_i),n=new n(t,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=zo,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),n}function Ho(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&zo.enqueueReplaceState(n,n.state,null)}function Jo(e,n,t,r){var i=e.stateNode;i.props=t,i.state=e.memoizedState,i.refs=Wo,ko(e);var o=n.contextType;"object"==typeof o&&null!==o?i.context=xo(o):(o=ki(n)?Ii:Di.current,i.context=Li(e,o)),i.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(Bo(e,n,o,t),i.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(n=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),n!==i.state&&zo.enqueueReplaceState(i,i.state,null),To(e,t,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.flags|=4194308)}function Yo(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var i=r,a=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===a?n.ref:(n=function(e){var n=i.refs;n===Wo&&(n=i.refs={}),null===e?delete n[a]:n[a]=e},n._stringRef=a,n)}if("string"!=typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function Qo(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Zo(e){return(0,e._init)(e._payload)}function $o(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function i(e,n){return(e=Md(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,r){return null===n||6!==n.tag?((n=Td(t,e.mode,r)).return=e,n):((n=i(n,t)).return=e,n)}function d(e,n,t,r){var o=t.type;return o===w?u(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===k&&Zo(o)===n.type)?((r=i(n,t.props)).ref=Yo(e,n,t),r.return=e,r):((r=jd(t.type,t.key,t.props,null,e.mode,r)).ref=Yo(e,n,t),r.return=e,r)}function c(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Nd(t,e.mode,r)).return=e,n):((n=i(n,t.children||[])).return=e,n)}function u(e,n,t,r,o){return null===n||7!==n.tag?((n=Ud(t,e.mode,r,o)).return=e,n):((n=i(n,t)).return=e,n)}function m(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Td(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case y:return(t=jd(n.type,n.key,n.props,null,e.mode,t)).ref=Yo(e,null,n),t.return=e,t;case S:return(n=Nd(n,e.mode,t)).return=e,n;case k:return m(e,(0,n._init)(n._payload),t)}if(ne(n)||j(n))return(n=Ud(n,e.mode,t,null)).return=e,n;Qo(e,n)}return null}function p(e,n,t,r){var i=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==i?null:l(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case y:return t.key===i?d(e,n,t,r):null;case S:return t.key===i?c(e,n,t,r):null;case k:return p(e,n,(i=t._init)(t._payload),r)}if(ne(t)||j(t))return null!==i?null:u(e,n,t,r,null);Qo(e,t)}return null}function f(e,n,t,r,i){if("string"==typeof r&&""!==r||"number"==typeof r)return l(n,e=e.get(t)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case y:return d(n,e=e.get(null===r.key?t:r.key)||null,r,i);case S:return c(n,e=e.get(null===r.key?t:r.key)||null,r,i);case k:return f(e,n,t,(0,r._init)(r._payload),i)}if(ne(r)||j(r))return u(n,e=e.get(t)||null,r,i,null);Qo(n,r)}return null}function h(i,o,s,l){for(var d=null,c=null,u=o,h=o=0,g=null;null!==u&&h<s.length;h++){u.index>h?(g=u,u=null):g=u.sibling;var C=p(i,u,s[h],l);if(null===C){null===u&&(u=g);break}e&&u&&null===C.alternate&&n(i,u),o=a(C,o,h),null===c?d=C:c.sibling=C,c=C,u=g}if(h===s.length)return t(i,u),io&&qi(i,h),d;if(null===u){for(;h<s.length;h++)null!==(u=m(i,s[h],l))&&(o=a(u,o,h),null===c?d=u:c.sibling=u,c=u);return io&&qi(i,h),d}for(u=r(i,u);h<s.length;h++)null!==(g=f(u,i,h,s[h],l))&&(e&&null!==g.alternate&&u.delete(null===g.key?h:g.key),o=a(g,o,h),null===c?d=g:c.sibling=g,c=g);return e&&u.forEach((function(e){return n(i,e)})),io&&qi(i,h),d}function g(i,s,l,d){var c=j(l);if("function"!=typeof c)throw Error(o(150));if(null==(l=c.call(l)))throw Error(o(151));for(var u=c=null,h=s,g=s=0,C=null,A=l.next();null!==h&&!A.done;g++,A=l.next()){h.index>g?(C=h,h=null):C=h.sibling;var v=p(i,h,A.value,d);if(null===v){null===h&&(h=C);break}e&&h&&null===v.alternate&&n(i,h),s=a(v,s,g),null===u?c=v:u.sibling=v,u=v,h=C}if(A.done)return t(i,h),io&&qi(i,g),c;if(null===h){for(;!A.done;g++,A=l.next())null!==(A=m(i,A.value,d))&&(s=a(A,s,g),null===u?c=A:u.sibling=A,u=A);return io&&qi(i,g),c}for(h=r(i,h);!A.done;g++,A=l.next())null!==(A=f(h,i,g,A.value,d))&&(e&&null!==A.alternate&&h.delete(null===A.key?g:A.key),s=a(A,s,g),null===u?c=A:u.sibling=A,u=A);return e&&h.forEach((function(e){return n(i,e)})),io&&qi(i,g),c}return function e(r,o,a,l){if("object"==typeof a&&null!==a&&a.type===w&&null===a.key&&(a=a.props.children),"object"==typeof a&&null!==a){switch(a.$$typeof){case y:e:{for(var d=a.key,c=o;null!==c;){if(c.key===d){if((d=a.type)===w){if(7===c.tag){t(r,c.sibling),(o=i(c,a.props.children)).return=r,r=o;break e}}else if(c.elementType===d||"object"==typeof d&&null!==d&&d.$$typeof===k&&Zo(d)===c.type){t(r,c.sibling),(o=i(c,a.props)).ref=Yo(r,c,a),o.return=r,r=o;break e}t(r,c);break}n(r,c),c=c.sibling}a.type===w?((o=Ud(a.props.children,r.mode,l,a.key)).return=r,r=o):((l=jd(a.type,a.key,a.props,null,r.mode,l)).ref=Yo(r,o,a),l.return=r,r=l)}return s(r);case S:e:{for(c=a.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){t(r,o.sibling),(o=i(o,a.children||[])).return=r,r=o;break e}t(r,o);break}n(r,o),o=o.sibling}(o=Nd(a,r.mode,l)).return=r,r=o}return s(r);case k:return e(r,o,(c=a._init)(a._payload),l)}if(ne(a))return h(r,o,a,l);if(j(a))return g(r,o,a,l);Qo(r,a)}return"string"==typeof a&&""!==a||"number"==typeof a?(a=""+a,null!==o&&6===o.tag?(t(r,o.sibling),(o=i(o,a)).return=r,r=o):(t(r,o),(o=Td(a,r.mode,l)).return=r,r=o),s(r)):t(r,o)}}var Xo=$o(!0),qo=$o(!1),Ko={},ea=Pi(Ko),na=Pi(Ko),ta=Pi(Ko);function ra(e){if(e===Ko)throw Error(o(174));return e}function ia(e,n){switch(xi(ta,n),xi(na,e),xi(ea,Ko),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Ei(ea),xi(ea,n)}function oa(){Ei(ea),Ei(na),Ei(ta)}function aa(e){ra(ta.current);var n=ra(ea.current),t=le(n,e.type);n!==t&&(xi(na,e),xi(ea,t))}function sa(e){na.current===e&&(Ei(ea),Ei(na))}var la=Pi(0);function da(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ca=[];function ua(){for(var e=0;e<ca.length;e++)ca[e]._workInProgressVersionPrimary=null;ca.length=0}var ma=b.ReactCurrentDispatcher,pa=b.ReactCurrentBatchConfig,fa=0,ha=null,ga=null,Ca=null,Aa=!1,va=!1,ba=0,ya=0;function Sa(){throw Error(o(321))}function wa(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!sr(e[t],n[t]))return!1;return!0}function Pa(e,n,t,r,i,a){if(fa=a,ha=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ma.current=null===e||null===e.memoizedState?ss:ls,e=t(r,i),va){a=0;do{if(va=!1,ba=0,25<=a)throw Error(o(301));a+=1,Ca=ga=null,n.updateQueue=null,ma.current=ds,e=t(r,i)}while(va)}if(ma.current=as,n=null!==ga&&null!==ga.next,fa=0,Ca=ga=ha=null,Aa=!1,n)throw Error(o(300));return e}function Ea(){var e=0!==ba;return ba=0,e}function xa(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ca?ha.memoizedState=Ca=e:Ca=Ca.next=e,Ca}function _a(){if(null===ga){var e=ha.alternate;e=null!==e?e.memoizedState:null}else e=ga.next;var n=null===Ca?ha.memoizedState:Ca.next;if(null!==n)Ca=n,ga=e;else{if(null===e)throw Error(o(310));e={memoizedState:(ga=e).memoizedState,baseState:ga.baseState,baseQueue:ga.baseQueue,queue:ga.queue,next:null},null===Ca?ha.memoizedState=Ca=e:Ca=Ca.next=e}return Ca}function Da(e,n){return"function"==typeof n?n(e):n}function Oa(e){var n=_a(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=ga,i=r.baseQueue,a=t.pending;if(null!==a){if(null!==i){var s=i.next;i.next=a.next,a.next=s}r.baseQueue=i=a,t.pending=null}if(null!==i){a=i.next,r=r.baseState;var l=s=null,d=null,c=a;do{var u=c.lane;if((fa&u)===u)null!==d&&(d=d.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var m={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===d?(l=d=m,s=r):d=d.next=m,ha.lanes|=u,Rl|=u}c=c.next}while(null!==c&&c!==a);null===d?s=r:d.next=l,sr(r,n.memoizedState)||(bs=!0),n.memoizedState=r,n.baseState=s,n.baseQueue=d,t.lastRenderedState=r}if(null!==(e=t.interleaved)){i=e;do{a=i.lane,ha.lanes|=a,Rl|=a,i=i.next}while(i!==e)}else null===i&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ia(e){var n=_a(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,i=t.pending,a=n.memoizedState;if(null!==i){t.pending=null;var s=i=i.next;do{a=e(a,s.action),s=s.next}while(s!==i);sr(a,n.memoizedState)||(bs=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function La(){}function ka(e,n){var t=ha,r=_a(),i=n(),a=!sr(r.memoizedState,i);if(a&&(r.memoizedState=i,bs=!0),r=r.queue,Ga(ja.bind(null,t,r,e),[e]),r.getSnapshot!==n||a||null!==Ca&&1&Ca.memoizedState.tag){if(t.flags|=2048,Na(9,Ma.bind(null,t,r,i,n),void 0,null),null===Il)throw Error(o(349));0!=(30&fa)||Fa(t,n,i)}return i}function Fa(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=ha.updateQueue)?(n={lastEffect:null,stores:null},ha.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Ma(e,n,t,r){n.value=t,n.getSnapshot=r,Ua(n)&&Ra(e)}function ja(e,n,t){return t((function(){Ua(n)&&Ra(e)}))}function Ua(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!sr(e,t)}catch(e){return!0}}function Ra(e){var n=Io(e,1);null!==n&&rd(n,e,1,-1)}function Ta(e){var n=xa();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Da,lastRenderedState:e},n.queue=e,e=e.dispatch=ts.bind(null,ha,e),[n.memoizedState,e]}function Na(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=ha.updateQueue)?(n={lastEffect:null,stores:null},ha.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Wa(){return _a().memoizedState}function Ba(e,n,t,r){var i=xa();ha.flags|=e,i.memoizedState=Na(1|n,t,void 0,void 0===r?null:r)}function za(e,n,t,r){var i=_a();r=void 0===r?null:r;var o=void 0;if(null!==ga){var a=ga.memoizedState;if(o=a.destroy,null!==r&&wa(r,a.deps))return void(i.memoizedState=Na(n,t,o,r))}ha.flags|=e,i.memoizedState=Na(1|n,t,o,r)}function Va(e,n){return Ba(8390656,8,e,n)}function Ga(e,n){return za(2048,8,e,n)}function Ha(e,n){return za(4,2,e,n)}function Ja(e,n){return za(4,4,e,n)}function Ya(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Qa(e,n,t){return t=null!=t?t.concat([e]):null,za(4,4,Ya.bind(null,n,e),t)}function Za(){}function $a(e,n){var t=_a();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&wa(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Xa(e,n){var t=_a();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&wa(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function qa(e,n,t){return 0==(21&fa)?(e.baseState&&(e.baseState=!1,bs=!0),e.memoizedState=t):(sr(t,n)||(t=gn(),ha.lanes|=t,Rl|=t,e.baseState=!0),n)}function Ka(e,n){var t=bn;bn=0!==t&&4>t?t:4,e(!0);var r=pa.transition;pa.transition={};try{e(!1),n()}finally{bn=t,pa.transition=r}}function es(){return _a().memoizedState}function ns(e,n,t){var r=td(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},rs(e)?is(n,t):null!==(t=Oo(e,n,t,r))&&(rd(t,e,r,nd()),os(t,n,r))}function ts(e,n,t){var r=td(e),i={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(rs(e))is(n,i);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var a=n.lastRenderedState,s=o(a,t);if(i.hasEagerState=!0,i.eagerState=s,sr(s,a)){var l=n.interleaved;return null===l?(i.next=i,Do(n)):(i.next=l.next,l.next=i),void(n.interleaved=i)}}catch(e){}null!==(t=Oo(e,n,i,r))&&(rd(t,e,r,i=nd()),os(t,n,r))}}function rs(e){var n=e.alternate;return e===ha||null!==n&&n===ha}function is(e,n){va=Aa=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function os(e,n,t){if(0!=(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}var as={readContext:xo,useCallback:Sa,useContext:Sa,useEffect:Sa,useImperativeHandle:Sa,useInsertionEffect:Sa,useLayoutEffect:Sa,useMemo:Sa,useReducer:Sa,useRef:Sa,useState:Sa,useDebugValue:Sa,useDeferredValue:Sa,useTransition:Sa,useMutableSource:Sa,useSyncExternalStore:Sa,useId:Sa,unstable_isNewReconciler:!1},ss={readContext:xo,useCallback:function(e,n){return xa().memoizedState=[e,void 0===n?null:n],e},useContext:xo,useEffect:Va,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ba(4194308,4,Ya.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ba(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ba(4,2,e,n)},useMemo:function(e,n){var t=xa();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=xa();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=ns.bind(null,ha,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},xa().memoizedState=e},useState:Ta,useDebugValue:Za,useDeferredValue:function(e){return xa().memoizedState=e},useTransition:function(){var e=Ta(!1),n=e[0];return e=Ka.bind(null,e[1]),xa().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=ha,i=xa();if(io){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===Il)throw Error(o(349));0!=(30&fa)||Fa(r,n,t)}i.memoizedState=t;var a={value:t,getSnapshot:n};return i.queue=a,Va(ja.bind(null,r,a,e),[e]),r.flags|=2048,Na(9,Ma.bind(null,r,a,t,n),void 0,null),t},useId:function(){var e=xa(),n=Il.identifierPrefix;if(io){var t=Xi;n=":"+n+"R"+(t=($i&~(1<<32-sn($i)-1)).toString(32)+t),0<(t=ba++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=ya++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ls={readContext:xo,useCallback:$a,useContext:xo,useEffect:Ga,useImperativeHandle:Qa,useInsertionEffect:Ha,useLayoutEffect:Ja,useMemo:Xa,useReducer:Oa,useRef:Wa,useState:function(){return Oa(Da)},useDebugValue:Za,useDeferredValue:function(e){return qa(_a(),ga.memoizedState,e)},useTransition:function(){return[Oa(Da)[0],_a().memoizedState]},useMutableSource:La,useSyncExternalStore:ka,useId:es,unstable_isNewReconciler:!1},ds={readContext:xo,useCallback:$a,useContext:xo,useEffect:Ga,useImperativeHandle:Qa,useInsertionEffect:Ha,useLayoutEffect:Ja,useMemo:Xa,useReducer:Ia,useRef:Wa,useState:function(){return Ia(Da)},useDebugValue:Za,useDeferredValue:function(e){var n=_a();return null===ga?n.memoizedState=e:qa(n,ga.memoizedState,e)},useTransition:function(){return[Ia(Da)[0],_a().memoizedState]},useMutableSource:La,useSyncExternalStore:ka,useId:es,unstable_isNewReconciler:!1};function cs(e,n){try{var t="",r=n;do{t+=B(r),r=r.return}while(r);var i=t}catch(e){i="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:i,digest:null}}function us(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function ms(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var ps="function"==typeof WeakMap?WeakMap:Map;function fs(e,n,t){(t=Mo(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Hl||(Hl=!0,Jl=r),ms(0,n)},t}function hs(e,n,t){(t=Mo(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=n.value;t.payload=function(){return r(i)},t.callback=function(){ms(0,n)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){ms(0,n),"function"!=typeof r&&(null===Yl?Yl=new Set([this]):Yl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function gs(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new ps;var i=new Set;r.set(n,i)}else void 0===(i=r.get(n))&&(i=new Set,r.set(n,i));i.has(t)||(i.add(t),e=xd.bind(null,e,n,t),n.then(e,e))}function Cs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function As(e,n,t,r,i){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Mo(-1,1)).tag=2,jo(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var vs=b.ReactCurrentOwner,bs=!1;function ys(e,n,t,r){n.child=null===e?qo(n,null,t,r):Xo(n,e.child,t,r)}function Ss(e,n,t,r,i){t=t.render;var o=n.ref;return Eo(n,i),r=Pa(e,n,t,r,o,i),t=Ea(),null===e||bs?(io&&t&&eo(n),n.flags|=1,ys(e,n,r,i),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~i,Hs(e,n,i))}function ws(e,n,t,r,i){if(null===e){var o=t.type;return"function"!=typeof o||Fd(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=jd(t.type,null,r,n,n.mode,i)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,Ps(e,n,o,r,i))}if(o=e.child,0==(e.lanes&i)){var a=o.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(a,r)&&e.ref===n.ref)return Hs(e,n,i)}return n.flags|=1,(e=Md(o,r)).ref=n.ref,e.return=n,n.child=e}function Ps(e,n,t,r,i){if(null!==e){var o=e.memoizedProps;if(lr(o,r)&&e.ref===n.ref){if(bs=!1,n.pendingProps=r=o,0==(e.lanes&i))return n.lanes=e.lanes,Hs(e,n,i);0!=(131072&e.flags)&&(bs=!0)}}return _s(e,n,t,r,i)}function Es(e,n,t){var r=n.pendingProps,i=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},xi(Ml,Fl),Fl|=t;else{if(0==(1073741824&t))return e=null!==o?o.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,xi(Ml,Fl),Fl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:t,xi(Ml,Fl),Fl|=r}else null!==o?(r=o.baseLanes|t,n.memoizedState=null):r=t,xi(Ml,Fl),Fl|=r;return ys(e,n,i,t),n.child}function xs(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function _s(e,n,t,r,i){var o=ki(t)?Ii:Di.current;return o=Li(n,o),Eo(n,i),t=Pa(e,n,t,r,o,i),r=Ea(),null===e||bs?(io&&r&&eo(n),n.flags|=1,ys(e,n,t,i),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~i,Hs(e,n,i))}function Ds(e,n,t,r,i){if(ki(t)){var o=!0;Ui(n)}else o=!1;if(Eo(n,i),null===n.stateNode)Gs(e,n),Go(n,t,r),Jo(n,t,r,i),r=!0;else if(null===e){var a=n.stateNode,s=n.memoizedProps;a.props=s;var l=a.context,d=t.contextType;d="object"==typeof d&&null!==d?xo(d):Li(n,d=ki(t)?Ii:Di.current);var c=t.getDerivedStateFromProps,u="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;u||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==r||l!==d)&&Ho(n,a,r,d),Lo=!1;var m=n.memoizedState;a.state=m,To(n,r,a,i),l=n.memoizedState,s!==r||m!==l||Oi.current||Lo?("function"==typeof c&&(Bo(n,t,c,r),l=n.memoizedState),(s=Lo||Vo(n,t,s,r,m,l,d))?(u||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.flags|=4194308)):("function"==typeof a.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=l),a.props=r,a.state=l,a.context=d,r=s):("function"==typeof a.componentDidMount&&(n.flags|=4194308),r=!1)}else{a=n.stateNode,Fo(e,n),s=n.memoizedProps,d=n.type===n.elementType?s:Co(n.type,s),a.props=d,u=n.pendingProps,m=a.context,l="object"==typeof(l=t.contextType)&&null!==l?xo(l):Li(n,l=ki(t)?Ii:Di.current);var p=t.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==u||m!==l)&&Ho(n,a,r,l),Lo=!1,m=n.memoizedState,a.state=m,To(n,r,a,i);var f=n.memoizedState;s!==u||m!==f||Oi.current||Lo?("function"==typeof p&&(Bo(n,t,p,r),f=n.memoizedState),(d=Lo||Vo(n,t,d,r,m,f,l)||!1)?(c||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,l),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof a.componentDidUpdate&&(n.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=f),a.props=r,a.state=f,a.context=l,r=d):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=1024),r=!1)}return Os(e,n,t,r,o,i)}function Os(e,n,t,r,i,o){xs(e,n);var a=0!=(128&n.flags);if(!r&&!a)return i&&Ri(n,t,!1),Hs(e,n,o);r=n.stateNode,vs.current=n;var s=a&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&a?(n.child=Xo(n,e.child,null,o),n.child=Xo(n,null,s,o)):ys(e,n,s,o),n.memoizedState=r.state,i&&Ri(n,t,!0),n.child}function Is(e){var n=e.stateNode;n.pendingContext?Mi(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Mi(0,n.context,!1),ia(e,n.containerInfo)}function Ls(e,n,t,r,i){return fo(),ho(i),n.flags|=256,ys(e,n,t,r),n.child}var ks,Fs,Ms,js,Us={dehydrated:null,treeContext:null,retryLane:0};function Rs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ts(e,n,t){var r,i=n.pendingProps,a=la.current,s=!1,l=0!=(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),xi(la,1&a),null===e)return co(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(l=i.children,e=i.fallback,s?(i=n.mode,s=n.child,l={mode:"hidden",children:l},0==(1&i)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Rd(l,i,0,null),e=Ud(e,i,t,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=Rs(t),n.memoizedState=Us,e):Ns(n,l));if(null!==(a=e.memoizedState)&&null!==(r=a.dehydrated))return function(e,n,t,r,i,a,s){if(t)return 256&n.flags?(n.flags&=-257,Ws(e,n,s,r=us(Error(o(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(a=r.fallback,i=n.mode,r=Rd({mode:"visible",children:r.children},i,0,null),(a=Ud(a,i,s,null)).flags|=2,r.return=n,a.return=n,r.sibling=a,n.child=r,0!=(1&n.mode)&&Xo(n,e.child,null,s),n.child.memoizedState=Rs(s),n.memoizedState=Us,a);if(0==(1&n.mode))return Ws(e,n,s,null);if("$!"===i.data){if(r=i.nextSibling&&i.nextSibling.dataset)var l=r.dgst;return r=l,Ws(e,n,s,r=us(a=Error(o(419)),r,void 0))}if(l=0!=(s&e.childLanes),bs||l){if(null!==(r=Il)){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}0!==(i=0!=(i&(r.suspendedLanes|s))?0:i)&&i!==a.retryLane&&(a.retryLane=i,Io(e,i),rd(r,e,i,-1))}return gd(),Ws(e,n,s,r=us(Error(o(421))))}return"$?"===i.data?(n.flags|=128,n.child=e.child,n=Dd.bind(null,e),i._reactRetry=n,null):(e=a.treeContext,ro=di(i.nextSibling),to=n,io=!0,oo=null,null!==e&&(Yi[Qi++]=$i,Yi[Qi++]=Xi,Yi[Qi++]=Zi,$i=e.id,Xi=e.overflow,Zi=n),(n=Ns(n,r.children)).flags|=4096,n)}(e,n,l,i,r,a,t);if(s){s=i.fallback,l=n.mode,r=(a=e.child).sibling;var d={mode:"hidden",children:i.children};return 0==(1&l)&&n.child!==a?((i=n.child).childLanes=0,i.pendingProps=d,n.deletions=null):(i=Md(a,d)).subtreeFlags=14680064&a.subtreeFlags,null!==r?s=Md(r,s):(s=Ud(s,l,t,null)).flags|=2,s.return=n,i.return=n,i.sibling=s,n.child=i,i=s,s=n.child,l=null===(l=e.child.memoizedState)?Rs(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~t,n.memoizedState=Us,i}return e=(s=e.child).sibling,i=Md(s,{mode:"visible",children:i.children}),0==(1&n.mode)&&(i.lanes=t),i.return=n,i.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=i,n.memoizedState=null,i}function Ns(e,n){return(n=Rd({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ws(e,n,t,r){return null!==r&&ho(r),Xo(n,e.child,null,t),(e=Ns(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Bs(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Po(e.return,n,t)}function zs(e,n,t,r,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:i}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=i)}function Vs(e,n,t){var r=n.pendingProps,i=r.revealOrder,o=r.tail;if(ys(e,n,r.children,t),0!=(2&(r=la.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bs(e,t,n);else if(19===e.tag)Bs(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(xi(la,r),0==(1&n.mode))n.memoizedState=null;else switch(i){case"forwards":for(t=n.child,i=null;null!==t;)null!==(e=t.alternate)&&null===da(e)&&(i=t),t=t.sibling;null===(t=i)?(i=n.child,n.child=null):(i=t.sibling,t.sibling=null),zs(n,!1,i,t,o);break;case"backwards":for(t=null,i=n.child,n.child=null;null!==i;){if(null!==(e=i.alternate)&&null===da(e)){n.child=i;break}e=i.sibling,i.sibling=t,t=i,i=e}zs(n,!0,t,null,o);break;case"together":zs(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Gs(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Hs(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Rl|=n.lanes,0==(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Md(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Md(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Js(e,n){if(!io)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ys(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var i=e.child;null!==i;)t|=i.lanes|i.childLanes,r|=14680064&i.subtreeFlags,r|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)t|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Qs(e,n,t){var r=n.pendingProps;switch(no(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ys(n),null;case 1:case 17:return ki(n.type)&&Fi(),Ys(n),null;case 3:return r=n.stateNode,oa(),Ei(Oi),Ei(Di),ua(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(mo(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==oo&&(sd(oo),oo=null))),Fs(e,n),Ys(n),null;case 5:sa(n);var i=ra(ta.current);if(t=n.type,null!==e&&null!=n.stateNode)Ms(e,n,t,r,i),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(o(166));return Ys(n),null}if(e=ra(ea.current),mo(n)){r=n.stateNode,t=n.type;var a=n.memoizedProps;switch(r[mi]=n,r[pi]=a,e=0!=(1&n.mode),t){case"dialog":Nr("cancel",r),Nr("close",r);break;case"iframe":case"object":case"embed":Nr("load",r);break;case"video":case"audio":for(i=0;i<jr.length;i++)Nr(jr[i],r);break;case"source":Nr("error",r);break;case"img":case"image":case"link":Nr("error",r),Nr("load",r);break;case"details":Nr("toggle",r);break;case"input":$(r,a),Nr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Nr("invalid",r);break;case"textarea":ie(r,a),Nr("invalid",r)}for(var l in Ae(t,a),i=null,a)if(a.hasOwnProperty(l)){var d=a[l];"children"===l?"string"==typeof d?r.textContent!==d&&(!0!==a.suppressHydrationWarning&&qr(r.textContent,d,e),i=["children",d]):"number"==typeof d&&r.textContent!==""+d&&(!0!==a.suppressHydrationWarning&&qr(r.textContent,d,e),i=["children",""+d]):s.hasOwnProperty(l)&&null!=d&&"onScroll"===l&&Nr("scroll",r)}switch(t){case"input":J(r),K(r,a,!0);break;case"textarea":J(r),ae(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=Kr)}r=i,n.updateQueue=r,null!==r&&(n.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(t,{is:r.is}):(e=l.createElement(t),"select"===t&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,t),e[mi]=n,e[pi]=r,ks(e,n,!1,!1),n.stateNode=e;e:{switch(l=ve(t,r),t){case"dialog":Nr("cancel",e),Nr("close",e),i=r;break;case"iframe":case"object":case"embed":Nr("load",e),i=r;break;case"video":case"audio":for(i=0;i<jr.length;i++)Nr(jr[i],e);i=r;break;case"source":Nr("error",e),i=r;break;case"img":case"image":case"link":Nr("error",e),Nr("load",e),i=r;break;case"details":Nr("toggle",e),i=r;break;case"input":$(e,r),i=Z(e,r),Nr("invalid",e);break;case"option":default:i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=R({},r,{value:void 0}),Nr("invalid",e);break;case"textarea":ie(e,r),i=re(e,r),Nr("invalid",e)}for(a in Ae(t,i),d=i)if(d.hasOwnProperty(a)){var c=d[a];"style"===a?ge(e,c):"dangerouslySetInnerHTML"===a?null!=(c=c?c.__html:void 0)&&ue(e,c):"children"===a?"string"==typeof c?("textarea"!==t||""!==c)&&me(e,c):"number"==typeof c&&me(e,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(s.hasOwnProperty(a)?null!=c&&"onScroll"===a&&Nr("scroll",e):null!=c&&v(e,a,c,l))}switch(t){case"input":J(e),K(e,r,!1);break;case"textarea":J(e),ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(a=r.value)?te(e,!!r.multiple,a,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Kr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Ys(n),null;case 6:if(e&&null!=n.stateNode)js(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(o(166));if(t=ra(ta.current),ra(ea.current),mo(n)){if(r=n.stateNode,t=n.memoizedProps,r[mi]=n,(a=r.nodeValue!==t)&&null!==(e=to))switch(e.tag){case 3:qr(r.nodeValue,t,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&qr(r.nodeValue,t,0!=(1&e.mode))}a&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[mi]=n,n.stateNode=r}return Ys(n),null;case 13:if(Ei(la),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(io&&null!==ro&&0!=(1&n.mode)&&0==(128&n.flags))po(),fo(),n.flags|=98560,a=!1;else if(a=mo(n),null!==r&&null!==r.dehydrated){if(null===e){if(!a)throw Error(o(318));if(!(a=null!==(a=n.memoizedState)?a.dehydrated:null))throw Error(o(317));a[mi]=n}else fo(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Ys(n),a=!1}else null!==oo&&(sd(oo),oo=null),a=!0;if(!a)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&la.current)?0===jl&&(jl=3):gd())),null!==n.updateQueue&&(n.flags|=4),Ys(n),null);case 4:return oa(),Fs(e,n),null===e&&zr(n.stateNode.containerInfo),Ys(n),null;case 10:return wo(n.type._context),Ys(n),null;case 19:if(Ei(la),null===(a=n.memoizedState))return Ys(n),null;if(r=0!=(128&n.flags),null===(l=a.rendering))if(r)Js(a,!1);else{if(0!==jl||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(l=da(e))){for(n.flags|=128,Js(a,!1),null!==(r=l.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(a=t).flags&=14680066,null===(l=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return xi(la,1&la.current|2),n.child}e=e.sibling}null!==a.tail&&Xe()>Vl&&(n.flags|=128,r=!0,Js(a,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=da(l))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Js(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!io)return Ys(n),null}else 2*Xe()-a.renderingStartTime>Vl&&1073741824!==t&&(n.flags|=128,r=!0,Js(a,!1),n.lanes=4194304);a.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=a.last)?t.sibling=l:n.child=l,a.last=l)}return null!==a.tail?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.renderingStartTime=Xe(),n.sibling=null,t=la.current,xi(la,r?1&t|2:1&t),n):(Ys(n),null);case 22:case 23:return md(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!=(1&n.mode)?0!=(1073741824&Fl)&&(Ys(n),6&n.subtreeFlags&&(n.flags|=8192)):Ys(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}function Zs(e,n){switch(no(n),n.tag){case 1:return ki(n.type)&&Fi(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return oa(),Ei(Oi),Ei(Di),ua(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return sa(n),null;case 13:if(Ei(la),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));fo()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Ei(la),null;case 4:return oa(),null;case 10:return wo(n.type._context),null;case 22:case 23:return md(),null;default:return null}}ks=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Fs=function(){},Ms=function(e,n,t,r){var i=e.memoizedProps;if(i!==r){e=n.stateNode,ra(ea.current);var o,a=null;switch(t){case"input":i=Z(e,i),r=Z(e,r),a=[];break;case"select":i=R({},i,{value:void 0}),r=R({},r,{value:void 0}),a=[];break;case"textarea":i=re(e,i),r=re(e,r),a=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Kr)}for(c in Ae(t,r),t=null,i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&null!=i[c])if("style"===c){var l=i[c];for(o in l)l.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in r){var d=r[c];if(l=null!=i?i[c]:void 0,r.hasOwnProperty(c)&&d!==l&&(null!=d||null!=l))if("style"===c)if(l){for(o in l)!l.hasOwnProperty(o)||d&&d.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in d)d.hasOwnProperty(o)&&l[o]!==d[o]&&(t||(t={}),t[o]=d[o])}else t||(a||(a=[]),a.push(c,t)),t=d;else"dangerouslySetInnerHTML"===c?(d=d?d.__html:void 0,l=l?l.__html:void 0,null!=d&&l!==d&&(a=a||[]).push(c,d)):"children"===c?"string"!=typeof d&&"number"!=typeof d||(a=a||[]).push(c,""+d):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=d&&"onScroll"===c&&Nr("scroll",e),a||l===d||(a=[])):(a=a||[]).push(c,d))}t&&(a=a||[]).push("style",t);var c=a;(n.updateQueue=c)&&(n.flags|=4)}},js=function(e,n,t,r){t!==r&&(n.flags|=4)};var $s=!1,Xs=!1,qs="function"==typeof WeakSet?WeakSet:Set,Ks=null;function el(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ed(e,n,t)}else t.current=null}function nl(e,n,t){try{t()}catch(t){Ed(e,n,t)}}var tl=!1;function rl(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var i=r=r.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,void 0!==o&&nl(n,t,o)}i=i.next}while(i!==r)}}function il(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function ol(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function al(e){var n=e.alternate;null!==n&&(e.alternate=null,al(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[mi],delete n[pi],delete n[hi],delete n[gi],delete n[Ci]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function dl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Kr));else if(4!==r&&null!==(e=e.child))for(dl(e,n,t),e=e.sibling;null!==e;)dl(e,n,t),e=e.sibling}function cl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,n,t),e=e.sibling;null!==e;)cl(e,n,t),e=e.sibling}var ul=null,ml=!1;function pl(e,n,t){for(t=t.child;null!==t;)fl(e,n,t),t=t.sibling}function fl(e,n,t){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,t)}catch(e){}switch(t.tag){case 5:Xs||el(t,n);case 6:var r=ul,i=ml;ul=null,pl(e,n,t),ml=i,null!==(ul=r)&&(ml?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(ml?(e=ul,t=t.stateNode,8===e.nodeType?li(e.parentNode,t):1===e.nodeType&&li(e,t),Vn(e)):li(ul,t.stateNode));break;case 4:r=ul,i=ml,ul=t.stateNode.containerInfo,ml=!0,pl(e,n,t),ul=r,ml=i;break;case 0:case 11:case 14:case 15:if(!Xs&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){i=r=r.next;do{var o=i,a=o.destroy;o=o.tag,void 0!==a&&(0!=(2&o)||0!=(4&o))&&nl(t,n,a),i=i.next}while(i!==r)}pl(e,n,t);break;case 1:if(!Xs&&(el(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){Ed(t,n,e)}pl(e,n,t);break;case 21:pl(e,n,t);break;case 22:1&t.mode?(Xs=(r=Xs)||null!==t.memoizedState,pl(e,n,t),Xs=r):pl(e,n,t);break;default:pl(e,n,t)}}function hl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new qs),n.forEach((function(n){var r=Od.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function gl(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var i=t[r];try{var a=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,ml=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,ml=!0;break e}l=l.return}if(null===ul)throw Error(o(160));fl(a,s,i),ul=null,ml=!1;var d=i.alternate;null!==d&&(d.return=null),i.return=null}catch(e){Ed(i,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)Cl(n,e),n=n.sibling}function Cl(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gl(n,e),Al(e),4&r){try{rl(3,e,e.return),il(3,e)}catch(n){Ed(e,e.return,n)}try{rl(5,e,e.return)}catch(n){Ed(e,e.return,n)}}break;case 1:gl(n,e),Al(e),512&r&&null!==t&&el(t,t.return);break;case 5:if(gl(n,e),Al(e),512&r&&null!==t&&el(t,t.return),32&e.flags){var i=e.stateNode;try{me(i,"")}catch(n){Ed(e,e.return,n)}}if(4&r&&null!=(i=e.stateNode)){var a=e.memoizedProps,s=null!==t?t.memoizedProps:a,l=e.type,d=e.updateQueue;if(e.updateQueue=null,null!==d)try{"input"===l&&"radio"===a.type&&null!=a.name&&X(i,a),ve(l,s);var c=ve(l,a);for(s=0;s<d.length;s+=2){var u=d[s],m=d[s+1];"style"===u?ge(i,m):"dangerouslySetInnerHTML"===u?ue(i,m):"children"===u?me(i,m):v(i,u,m,c)}switch(l){case"input":q(i,a);break;case"textarea":oe(i,a);break;case"select":var p=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!a.multiple;var f=a.value;null!=f?te(i,!!a.multiple,f,!1):p!==!!a.multiple&&(null!=a.defaultValue?te(i,!!a.multiple,a.defaultValue,!0):te(i,!!a.multiple,a.multiple?[]:"",!1))}i[pi]=a}catch(n){Ed(e,e.return,n)}}break;case 6:if(gl(n,e),Al(e),4&r){if(null===e.stateNode)throw Error(o(162));i=e.stateNode,a=e.memoizedProps;try{i.nodeValue=a}catch(n){Ed(e,e.return,n)}}break;case 3:if(gl(n,e),Al(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Vn(n.containerInfo)}catch(n){Ed(e,e.return,n)}break;case 4:default:gl(n,e),Al(e);break;case 13:gl(n,e),Al(e),8192&(i=e.child).flags&&(a=null!==i.memoizedState,i.stateNode.isHidden=a,!a||null!==i.alternate&&null!==i.alternate.memoizedState||(zl=Xe())),4&r&&hl(e);break;case 22:if(u=null!==t&&null!==t.memoizedState,1&e.mode?(Xs=(c=Xs)||u,gl(n,e),Xs=c):gl(n,e),Al(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!u&&0!=(1&e.mode))for(Ks=e,u=e.child;null!==u;){for(m=Ks=u;null!==Ks;){switch(f=(p=Ks).child,p.tag){case 0:case 11:case 14:case 15:rl(4,p,p.return);break;case 1:el(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,t=p.return;try{n=r,h.props=n.memoizedProps,h.state=n.memoizedState,h.componentWillUnmount()}catch(e){Ed(r,t,e)}}break;case 5:el(p,p.return);break;case 22:if(null!==p.memoizedState){Sl(m);continue}}null!==f?(f.return=p,Ks=f):Sl(m)}u=u.sibling}e:for(u=null,m=e;;){if(5===m.tag){if(null===u){u=m;try{i=m.stateNode,c?"function"==typeof(a=i.style).setProperty?a.setProperty("display","none","important"):a.display="none":(l=m.stateNode,s=null!=(d=m.memoizedProps.style)&&d.hasOwnProperty("display")?d.display:null,l.style.display=he("display",s))}catch(n){Ed(e,e.return,n)}}}else if(6===m.tag){if(null===u)try{m.stateNode.nodeValue=c?"":m.memoizedProps}catch(n){Ed(e,e.return,n)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===e)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===e)break e;for(;null===m.sibling;){if(null===m.return||m.return===e)break e;u===m&&(u=null),m=m.return}u===m&&(u=null),m.sibling.return=m.return,m=m.sibling}}break;case 19:gl(n,e),Al(e),4&r&&hl(e);case 21:}}function Al(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(sl(t)){var r=t;break e}t=t.return}throw Error(o(160))}switch(r.tag){case 5:var i=r.stateNode;32&r.flags&&(me(i,""),r.flags&=-33),cl(e,ll(e),i);break;case 3:case 4:var a=r.stateNode.containerInfo;dl(e,ll(e),a);break;default:throw Error(o(161))}}catch(n){Ed(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,t){Ks=e,bl(e,n,t)}function bl(e,n,t){for(var r=0!=(1&e.mode);null!==Ks;){var i=Ks,o=i.child;if(22===i.tag&&r){var a=null!==i.memoizedState||$s;if(!a){var s=i.alternate,l=null!==s&&null!==s.memoizedState||Xs;s=$s;var d=Xs;if($s=a,(Xs=l)&&!d)for(Ks=i;null!==Ks;)l=(a=Ks).child,22===a.tag&&null!==a.memoizedState?wl(i):null!==l?(l.return=a,Ks=l):wl(i);for(;null!==o;)Ks=o,bl(o,n,t),o=o.sibling;Ks=i,$s=s,Xs=d}yl(e)}else 0!=(8772&i.subtreeFlags)&&null!==o?(o.return=i,Ks=o):yl(e)}}function yl(e){for(;null!==Ks;){var n=Ks;if(0!=(8772&n.flags)){var t=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Xs||il(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Xs)if(null===t)r.componentDidMount();else{var i=n.elementType===n.type?t.memoizedProps:Co(n.type,t.memoizedProps);r.componentDidUpdate(i,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=n.updateQueue;null!==a&&No(n,a,r);break;case 3:var s=n.updateQueue;if(null!==s){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}No(n,s,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var d=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":d.autoFocus&&t.focus();break;case"img":d.src&&(t.src=d.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var c=n.alternate;if(null!==c){var u=c.memoizedState;if(null!==u){var m=u.dehydrated;null!==m&&Vn(m)}}}break;default:throw Error(o(163))}Xs||512&n.flags&&ol(n)}catch(e){Ed(n,n.return,e)}}if(n===e){Ks=null;break}if(null!==(t=n.sibling)){t.return=n.return,Ks=t;break}Ks=n.return}}function Sl(e){for(;null!==Ks;){var n=Ks;if(n===e){Ks=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Ks=t;break}Ks=n.return}}function wl(e){for(;null!==Ks;){var n=Ks;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{il(4,n)}catch(e){Ed(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var i=n.return;try{r.componentDidMount()}catch(e){Ed(n,i,e)}}var o=n.return;try{ol(n)}catch(e){Ed(n,o,e)}break;case 5:var a=n.return;try{ol(n)}catch(e){Ed(n,a,e)}}}catch(e){Ed(n,n.return,e)}if(n===e){Ks=null;break}var s=n.sibling;if(null!==s){s.return=n.return,Ks=s;break}Ks=n.return}}var Pl,El=Math.ceil,xl=b.ReactCurrentDispatcher,_l=b.ReactCurrentOwner,Dl=b.ReactCurrentBatchConfig,Ol=0,Il=null,Ll=null,kl=0,Fl=0,Ml=Pi(0),jl=0,Ul=null,Rl=0,Tl=0,Nl=0,Wl=null,Bl=null,zl=0,Vl=1/0,Gl=null,Hl=!1,Jl=null,Yl=null,Ql=!1,Zl=null,$l=0,Xl=0,ql=null,Kl=-1,ed=0;function nd(){return 0!=(6&Ol)?Xe():-1!==Kl?Kl:Kl=Xe()}function td(e){return 0==(1&e.mode)?1:0!=(2&Ol)&&0!==kl?kl&-kl:null!==go.transition?(0===ed&&(ed=gn()),ed):0!==(e=bn)?e:e=void 0===(e=window.event)?16:Xn(e.type)}function rd(e,n,t,r){if(50<Xl)throw Xl=0,ql=null,Error(o(185));An(e,t,r),0!=(2&Ol)&&e===Il||(e===Il&&(0==(2&Ol)&&(Tl|=t),4===jl&&ld(e,kl)),id(e,r),1===t&&0===Ol&&0==(1&n.mode)&&(Vl=Xe()+500,Ni&&zi()))}function id(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var a=31-sn(o),s=1<<a,l=i[a];-1===l?0!=(s&t)&&0==(s&r)||(i[a]=fn(s,n)):l<=n&&(e.expiredLanes|=s),o&=~s}}(e,n);var r=pn(e,e===Il?kl:0);if(0===r)null!==t&&Qe(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Qe(t),1===n)0===e.tag?function(e){Ni=!0,Bi(e)}(dd.bind(null,e)):Bi(dd.bind(null,e)),ai((function(){0==(6&Ol)&&zi()})),t=null;else{switch(yn(r)){case 1:t=Ke;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=Id(t,od.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function od(e,n){if(Kl=-1,ed=0,0!=(6&Ol))throw Error(o(327));var t=e.callbackNode;if(wd()&&e.callbackNode!==t)return null;var r=pn(e,e===Il?kl:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||n)n=Cd(e,r);else{n=r;var i=Ol;Ol|=2;var a=hd();for(Il===e&&kl===n||(Gl=null,Vl=Xe()+500,pd(e,n));;)try{vd();break}catch(n){fd(e,n)}So(),xl.current=a,Ol=i,null!==Ll?n=0:(Il=null,kl=0,n=jl)}if(0!==n){if(2===n&&0!==(i=hn(e))&&(r=i,n=ad(e,i)),1===n)throw t=Ul,pd(e,0),ld(e,r),id(e,Xe()),t;if(6===n)ld(e,r);else{if(i=e.current.alternate,0==(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var i=t[r],o=i.getSnapshot;i=i.value;try{if(!sr(o(),i))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(i)&&(2===(n=Cd(e,r))&&0!==(a=hn(e))&&(r=a,n=ad(e,a)),1===n))throw t=Ul,pd(e,0),ld(e,r),id(e,Xe()),t;switch(e.finishedWork=i,e.finishedLanes=r,n){case 0:case 1:throw Error(o(345));case 2:case 5:Sd(e,Bl,Gl);break;case 3:if(ld(e,r),(130023424&r)===r&&10<(n=zl+500-Xe())){if(0!==pn(e,0))break;if(((i=e.suspendedLanes)&r)!==r){nd(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=ri(Sd.bind(null,e,Bl,Gl),n);break}Sd(e,Bl,Gl);break;case 4:if(ld(e,r),(4194240&r)===r)break;for(n=e.eventTimes,i=-1;0<r;){var s=31-sn(r);a=1<<s,(s=n[s])>i&&(i=s),r&=~a}if(r=i,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*El(r/1960))-r)){e.timeoutHandle=ri(Sd.bind(null,e,Bl,Gl),r);break}Sd(e,Bl,Gl);break;default:throw Error(o(329))}}}return id(e,Xe()),e.callbackNode===t?od.bind(null,e):null}function ad(e,n){var t=Wl;return e.current.memoizedState.isDehydrated&&(pd(e,n).flags|=256),2!==(e=Cd(e,n))&&(n=Bl,Bl=t,null!==n&&sd(n)),e}function sd(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function ld(e,n){for(n&=~Nl,n&=~Tl,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-sn(n),r=1<<t;e[t]=-1,n&=~r}}function dd(e){if(0!=(6&Ol))throw Error(o(327));wd();var n=pn(e,0);if(0==(1&n))return id(e,Xe()),null;var t=Cd(e,n);if(0!==e.tag&&2===t){var r=hn(e);0!==r&&(n=r,t=ad(e,r))}if(1===t)throw t=Ul,pd(e,0),ld(e,n),id(e,Xe()),t;if(6===t)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,Sd(e,Bl,Gl),id(e,Xe()),null}function cd(e,n){var t=Ol;Ol|=1;try{return e(n)}finally{0===(Ol=t)&&(Vl=Xe()+500,Ni&&zi())}}function ud(e){null!==Zl&&0===Zl.tag&&0==(6&Ol)&&wd();var n=Ol;Ol|=1;var t=Dl.transition,r=bn;try{if(Dl.transition=null,bn=1,e)return e()}finally{bn=r,Dl.transition=t,0==(6&(Ol=n))&&zi()}}function md(){Fl=Ml.current,Ei(Ml)}function pd(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,ii(t)),null!==Ll)for(t=Ll.return;null!==t;){var r=t;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Fi();break;case 3:oa(),Ei(Oi),Ei(Di),ua();break;case 5:sa(r);break;case 4:oa();break;case 13:case 19:Ei(la);break;case 10:wo(r.type._context);break;case 22:case 23:md()}t=t.return}if(Il=e,Ll=e=Md(e.current,null),kl=Fl=n,jl=0,Ul=null,Nl=Tl=Rl=0,Bl=Wl=null,null!==_o){for(n=0;n<_o.length;n++)if(null!==(r=(t=_o[n]).interleaved)){t.interleaved=null;var i=r.next,o=t.pending;if(null!==o){var a=o.next;o.next=i,r.next=a}t.pending=r}_o=null}return e}function fd(e,n){for(;;){var t=Ll;try{if(So(),ma.current=as,Aa){for(var r=ha.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}Aa=!1}if(fa=0,Ca=ga=ha=null,va=!1,ba=0,_l.current=null,null===t||null===t.return){jl=1,Ul=n,Ll=null;break}e:{var a=e,s=t.return,l=t,d=n;if(n=kl,l.flags|=32768,null!==d&&"object"==typeof d&&"function"==typeof d.then){var c=d,u=l,m=u.tag;if(0==(1&u.mode)&&(0===m||11===m||15===m)){var p=u.alternate;p?(u.updateQueue=p.updateQueue,u.memoizedState=p.memoizedState,u.lanes=p.lanes):(u.updateQueue=null,u.memoizedState=null)}var f=Cs(s);if(null!==f){f.flags&=-257,As(f,s,l,0,n),1&f.mode&&gs(a,c,n),d=c;var h=(n=f).updateQueue;if(null===h){var g=new Set;g.add(d),n.updateQueue=g}else h.add(d);break e}if(0==(1&n)){gs(a,c,n),gd();break e}d=Error(o(426))}else if(io&&1&l.mode){var C=Cs(s);if(null!==C){0==(65536&C.flags)&&(C.flags|=256),As(C,s,l,0,n),ho(cs(d,l));break e}}a=d=cs(d,l),4!==jl&&(jl=2),null===Wl?Wl=[a]:Wl.push(a),a=s;do{switch(a.tag){case 3:a.flags|=65536,n&=-n,a.lanes|=n,Ro(a,fs(0,d,n));break e;case 1:l=d;var A=a.type,v=a.stateNode;if(0==(128&a.flags)&&("function"==typeof A.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===Yl||!Yl.has(v)))){a.flags|=65536,n&=-n,a.lanes|=n,Ro(a,hs(a,l,n));break e}}a=a.return}while(null!==a)}yd(t)}catch(e){n=e,Ll===t&&null!==t&&(Ll=t=t.return);continue}break}}function hd(){var e=xl.current;return xl.current=as,null===e?as:e}function gd(){0!==jl&&3!==jl&&2!==jl||(jl=4),null===Il||0==(268435455&Rl)&&0==(268435455&Tl)||ld(Il,kl)}function Cd(e,n){var t=Ol;Ol|=2;var r=hd();for(Il===e&&kl===n||(Gl=null,pd(e,n));;)try{Ad();break}catch(n){fd(e,n)}if(So(),Ol=t,xl.current=r,null!==Ll)throw Error(o(261));return Il=null,kl=0,jl}function Ad(){for(;null!==Ll;)bd(Ll)}function vd(){for(;null!==Ll&&!Ze();)bd(Ll)}function bd(e){var n=Pl(e.alternate,e,Fl);e.memoizedProps=e.pendingProps,null===n?yd(e):Ll=n,_l.current=null}function yd(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(t=Qs(t,n,Fl)))return void(Ll=t)}else{if(null!==(t=Zs(t,n)))return t.flags&=32767,void(Ll=t);if(null===e)return jl=6,void(Ll=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Ll=n);Ll=n=e}while(null!==n);0===jl&&(jl=5)}function Sd(e,n,t){var r=bn,i=Dl.transition;try{Dl.transition=null,bn=1,function(e,n,t,r){do{wd()}while(null!==Zl);if(0!=(6&Ol))throw Error(o(327));t=e.finishedWork;var i=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var a=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var i=31-sn(t),o=1<<i;n[i]=0,r[i]=-1,e[i]=-1,t&=~o}}(e,a),e===Il&&(Ll=Il=null,kl=0),0==(2064&t.subtreeFlags)&&0==(2064&t.flags)||Ql||(Ql=!0,Id(nn,(function(){return wd(),null}))),a=0!=(15990&t.flags),0!=(15990&t.subtreeFlags)||a){a=Dl.transition,Dl.transition=null;var s=bn;bn=1;var l=Ol;Ol|=4,_l.current=null,function(e,n){if(ei=Hn,pr(e=mr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var i=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{t.nodeType,a.nodeType}catch(e){t=null;break e}var s=0,l=-1,d=-1,c=0,u=0,m=e,p=null;n:for(;;){for(var f;m!==t||0!==i&&3!==m.nodeType||(l=s+i),m!==a||0!==r&&3!==m.nodeType||(d=s+r),3===m.nodeType&&(s+=m.nodeValue.length),null!==(f=m.firstChild);)p=m,m=f;for(;;){if(m===e)break n;if(p===t&&++c===i&&(l=s),p===a&&++u===r&&(d=s),null!==(f=m.nextSibling))break;p=(m=p).parentNode}m=f}t=-1===l||-1===d?null:{start:l,end:d}}else t=null}t=t||{start:0,end:0}}else t=null;for(ni={focusedElem:e,selectionRange:t},Hn=!1,Ks=n;null!==Ks;)if(e=(n=Ks).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,Ks=e;else for(;null!==Ks;){n=Ks;try{var h=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,C=h.memoizedState,A=n.stateNode,v=A.getSnapshotBeforeUpdate(n.elementType===n.type?g:Co(n.type,g),C);A.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var b=n.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(o(163))}}catch(e){Ed(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Ks=e;break}Ks=n.return}h=tl,tl=!1}(e,t),Cl(t,e),fr(ni),Hn=!!ei,ni=ei=null,e.current=t,vl(t,e,i),$e(),Ol=l,bn=s,Dl.transition=a}else e.current=t;if(Ql&&(Ql=!1,Zl=e,$l=i),0===(a=e.pendingLanes)&&(Yl=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,128==(128&e.current.flags))}catch(e){}}(t.stateNode),id(e,Xe()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((i=n[t]).value,{componentStack:i.stack,digest:i.digest});if(Hl)throw Hl=!1,e=Jl,Jl=null,e;0!=(1&$l)&&0!==e.tag&&wd(),0!=(1&(a=e.pendingLanes))?e===ql?Xl++:(Xl=0,ql=e):Xl=0,zi()}(e,n,t,r)}finally{Dl.transition=i,bn=r}return null}function wd(){if(null!==Zl){var e=yn($l),n=Dl.transition,t=bn;try{if(Dl.transition=null,bn=16>e?16:e,null===Zl)var r=!1;else{if(e=Zl,Zl=null,$l=0,0!=(6&Ol))throw Error(o(331));var i=Ol;for(Ol|=4,Ks=e.current;null!==Ks;){var a=Ks,s=a.child;if(0!=(16&Ks.flags)){var l=a.deletions;if(null!==l){for(var d=0;d<l.length;d++){var c=l[d];for(Ks=c;null!==Ks;){var u=Ks;switch(u.tag){case 0:case 11:case 15:rl(8,u,a)}var m=u.child;if(null!==m)m.return=u,Ks=m;else for(;null!==Ks;){var p=(u=Ks).sibling,f=u.return;if(al(u),u===c){Ks=null;break}if(null!==p){p.return=f,Ks=p;break}Ks=f}}}var h=a.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var C=g.sibling;g.sibling=null,g=C}while(null!==g)}}Ks=a}}if(0!=(2064&a.subtreeFlags)&&null!==s)s.return=a,Ks=s;else e:for(;null!==Ks;){if(0!=(2048&(a=Ks).flags))switch(a.tag){case 0:case 11:case 15:rl(9,a,a.return)}var A=a.sibling;if(null!==A){A.return=a.return,Ks=A;break e}Ks=a.return}}var v=e.current;for(Ks=v;null!==Ks;){var b=(s=Ks).child;if(0!=(2064&s.subtreeFlags)&&null!==b)b.return=s,Ks=b;else e:for(s=v;null!==Ks;){if(0!=(2048&(l=Ks).flags))try{switch(l.tag){case 0:case 11:case 15:il(9,l)}}catch(e){Ed(l,l.return,e)}if(l===s){Ks=null;break e}var y=l.sibling;if(null!==y){y.return=l.return,Ks=y;break e}Ks=l.return}}if(Ol=i,zi(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(e){}r=!0}return r}finally{bn=t,Dl.transition=n}}return!1}function Pd(e,n,t){e=jo(e,n=fs(0,n=cs(t,n),1),1),n=nd(),null!==e&&(An(e,1,n),id(e,n))}function Ed(e,n,t){if(3===e.tag)Pd(e,e,t);else for(;null!==n;){if(3===n.tag){Pd(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yl||!Yl.has(r))){n=jo(n,e=hs(n,e=cs(t,e),1),1),e=nd(),null!==n&&(An(n,1,e),id(n,e));break}}n=n.return}}function xd(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=nd(),e.pingedLanes|=e.suspendedLanes&t,Il===e&&(kl&t)===t&&(4===jl||3===jl&&(130023424&kl)===kl&&500>Xe()-zl?pd(e,0):Nl|=t),id(e,n)}function _d(e,n){0===n&&(0==(1&e.mode)?n=1:(n=un,0==(130023424&(un<<=1))&&(un=4194304)));var t=nd();null!==(e=Io(e,n))&&(An(e,n,t),id(e,t))}function Dd(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),_d(e,t)}function Od(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;null!==i&&(t=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(n),_d(e,t)}function Id(e,n){return Ye(e,n)}function Ld(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function kd(e,n,t,r){return new Ld(e,n,t,r)}function Fd(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Md(e,n){var t=e.alternate;return null===t?((t=kd(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function jd(e,n,t,r,i,a){var s=2;if(r=e,"function"==typeof e)Fd(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case w:return Ud(t.children,i,a,n);case P:s=8,i|=8;break;case E:return(e=kd(12,t,n,2|i)).elementType=E,e.lanes=a,e;case O:return(e=kd(13,t,n,i)).elementType=O,e.lanes=a,e;case I:return(e=kd(19,t,n,i)).elementType=I,e.lanes=a,e;case F:return Rd(t,i,a,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case x:s=10;break e;case _:s=9;break e;case D:s=11;break e;case L:s=14;break e;case k:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=kd(s,t,n,i)).elementType=e,n.type=r,n.lanes=a,n}function Ud(e,n,t,r){return(e=kd(7,e,r,n)).lanes=t,e}function Rd(e,n,t,r){return(e=kd(22,e,r,n)).elementType=F,e.lanes=t,e.stateNode={isHidden:!1},e}function Td(e,n,t){return(e=kd(6,e,null,n)).lanes=t,e}function Nd(e,n,t){return(n=kd(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Wd(e,n,t,r,i){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Cn(0),this.expirationTimes=Cn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Cn(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Bd(e,n,t,r,i,o,a,s,l){return e=new Wd(e,n,t,s,l),1===n?(n=1,!0===o&&(n|=8)):n=0,o=kd(3,null,null,n),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},ko(o),e}function zd(e){if(!e)return _i;e:{if(ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(ki(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var t=e.type;if(ki(t))return ji(e,t,n)}return n}function Vd(e,n,t,r,i,o,a,s,l){return(e=Bd(t,r,!0,e,0,o,0,s,l)).context=zd(null),t=e.current,(o=Mo(r=nd(),i=td(t))).callback=null!=n?n:null,jo(t,o,i),e.current.lanes=i,An(e,i,r),id(e,r),e}function Gd(e,n,t,r){var i=n.current,o=nd(),a=td(i);return t=zd(t),null===n.context?n.context=t:n.pendingContext=t,(n=Mo(o,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=jo(i,n,a))&&(rd(e,i,a,o),Uo(e,i,a)),a}function Hd(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Jd(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Yd(e,n){Jd(e,n),(e=e.alternate)&&Jd(e,n)}Pl=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Oi.current)bs=!0;else{if(0==(e.lanes&t)&&0==(128&n.flags))return bs=!1,function(e,n,t){switch(n.tag){case 3:Is(n),fo();break;case 5:aa(n);break;case 1:ki(n.type)&&Ui(n);break;case 4:ia(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,i=n.memoizedProps.value;xi(Ao,r._currentValue),r._currentValue=i;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(xi(la,1&la.current),n.flags|=128,null):0!=(t&n.child.childLanes)?Ts(e,n,t):(xi(la,1&la.current),null!==(e=Hs(e,n,t))?e.sibling:null);xi(la,1&la.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(128&e.flags)){if(r)return Vs(e,n,t);n.flags|=128}if(null!==(i=n.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),xi(la,la.current),r)break;return null;case 22:case 23:return n.lanes=0,Es(e,n,t)}return Hs(e,n,t)}(e,n,t);bs=0!=(131072&e.flags)}else bs=!1,io&&0!=(1048576&n.flags)&&Ki(n,Ji,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Gs(e,n),e=n.pendingProps;var i=Li(n,Di.current);Eo(n,t),i=Pa(null,n,r,e,i,t);var a=Ea();return n.flags|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,ki(r)?(a=!0,Ui(n)):a=!1,n.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,ko(n),i.updater=zo,n.stateNode=i,i._reactInternals=n,Jo(n,r,e,t),n=Os(null,n,r,!0,a,t)):(n.tag=0,io&&a&&eo(n),ys(null,n,i,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Gs(e,n),e=n.pendingProps,r=(i=r._init)(r._payload),n.type=r,i=n.tag=function(e){if("function"==typeof e)return Fd(e)?1:0;if(null!=e){if((e=e.$$typeof)===D)return 11;if(e===L)return 14}return 2}(r),e=Co(r,e),i){case 0:n=_s(null,n,r,e,t);break e;case 1:n=Ds(null,n,r,e,t);break e;case 11:n=Ss(null,n,r,e,t);break e;case 14:n=ws(null,n,r,Co(r.type,e),t);break e}throw Error(o(306,r,""))}return n;case 0:return r=n.type,i=n.pendingProps,_s(e,n,r,i=n.elementType===r?i:Co(r,i),t);case 1:return r=n.type,i=n.pendingProps,Ds(e,n,r,i=n.elementType===r?i:Co(r,i),t);case 3:e:{if(Is(n),null===e)throw Error(o(387));r=n.pendingProps,i=(a=n.memoizedState).element,Fo(e,n),To(n,r,null,t);var s=n.memoizedState;if(r=s.element,a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=a,n.memoizedState=a,256&n.flags){n=Ls(e,n,r,t,i=cs(Error(o(423)),n));break e}if(r!==i){n=Ls(e,n,r,t,i=cs(Error(o(424)),n));break e}for(ro=di(n.stateNode.containerInfo.firstChild),to=n,io=!0,oo=null,t=qo(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(fo(),r===i){n=Hs(e,n,t);break e}ys(e,n,r,t)}n=n.child}return n;case 5:return aa(n),null===e&&co(n),r=n.type,i=n.pendingProps,a=null!==e?e.memoizedProps:null,s=i.children,ti(r,i)?s=null:null!==a&&ti(r,a)&&(n.flags|=32),xs(e,n),ys(e,n,s,t),n.child;case 6:return null===e&&co(n),null;case 13:return Ts(e,n,t);case 4:return ia(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Xo(n,null,r,t):ys(e,n,r,t),n.child;case 11:return r=n.type,i=n.pendingProps,Ss(e,n,r,i=n.elementType===r?i:Co(r,i),t);case 7:return ys(e,n,n.pendingProps,t),n.child;case 8:case 12:return ys(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,i=n.pendingProps,a=n.memoizedProps,s=i.value,xi(Ao,r._currentValue),r._currentValue=s,null!==a)if(sr(a.value,s)){if(a.children===i.children&&!Oi.current){n=Hs(e,n,t);break e}}else for(null!==(a=n.child)&&(a.return=n);null!==a;){var l=a.dependencies;if(null!==l){s=a.child;for(var d=l.firstContext;null!==d;){if(d.context===r){if(1===a.tag){(d=Mo(-1,t&-t)).tag=2;var c=a.updateQueue;if(null!==c){var u=(c=c.shared).pending;null===u?d.next=d:(d.next=u.next,u.next=d),c.pending=d}}a.lanes|=t,null!==(d=a.alternate)&&(d.lanes|=t),Po(a.return,t,n),l.lanes|=t;break}d=d.next}}else if(10===a.tag)s=a.type===n.type?null:a.child;else if(18===a.tag){if(null===(s=a.return))throw Error(o(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),Po(s,t,n),s=a.sibling}else s=a.child;if(null!==s)s.return=a;else for(s=a;null!==s;){if(s===n){s=null;break}if(null!==(a=s.sibling)){a.return=s.return,s=a;break}s=s.return}a=s}ys(e,n,i.children,t),n=n.child}return n;case 9:return i=n.type,r=n.pendingProps.children,Eo(n,t),r=r(i=xo(i)),n.flags|=1,ys(e,n,r,t),n.child;case 14:return i=Co(r=n.type,n.pendingProps),ws(e,n,r,i=Co(r.type,i),t);case 15:return Ps(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,i=n.pendingProps,i=n.elementType===r?i:Co(r,i),Gs(e,n),n.tag=1,ki(r)?(e=!0,Ui(n)):e=!1,Eo(n,t),Go(n,r,i),Jo(n,r,i,t),Os(null,n,r,!0,e,t);case 19:return Vs(e,n,t);case 22:return Es(e,n,t)}throw Error(o(156,n.tag))};var Qd="function"==typeof reportError?reportError:function(e){console.error(e)};function Zd(e){this._internalRoot=e}function $d(e){this._internalRoot=e}function Xd(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function qd(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Kd(){}function ec(e,n,t,r,i){var o=t._reactRootContainer;if(o){var a=o;if("function"==typeof i){var s=i;i=function(){var e=Hd(a);s.call(e)}}Gd(n,a,e,i)}else a=function(e,n,t,r,i){if(i){if("function"==typeof r){var o=r;r=function(){var e=Hd(a);o.call(e)}}var a=Vd(n,r,e,0,null,!1,0,"",Kd);return e._reactRootContainer=a,e[fi]=a.current,zr(8===e.nodeType?e.parentNode:e),ud(),a}for(;i=e.lastChild;)e.removeChild(i);if("function"==typeof r){var s=r;r=function(){var e=Hd(l);s.call(e)}}var l=Bd(e,0,!1,null,0,!1,0,"",Kd);return e._reactRootContainer=l,e[fi]=l.current,zr(8===e.nodeType?e.parentNode:e),ud((function(){Gd(n,l,t,r)})),l}(t,n,e,i,r);return Hd(a)}$d.prototype.render=Zd.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Gd(e,n,null,null)},$d.prototype.unmount=Zd.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;ud((function(){Gd(null,e,null,null)})),n[fi]=null}},$d.prototype.unstable_scheduleHydration=function(e){if(e){var n=En();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Mn.length&&0!==n&&n<Mn[t].priority;t++);Mn.splice(t,0,e),0===t&&Tn(e)}},Sn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=mn(n.pendingLanes);0!==t&&(vn(n,1|t),id(n,Xe()),0==(6&Ol)&&(Vl=Xe()+500,zi()))}break;case 13:ud((function(){var n=Io(e,1);if(null!==n){var t=nd();rd(n,e,1,t)}})),Yd(e,1)}},wn=function(e){if(13===e.tag){var n=Io(e,134217728);null!==n&&rd(n,e,134217728,nd()),Yd(e,134217728)}},Pn=function(e){if(13===e.tag){var n=td(e),t=Io(e,n);null!==t&&rd(t,e,n,nd()),Yd(e,n)}},En=function(){return bn},xn=function(e,n){var t=bn;try{return bn=e,n()}finally{bn=t}},Se=function(e,n,t){switch(n){case"input":if(q(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var i=yi(r);if(!i)throw Error(o(90));Y(r),q(r,i)}}}break;case"textarea":oe(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},De=cd,Oe=ud;var nc={usingClientEntryPoint:!1,Events:[vi,bi,yi,xe,_e,cd]},tc={findFiberByHostInstance:Ai,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ic=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ic.isDisabled&&ic.supportsFiber)try{on=ic.inject(rc),an=ic}catch(ce){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xd(n))throw Error(o(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Xd(e))throw Error(o(299));var t=!1,r="",i=Qd;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),n=Bd(e,1,!1,null,0,t,0,r,i),e[fi]=n.current,zr(8===e.nodeType?e.parentNode:e),new Zd(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=He(n))?null:e.stateNode},n.flushSync=function(e){return ud(e)},n.hydrate=function(e,n,t){if(!qd(n))throw Error(o(200));return ec(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Xd(e))throw Error(o(405));var r=null!=t&&t.hydratedSources||null,i=!1,a="",s=Qd;if(null!=t&&(!0===t.unstable_strictMode&&(i=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),n=Vd(n,null,e,1,null!=t?t:null,i,0,a,s),e[fi]=n.current,zr(e),r)for(e=0;e<r.length;e++)i=(i=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,i]:n.mutableSourceEagerHydrationData.push(t,i);return new $d(n)},n.render=function(e,n,t){if(!qd(n))throw Error(o(200));return ec(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!qd(e))throw Error(o(40));return!!e._reactRootContainer&&(ud((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[fi]=null}))})),!0)},n.unstable_batchedUpdates=cd,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!qd(t))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},745:(e,n,t)=>{"use strict";var r=t(935);n.s=r.createRoot,r.hydrateRoot},935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(448)},251:(e,n,t)=>{"use strict";var r=t(294),i=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var r,o={},d=null,c=null;for(r in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)a.call(n,r)&&!l.hasOwnProperty(r)&&(o[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===o[r]&&(o[r]=n[r]);return{$$typeof:i,type:e,key:d,ref:c,props:o,_owner:s.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},408:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),d=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),m=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function C(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||f}function A(){}function v(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||f}C.prototype.isReactComponent={},C.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},C.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},A.prototype=C.prototype;var b=v.prototype=new A;b.constructor=v,h(b,C.prototype),b.isPureReactComponent=!0;var y=Array.isArray,S=Object.prototype.hasOwnProperty,w={current:null},P={key:!0,ref:!0,__self:!0,__source:!0};function E(e,n,r){var i,o={},a=null,s=null;if(null!=n)for(i in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(a=""+n.key),n)S.call(n,i)&&!P.hasOwnProperty(i)&&(o[i]=n[i]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var d=Array(l),c=0;c<l;c++)d[c]=arguments[c+2];o.children=d}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===o[i]&&(o[i]=l[i]);return{$$typeof:t,type:e,key:a,ref:s,props:o,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var _=/\/+/g;function D(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function O(e,n,i,o,a){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case r:l=!0}}if(l)return a=a(l=e),e=""===o?"."+D(l,0):o,y(a)?(i="",null!=e&&(i=e.replace(_,"$&/")+"/"),O(a,n,i,"",(function(e){return e}))):null!=a&&(x(a)&&(a=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,i+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(_,"$&/")+"/")+e)),n.push(a)),1;if(l=0,o=""===o?".":o+":",y(e))for(var d=0;d<e.length;d++){var c=o+D(s=e[d],d);l+=O(s,n,i,c,a)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),d=0;!(s=e.next()).done;)l+=O(s=s.value,n,i,c=o+D(s,d++),a);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function I(e,n,t){if(null==e)return e;var r=[],i=0;return O(e,r,"","",(function(e){return n.call(t,e,i++)})),r}function L(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var k={current:null},F={transition:null},M={ReactCurrentDispatcher:k,ReactCurrentBatchConfig:F,ReactCurrentOwner:w};n.Children={map:I,forEach:function(e,n,t){I(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return I(e,(function(){n++})),n},toArray:function(e){return I(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=C,n.Fragment=i,n.Profiler=a,n.PureComponent=v,n.StrictMode=o,n.Suspense=c,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=h({},e.props),o=e.key,a=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(a=n.ref,s=w.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(d in n)S.call(n,d)&&!P.hasOwnProperty(d)&&(i[d]=void 0===n[d]&&void 0!==l?l[d]:n[d])}var d=arguments.length-2;if(1===d)i.children=r;else if(1<d){l=Array(d);for(var c=0;c<d;c++)l[c]=arguments[c+2];i.children=l}return{$$typeof:t,type:e.type,key:o,ref:a,props:i,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=E,n.createFactory=function(e){var n=E.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:d,render:e}},n.isValidElement=x,n.lazy=function(e){return{$$typeof:m,_payload:{_status:-1,_result:e},_init:L}},n.memo=function(e,n){return{$$typeof:u,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=F.transition;F.transition={};try{e()}finally{F.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return k.current.useCallback(e,n)},n.useContext=function(e){return k.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return k.current.useDeferredValue(e)},n.useEffect=function(e,n){return k.current.useEffect(e,n)},n.useId=function(){return k.current.useId()},n.useImperativeHandle=function(e,n,t){return k.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return k.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return k.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return k.current.useMemo(e,n)},n.useReducer=function(e,n,t){return k.current.useReducer(e,n,t)},n.useRef=function(e){return k.current.useRef(e)},n.useState=function(e){return k.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return k.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return k.current.useTransition()},n.version="18.2.0"},294:(e,n,t)=>{"use strict";e.exports=t(408)},893:(e,n,t)=>{"use strict";e.exports=t(251)},53:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,i=e[r];if(!(0<o(i,n)))break e;e[r]=n,e[t]=i,t=r}}function r(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,i=e.length,a=i>>>1;r<a;){var s=2*(r+1)-1,l=e[s],d=s+1,c=e[d];if(0>o(l,t))d<i&&0>o(c,l)?(e[r]=c,e[d]=t,r=d):(e[r]=l,e[s]=t,r=s);else{if(!(d<i&&0>o(c,t)))break e;e[r]=c,e[d]=t,r=d}}}return n}function o(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;n.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var d=[],c=[],u=1,m=null,p=3,f=!1,h=!1,g=!1,C="function"==typeof setTimeout?setTimeout:null,A="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function b(e){for(var n=r(c);null!==n;){if(null===n.callback)i(c);else{if(!(n.startTime<=e))break;i(c),n.sortIndex=n.expirationTime,t(d,n)}n=r(c)}}function y(e){if(g=!1,b(e),!h)if(null!==r(d))h=!0,F(S);else{var n=r(c);null!==n&&M(y,n.startTime-e)}}function S(e,t){h=!1,g&&(g=!1,A(x),x=-1),f=!0;var o=p;try{for(b(t),m=r(d);null!==m&&(!(m.expirationTime>t)||e&&!O());){var a=m.callback;if("function"==typeof a){m.callback=null,p=m.priorityLevel;var s=a(m.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?m.callback=s:m===r(d)&&i(d),b(t)}else i(d);m=r(d)}if(null!==m)var l=!0;else{var u=r(c);null!==u&&M(y,u.startTime-t),l=!1}return l}finally{m=null,p=o,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,P=!1,E=null,x=-1,_=5,D=-1;function O(){return!(n.unstable_now()-D<_)}function I(){if(null!==E){var e=n.unstable_now();D=e;var t=!0;try{t=E(!0,e)}finally{t?w():(P=!1,E=null)}}else P=!1}if("function"==typeof v)w=function(){v(I)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,k=L.port2;L.port1.onmessage=I,w=function(){k.postMessage(null)}}else w=function(){C(I,0)};function F(e){E=e,P||(P=!0,w())}function M(e,t){x=C((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){h||f||(h=!0,F(S))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(d)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,i,o){var a=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?a+o:a,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:u++,callback:i,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>a?(e.sortIndex=o,t(c,e),null===r(d)&&e===r(c)&&(g?(A(x),x=-1):g=!0,M(y,o-a))):(e.sortIndex=s,t(d,e),h||f||(h=!0,F(S))),e},n.unstable_shouldYield=O,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},840:(e,n,t)=>{"use strict";e.exports=t(53)},774:e=>{e.exports=function(e,n,t,r){var i=t?t.call(r,e,n):void 0;if(void 0!==i)return!!i;if(e===n)return!0;if("object"!=typeof e||!e||"object"!=typeof n||!n)return!1;var o=Object.keys(e),a=Object.keys(n);if(o.length!==a.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(n),l=0;l<o.length;l++){var d=o[l];if(!s(d))return!1;var c=e[d],u=n[d];if(!1===(i=t?t.call(r,c,u,d):void 0)||void 0===i&&c!==u)return!1}return!0}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],s=0;s<e.length;s++){var l=e[s],d=r.base?l[0]+r.base:l[0],c=o[d]||0,u="".concat(d," ").concat(c);o[d]=c+1;var m=t(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)n[m].references++,n[m].updater(p);else{var f=i(p,r);r.byIndex=s,n.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var s=t(o[a]);n[s].references--}for(var l=r(e,i),d=0;d<o.length;d++){var c=t(o[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=l}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},954:e=>{"use strict";e.exports="data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA"}},r={};function i(e){var n=r[e];if(void 0!==n)return n.exports;var o=r[e]={id:e,exports:{}};return t[e](o,o.exports,i),o.exports}i.m=t,i.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return i.d(n,{a:n}),n},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(t,r){if(1&r&&(t=this(t)),8&r)return t;if("object"==typeof t&&t){if(4&r&&t.__esModule)return t;if(16&r&&"function"==typeof t.then)return t}var o=Object.create(null);i.r(o);var a={};e=e||[null,n({}),n([]),n(n)];for(var s=2&r&&t;"object"==typeof s&&!~e.indexOf(s);s=n(s))Object.getOwnPropertyNames(s).forEach((e=>a[e]=()=>t[e]));return a.default=()=>t,i.d(o,a),o},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.b=document.baseURI||self.location.href,i.nc=void 0,(()=>{"use strict";var e=i(294),n=i.t(e,2),t=i(745),r=function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},r.apply(this,arguments)};function o(e,n,t){if(t||2===arguments.length)for(var r,i=0,o=n.length;i<o;i++)!r&&i in n||(r||(r=Array.prototype.slice.call(n,0,i)),r[i]=n[i]);return e.concat(r||Array.prototype.slice.call(n))}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var a=i(774),s=i.n(a),l="-ms-",d="-moz-",c="-webkit-",u="comm",m="rule",p="decl",f="@import",h="@keyframes",g="@layer",C=Math.abs,A=String.fromCharCode,v=Object.assign;function b(e){return e.trim()}function y(e,n){return(e=n.exec(e))?e[0]:e}function S(e,n,t){return e.replace(n,t)}function w(e,n){return e.indexOf(n)}function P(e,n){return 0|e.charCodeAt(n)}function E(e,n,t){return e.slice(n,t)}function x(e){return e.length}function _(e){return e.length}function D(e,n){return n.push(e),e}function O(e,n){return e.filter((function(e){return!y(e,n)}))}var I=1,L=1,k=0,F=0,M=0,j="";function U(e,n,t,r,i,o,a,s){return{value:e,root:n,parent:t,type:r,props:i,children:o,line:I,column:L,length:a,return:"",siblings:s}}function R(e,n){return v(U("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},n)}function T(e){for(;e.root;)e=R(e.root,{children:[e]});D(e,e.siblings)}function N(){return M=F>0?P(j,--F):0,L--,10===M&&(L=1,I--),M}function W(){return M=F<k?P(j,F++):0,L++,10===M&&(L=1,I++),M}function B(){return P(j,F)}function z(){return F}function V(e,n){return E(j,e,n)}function G(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function H(e){return b(V(F-1,Q(91===e?e+2:40===e?e+1:e)))}function J(e){for(;(M=B())&&M<33;)W();return G(e)>2||G(M)>3?"":" "}function Y(e,n){for(;--n&&W()&&!(M<48||M>102||M>57&&M<65||M>70&&M<97););return V(e,z()+(n<6&&32==B()&&32==W()))}function Q(e){for(;W();)switch(M){case e:return F;case 34:case 39:34!==e&&39!==e&&Q(M);break;case 40:41===e&&Q(e);break;case 92:W()}return F}function Z(e,n){for(;W()&&e+M!==57&&(e+M!==84||47!==B()););return"/*"+V(n,F-1)+"*"+A(47===e?e:W())}function $(e){for(;!G(B());)W();return V(e,F)}function X(e,n){for(var t="",r=0;r<e.length;r++)t+=n(e[r],r,e,n)||"";return t}function q(e,n,t,r){switch(e.type){case g:if(e.children.length)break;case f:case p:return e.return=e.return||e.value;case u:return"";case h:return e.return=e.value+"{"+X(e.children,r)+"}";case m:if(!x(e.value=e.props.join(",")))return""}return x(t=X(e.children,r))?e.return=e.value+"{"+t+"}":""}function K(e,n,t){switch(function(e,n){return 45^P(e,0)?(((n<<2^P(e,0))<<2^P(e,1))<<2^P(e,2))<<2^P(e,3):0}(e,n)){case 5103:return c+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return c+e+e;case 4789:return d+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return c+e+d+e+l+e+e;case 5936:switch(P(e,n+11)){case 114:return c+e+l+S(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return c+e+l+S(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return c+e+l+S(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return c+e+l+e+e;case 6165:return c+e+l+"flex-"+e+e;case 5187:return c+e+S(e,/(\w+).+(:[^]+)/,c+"box-$1$2"+l+"flex-$1$2")+e;case 5443:return c+e+l+"flex-item-"+S(e,/flex-|-self/g,"")+(y(e,/flex-|baseline/)?"":l+"grid-row-"+S(e,/flex-|-self/g,""))+e;case 4675:return c+e+l+"flex-line-pack"+S(e,/align-content|flex-|-self/g,"")+e;case 5548:return c+e+l+S(e,"shrink","negative")+e;case 5292:return c+e+l+S(e,"basis","preferred-size")+e;case 6060:return c+"box-"+S(e,"-grow","")+c+e+l+S(e,"grow","positive")+e;case 4554:return c+S(e,/([^-])(transform)/g,"$1"+c+"$2")+e;case 6187:return S(S(S(e,/(zoom-|grab)/,c+"$1"),/(image-set)/,c+"$1"),e,"")+e;case 5495:case 3959:return S(e,/(image-set\([^]*)/,c+"$1$`$1");case 4968:return S(S(e,/(.+:)(flex-)?(.*)/,c+"box-pack:$3"+l+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+c+e+e;case 4200:if(!y(e,/flex-|baseline/))return l+"grid-column-align"+E(e,n)+e;break;case 2592:case 3360:return l+S(e,"template-","")+e;case 4384:case 3616:return t&&t.some((function(e,t){return n=t,y(e.props,/grid-\w+-end/)}))?~w(e+(t=t[n].value),"span")?e:l+S(e,"-start","")+e+l+"grid-row-span:"+(~w(t,"span")?y(t,/\d+/):+y(t,/\d+/)-+y(e,/\d+/))+";":l+S(e,"-start","")+e;case 4896:case 4128:return t&&t.some((function(e){return y(e.props,/grid-\w+-start/)}))?e:l+S(S(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return S(e,/(.+)-inline(.+)/,c+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(x(e)-1-n>6)switch(P(e,n+1)){case 109:if(45!==P(e,n+4))break;case 102:return S(e,/(.+:)(.+)-([^]+)/,"$1"+c+"$2-$3$1"+d+(108==P(e,n+3)?"$3":"$2-$3"))+e;case 115:return~w(e,"stretch")?K(S(e,"stretch","fill-available"),n,t)+e:e}break;case 5152:case 5920:return S(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(n,t,r,i,o,a,s){return l+t+":"+r+s+(i?l+t+"-span:"+(o?a:+a-+r)+s:"")+e}));case 4949:if(121===P(e,n+6))return S(e,":",":"+c)+e;break;case 6444:switch(P(e,45===P(e,14)?18:11)){case 120:return S(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+c+(45===P(e,14)?"inline-":"")+"box$3$1"+c+"$2$3$1"+l+"$2box$3")+e;case 100:return S(e,":",":"+l)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return S(e,"scroll-","scroll-snap-")+e}return e}function ee(e,n,t,r){if(e.length>-1&&!e.return)switch(e.type){case p:return void(e.return=K(e.value,e.length,t));case h:return X([R(e,{value:S(e.value,"@","@"+c)})],r);case m:if(e.length)return function(e,n){return e.map(n).join("")}(t=e.props,(function(n){switch(y(n,r=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":T(R(e,{props:[S(n,/:(read-\w+)/,":"+d+"$1")]})),T(R(e,{props:[n]})),v(e,{props:O(t,r)});break;case"::placeholder":T(R(e,{props:[S(n,/:(plac\w+)/,":"+c+"input-$1")]})),T(R(e,{props:[S(n,/:(plac\w+)/,":"+d+"$1")]})),T(R(e,{props:[S(n,/:(plac\w+)/,l+"input-$1")]})),T(R(e,{props:[n]})),v(e,{props:O(t,r)})}return""}))}}function ne(e){return function(e){return j="",e}(te("",null,null,null,[""],e=function(e){return I=L=1,k=x(j=e),F=0,[]}(e),0,[0],e))}function te(e,n,t,r,i,o,a,s,l){for(var d=0,c=0,u=a,m=0,p=0,f=0,h=1,g=1,C=1,v=0,b="",y=i,E=o,_=r,O=b;g;)switch(f=v,v=W()){case 40:if(108!=f&&58==P(O,u-1)){-1!=w(O+=S(H(v),"&","&\f"),"&\f")&&(C=-1);break}case 34:case 39:case 91:O+=H(v);break;case 9:case 10:case 13:case 32:O+=J(f);break;case 92:O+=Y(z()-1,7);continue;case 47:switch(B()){case 42:case 47:D(ie(Z(W(),z()),n,t,l),l);break;default:O+="/"}break;case 123*h:s[d++]=x(O)*C;case 125*h:case 59:case 0:switch(v){case 0:case 125:g=0;case 59+c:-1==C&&(O=S(O,/\f/g,"")),p>0&&x(O)-u&&D(p>32?oe(O+";",r,t,u-1,l):oe(S(O," ","")+";",r,t,u-2,l),l);break;case 59:O+=";";default:if(D(_=re(O,n,t,d,c,i,s,b,y=[],E=[],u,o),o),123===v)if(0===c)te(O,n,_,_,y,o,u,s,E);else switch(99===m&&110===P(O,3)?100:m){case 100:case 108:case 109:case 115:te(e,_,_,r&&D(re(e,_,_,0,0,i,s,b,i,y=[],u,E),E),i,E,u,s,r?y:E);break;default:te(O,_,_,_,[""],E,0,s,E)}}d=c=p=0,h=C=1,b=O="",u=a;break;case 58:u=1+x(O),p=f;default:if(h<1)if(123==v)--h;else if(125==v&&0==h++&&125==N())continue;switch(O+=A(v),v*h){case 38:C=c>0?1:(O+="\f",-1);break;case 44:s[d++]=(x(O)-1)*C,C=1;break;case 64:45===B()&&(O+=H(W())),m=B(),c=u=x(b=O+=$(z())),v++;break;case 45:45===f&&2==x(O)&&(h=0)}}return o}function re(e,n,t,r,i,o,a,s,l,d,c,u){for(var p=i-1,f=0===i?o:[""],h=_(f),g=0,A=0,v=0;g<r;++g)for(var y=0,w=E(e,p+1,p=C(A=a[g])),P=e;y<h;++y)(P=b(A>0?f[y]+" "+w:S(w,/&\f/g,f[y])))&&(l[v++]=P);return U(e,n,t,0===i?m:s,l,d,c,u)}function ie(e,n,t,r){return U(e,n,t,u,A(M),E(e,2,-2),0,r)}function oe(e,n,t,r,i){return U(e,n,t,p,E(e,0,r),E(e,r+1,-1),r,i)}var ae={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},se="undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&({ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_ATTR||{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_ATTR)||"data-styled",le="undefined"!=typeof window&&"HTMLElement"in window,de=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY?"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_18196:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\AZR-W-ACADDC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"e9c30d4d-6e99-4c52-ba33-b11f722374a6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY),ce=(new Set,Object.freeze([])),ue=Object.freeze({});var me=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),pe=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,fe=/(^-|-$)/g;function he(e){return e.replace(pe,"-").replace(fe,"")}var ge=/(a)(d)/gi,Ce=function(e){return String.fromCharCode(e+(e>25?39:97))};function Ae(e){var n,t="";for(n=Math.abs(e);n>52;n=n/52|0)t=Ce(n%52)+t;return(Ce(n%52)+t).replace(ge,"$1-$2")}var ve,be=function(e,n){for(var t=n.length;t;)e=33*e^n.charCodeAt(--t);return e},ye=function(e){return be(5381,e)};function Se(e){return Ae(ye(e)>>>0)}function we(e){return"string"==typeof e&&!0}var Pe="function"==typeof Symbol&&Symbol.for,Ee=Pe?Symbol.for("react.memo"):60115,xe=Pe?Symbol.for("react.forward_ref"):60112,_e={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},De={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Oe={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Ie=((ve={})[xe]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},ve[Ee]=Oe,ve);function Le(e){return("type"in(n=e)&&n.type.$$typeof)===Ee?Oe:"$$typeof"in e?Ie[e.$$typeof]:_e;var n}var ke=Object.defineProperty,Fe=Object.getOwnPropertyNames,Me=Object.getOwnPropertySymbols,je=Object.getOwnPropertyDescriptor,Ue=Object.getPrototypeOf,Re=Object.prototype;function Te(e,n,t){if("string"!=typeof n){if(Re){var r=Ue(n);r&&r!==Re&&Te(e,r,t)}var i=Fe(n);Me&&(i=i.concat(Me(n)));for(var o=Le(e),a=Le(n),s=0;s<i.length;++s){var l=i[s];if(!(l in De||t&&t[l]||a&&l in a||o&&l in o)){var d=je(n,l);try{ke(e,l,d)}catch(e){}}}}return e}function Ne(e){return"function"==typeof e}function We(e){return"object"==typeof e&&"styledComponentId"in e}function Be(e,n){return e&&n?"".concat(e," ").concat(n):e||n||""}function ze(e,n){if(0===e.length)return"";for(var t=e[0],r=1;r<e.length;r++)t+=n?n+e[r]:e[r];return t}function Ve(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function Ge(e,n,t){if(void 0===t&&(t=!1),!t&&!Ve(e)&&!Array.isArray(e))return n;if(Array.isArray(n))for(var r=0;r<n.length;r++)e[r]=Ge(e[r],n[r]);else if(Ve(n))for(var r in n)e[r]=Ge(e[r],n[r]);return e}function He(e,n){Object.defineProperty(e,"toString",{value:n})}function Je(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(n.length>0?" Args: ".concat(n.join(", ")):""))}var Ye=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var n=0,t=0;t<e;t++)n+=this.groupSizes[t];return n},e.prototype.insertRules=function(e,n){if(e>=this.groupSizes.length){for(var t=this.groupSizes,r=t.length,i=r;e>=i;)if((i<<=1)<0)throw Je(16,"".concat(e));this.groupSizes=new Uint32Array(i),this.groupSizes.set(t),this.length=i;for(var o=r;o<i;o++)this.groupSizes[o]=0}for(var a=this.indexOfGroup(e+1),s=(o=0,n.length);o<s;o++)this.tag.insertRule(a,n[o])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var n=this.groupSizes[e],t=this.indexOfGroup(e),r=t+n;this.groupSizes[e]=0;for(var i=t;i<r;i++)this.tag.deleteRule(t)}},e.prototype.getGroup=function(e){var n="";if(e>=this.length||0===this.groupSizes[e])return n;for(var t=this.groupSizes[e],r=this.indexOfGroup(e),i=r+t,o=r;o<i;o++)n+="".concat(this.tag.getRule(o)).concat("/*!sc*/\n");return n},e}(),Qe=new Map,Ze=new Map,$e=1,Xe=function(e){if(Qe.has(e))return Qe.get(e);for(;Ze.has($e);)$e++;var n=$e++;return Qe.set(e,n),Ze.set(n,e),n},qe=function(e,n){$e=n+1,Qe.set(e,n),Ze.set(n,e)},Ke="style[".concat(se,"][").concat("data-styled-version",'="').concat("6.1.1",'"]'),en=new RegExp("^".concat(se,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),nn=function(e,n,t){for(var r,i=t.split(","),o=0,a=i.length;o<a;o++)(r=i[o])&&e.registerName(n,r)},tn=function(e,n){for(var t,r=(null!==(t=n.textContent)&&void 0!==t?t:"").split("/*!sc*/\n"),i=[],o=0,a=r.length;o<a;o++){var s=r[o].trim();if(s){var l=s.match(en);if(l){var d=0|parseInt(l[1],10),c=l[2];0!==d&&(qe(c,d),nn(e,c,l[3]),e.getTag().insertRules(d,i)),i.length=0}else i.push(s)}}};function rn(){return i.nc}var on=function(e){var n=document.head,t=e||n,r=document.createElement("style"),i=function(e){var n=Array.from(e.querySelectorAll("style[".concat(se,"]")));return n[n.length-1]}(t),o=void 0!==i?i.nextSibling:null;r.setAttribute(se,"active"),r.setAttribute("data-styled-version","6.1.1");var a=rn();return a&&r.setAttribute("nonce",a),t.insertBefore(r,o),r},an=function(){function e(e){this.element=on(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var n=document.styleSheets,t=0,r=n.length;t<r;t++){var i=n[t];if(i.ownerNode===e)return i}throw Je(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,n){try{return this.sheet.insertRule(n,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var n=this.sheet.cssRules[e];return n&&n.cssText?n.cssText:""},e}(),sn=function(){function e(e){this.element=on(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,n){if(e<=this.length&&e>=0){var t=document.createTextNode(n);return this.element.insertBefore(t,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),ln=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,n){return e<=this.length&&(this.rules.splice(e,0,n),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),dn=le,cn={isServer:!le,useCSSOMInjection:!de},un=function(){function e(e,n,t){void 0===e&&(e=ue),void 0===n&&(n={});var i=this;this.options=r(r({},cn),e),this.gs=n,this.names=new Map(t),this.server=!!e.isServer,!this.server&&le&&dn&&(dn=!1,function(e){for(var n=document.querySelectorAll(Ke),t=0,r=n.length;t<r;t++){var i=n[t];i&&"active"!==i.getAttribute(se)&&(tn(e,i),i.parentNode&&i.parentNode.removeChild(i))}}(this)),He(this,(function(){return function(e){for(var n=e.getTag(),t=n.length,r="",i=function(t){var i=function(e){return Ze.get(e)}(t);if(void 0===i)return"continue";var o=e.names.get(i),a=n.getGroup(t);if(void 0===o||0===a.length)return"continue";var s="".concat(se,".g").concat(t,'[id="').concat(i,'"]'),l="";void 0!==o&&o.forEach((function(e){e.length>0&&(l+="".concat(e,","))})),r+="".concat(a).concat(s,'{content:"').concat(l,'"}').concat("/*!sc*/\n")},o=0;o<t;o++)i(o);return r}(i)}))}return e.registerId=function(e){return Xe(e)},e.prototype.reconstructWithOptions=function(n,t){return void 0===t&&(t=!0),new e(r(r({},this.options),n),this.gs,t&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var n=e.useCSSOMInjection,t=e.target;return e.isServer?new ln(t):n?new an(t):new sn(t)}(this.options),new Ye(e)));var e},e.prototype.hasNameForId=function(e,n){return this.names.has(e)&&this.names.get(e).has(n)},e.prototype.registerName=function(e,n){if(Xe(e),this.names.has(e))this.names.get(e).add(n);else{var t=new Set;t.add(n),this.names.set(e,t)}},e.prototype.insertRules=function(e,n,t){this.registerName(e,n),this.getTag().insertRules(Xe(e),t)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Xe(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),mn=/&/g,pn=/^\s*\/\/.*$/gm;function fn(e,n){return e.map((function(e){return"rule"===e.type&&(e.value="".concat(n," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(n," ")),e.props=e.props.map((function(e){return"".concat(n," ").concat(e)}))),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=fn(e.children,n)),e}))}function hn(e){var n,t,r,i=void 0===e?ue:e,o=i.options,a=void 0===o?ue:o,s=i.plugins,l=void 0===s?ce:s,d=function(e,r,i){return i===t||i.startsWith(t)&&i.endsWith(t)&&i.replaceAll(t,"").length>0?".".concat(n):e},c=l.slice();c.push((function(e){e.type===m&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(mn,t).replace(r,d))})),a.prefix&&c.push(ee),c.push(q);var u=function(e,i,o,s){void 0===i&&(i=""),void 0===o&&(o=""),void 0===s&&(s="&"),n=s,t=i,r=new RegExp("\\".concat(t,"\\b"),"g");var l=e.replace(pn,""),d=ne(o||i?"".concat(o," ").concat(i," { ").concat(l," }"):l);a.namespace&&(d=fn(d,a.namespace));var u,m,p,f=[];return X(d,(u=c.concat((p=function(e){return f.push(e)},function(e){e.root||(e=e.return)&&p(e)})),m=_(u),function(e,n,t,r){for(var i="",o=0;o<m;o++)i+=u[o](e,n,t,r)||"";return i})),f};return u.hash=l.length?l.reduce((function(e,n){return n.name||Je(15),be(e,n.name)}),5381).toString():"",u}var gn=new un,Cn=hn(),An=e.createContext({shouldForwardProp:void 0,styleSheet:gn,stylis:Cn}),vn=(An.Consumer,e.createContext(void 0));function bn(){return(0,e.useContext)(An)}function yn(n){var t=(0,e.useState)(n.stylisPlugins),r=t[0],i=t[1],o=bn().styleSheet,a=(0,e.useMemo)((function(){var e=o;return n.sheet?e=n.sheet:n.target&&(e=e.reconstructWithOptions({target:n.target},!1)),n.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[n.disableCSSOMInjection,n.sheet,n.target,o]),l=(0,e.useMemo)((function(){return hn({options:{namespace:n.namespace,prefix:n.enableVendorPrefixes},plugins:r})}),[n.enableVendorPrefixes,n.namespace,r]);(0,e.useEffect)((function(){s()(r,n.stylisPlugins)||i(n.stylisPlugins)}),[n.stylisPlugins]);var d=(0,e.useMemo)((function(){return{shouldForwardProp:n.shouldForwardProp,styleSheet:a,stylis:l}}),[n.shouldForwardProp,a,l]);return e.createElement(An.Provider,{value:d},e.createElement(vn.Provider,{value:l},n.children))}var Sn=function(){function e(e,n){var t=this;this.inject=function(e,n){void 0===n&&(n=Cn);var r=t.name+n.hash;e.hasNameForId(t.id,r)||e.insertRules(t.id,r,n(t.rules,r,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=n,He(this,(function(){throw Je(12,String(t.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=Cn),this.name+e.hash},e}(),wn=function(e){return e>="A"&&e<="Z"};function Pn(e){for(var n="",t=0;t<e.length;t++){var r=e[t];if(1===t&&"-"===r&&"-"===e[0])return e;wn(r)?n+="-"+r.toLowerCase():n+=r}return n.startsWith("ms-")?"-"+n:n}var En=function(e){return null==e||!1===e||""===e},xn=function(e){var n,t,r=[];for(var i in e){var a=e[i];e.hasOwnProperty(i)&&!En(a)&&(Array.isArray(a)&&a.isCss||Ne(a)?r.push("".concat(Pn(i),":"),a,";"):Ve(a)?r.push.apply(r,o(o(["".concat(i," {")],xn(a),!1),["}"],!1)):r.push("".concat(Pn(i),": ").concat((n=i,null==(t=a)||"boolean"==typeof t||""===t?"":"number"!=typeof t||0===t||n in ae||n.startsWith("--")?String(t).trim():"".concat(t,"px")),";")))}return r};function _n(e,n,t,r){return En(e)?[]:We(e)?[".".concat(e.styledComponentId)]:Ne(e)?!Ne(i=e)||i.prototype&&i.prototype.isReactComponent||!n?[e]:_n(e(n),n,t,r):e instanceof Sn?t?(e.inject(t,r),[e.getName(r)]):[e]:Ve(e)?xn(e):Array.isArray(e)?Array.prototype.concat.apply(ce,e.map((function(e){return _n(e,n,t,r)}))):[e.toString()];var i}function Dn(e){for(var n=0;n<e.length;n+=1){var t=e[n];if(Ne(t)&&!We(t))return!1}return!0}var On=ye("6.1.1"),In=function(){function e(e,n,t){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===t||t.isStatic)&&Dn(e),this.componentId=n,this.baseHash=be(On,n),this.baseStyle=t,un.registerId(n)}return e.prototype.generateAndInjectStyles=function(e,n,t){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,n,t):"";if(this.isStatic&&!t.hash)if(this.staticRulesId&&n.hasNameForId(this.componentId,this.staticRulesId))r=Be(r,this.staticRulesId);else{var i=ze(_n(this.rules,e,n,t)),o=Ae(be(this.baseHash,i)>>>0);if(!n.hasNameForId(this.componentId,o)){var a=t(i,".".concat(o),void 0,this.componentId);n.insertRules(this.componentId,o,a)}r=Be(r,o),this.staticRulesId=o}else{for(var s=be(this.baseHash,t.hash),l="",d=0;d<this.rules.length;d++){var c=this.rules[d];if("string"==typeof c)l+=c;else if(c){var u=ze(_n(c,e,n,t));s=be(s,u+d),l+=u}}if(l){var m=Ae(s>>>0);n.hasNameForId(this.componentId,m)||n.insertRules(this.componentId,m,t(l,".".concat(m),void 0,this.componentId)),r=Be(r,m)}}return r},e}(),Ln=e.createContext(void 0);Ln.Consumer;var kn={};function Fn(n,t,i){var o=We(n),a=n,s=!we(n),l=t.attrs,d=void 0===l?ce:l,c=t.componentId,u=void 0===c?function(e,n){var t="string"!=typeof e?"sc":he(e);kn[t]=(kn[t]||0)+1;var r="".concat(t,"-").concat(Se("6.1.1"+t+kn[t]));return n?"".concat(n,"-").concat(r):r}(t.displayName,t.parentComponentId):c,m=t.displayName,p=void 0===m?function(e){return we(e)?"styled.".concat(e):"Styled(".concat(function(e){return e.displayName||e.name||"Component"}(e),")")}(n):m,f=t.displayName&&t.componentId?"".concat(he(t.displayName),"-").concat(t.componentId):t.componentId||u,h=o&&a.attrs?a.attrs.concat(d).filter(Boolean):d,g=t.shouldForwardProp;if(o&&a.shouldForwardProp){var C=a.shouldForwardProp;if(t.shouldForwardProp){var A=t.shouldForwardProp;g=function(e,n){return C(e,n)&&A(e,n)}}else g=C}var v=new In(i,f,o?a.componentStyle:void 0);function b(n,t){return function(n,t,i){var o=n.attrs,a=n.componentStyle,s=n.defaultProps,l=n.foldedComponentIds,d=n.styledComponentId,c=n.target,u=e.useContext(Ln),m=bn(),p=n.shouldForwardProp||m.shouldForwardProp,f=function(e,n,t){for(var i,o=r(r({},n),{className:void 0,theme:t}),a=0;a<e.length;a+=1){var s=Ne(i=e[a])?i(o):i;for(var l in s)o[l]="className"===l?Be(o[l],s[l]):"style"===l?r(r({},o[l]),s[l]):s[l]}return n.className&&(o.className=Be(o.className,n.className)),o}(o,t,function(e,n,t){return void 0===t&&(t=ue),e.theme!==t.theme&&e.theme||n||t.theme}(t,u,s)||ue),h=f.as||c,g={};for(var C in f)void 0===f[C]||"$"===C[0]||"as"===C||"theme"===C||("forwardedAs"===C?g.as=f.forwardedAs:p&&!p(C,h)||(g[C]=f[C]));var A=function(e,n){var t=bn();return e.generateAndInjectStyles(n,t.styleSheet,t.stylis)}(a,f),v=Be(l,d);return A&&(v+=" "+A),f.className&&(v+=" "+f.className),g[we(h)&&!me.has(h)?"class":"className"]=v,g.ref=i,(0,e.createElement)(h,g)}(y,n,t)}b.displayName=p;var y=e.forwardRef(b);return y.attrs=h,y.componentStyle=v,y.displayName=p,y.shouldForwardProp=g,y.foldedComponentIds=o?Be(a.foldedComponentIds,a.styledComponentId):"",y.styledComponentId=f,y.target=o?a.target:n,Object.defineProperty(y,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=o?function(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];for(var r=0,i=n;r<i.length;r++)Ge(e,i[r],!0);return e}({},a.defaultProps,e):e}}),He(y,(function(){return".".concat(y.styledComponentId)})),s&&Te(y,n,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),y}function Mn(e,n){for(var t=[e[0]],r=0,i=n.length;r<i;r+=1)t.push(n[r],e[r+1]);return t}new Set;var jn=function(e){return Object.assign(e,{isCss:!0})};function Un(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];if(Ne(e)||Ve(e))return jn(_n(Mn(ce,o([e],n,!0))));var r=e;return 0===n.length&&1===r.length&&"string"==typeof r[0]?_n(r):jn(_n(Mn(r,n)))}function Rn(e,n,t){if(void 0===t&&(t=ue),!n)throw Je(1,n);var i=function(r){for(var i=[],a=1;a<arguments.length;a++)i[a-1]=arguments[a];return e(n,t,Un.apply(void 0,o([r],i,!1)))};return i.attrs=function(i){return Rn(e,n,r(r({},t),{attrs:Array.prototype.concat(t.attrs,i).filter(Boolean)}))},i.withConfig=function(i){return Rn(e,n,r(r({},t),i))},i}var Tn,Nn=function(e){return Rn(Fn,e)},Wn=Nn;function Bn(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];var r=ze(Un.apply(void 0,o([e],n,!1))),i=Se(r);return new Sn(i,r)}me.forEach((function(e){Wn[e]=Nn(e)})),function(){function e(e,n){this.rules=e,this.componentId=n,this.isStatic=Dn(e),un.registerId(this.componentId+1)}e.prototype.createStyles=function(e,n,t,r){var i=r(ze(_n(this.rules,n,t,r)),""),o=this.componentId+e;t.insertRules(o,o,i)},e.prototype.removeStyles=function(e,n){n.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,n,t,r){e>2&&un.registerId(this.componentId+e),this.removeStyles(e,t),this.createStyles(e,n,t,r)}}(),function(){function n(){var n=this;this._emitSheetCSS=function(){var e=n.instance.toString(),t=rn(),r=ze([t&&'nonce="'.concat(t,'"'),"".concat(se,'="true"'),"".concat("data-styled-version",'="').concat("6.1.1",'"')].filter(Boolean)," ");return"<style ".concat(r,">").concat(e,"</style>")},this.getStyleTags=function(){if(n.sealed)throw Je(2);return n._emitSheetCSS()},this.getStyleElement=function(){var t;if(n.sealed)throw Je(2);var i=((t={})[se]="",t["data-styled-version"]="6.1.1",t.dangerouslySetInnerHTML={__html:n.instance.toString()},t),o=rn();return o&&(i.nonce=o),[e.createElement("style",r({},i,{key:"sc-0-0"}))]},this.seal=function(){n.sealed=!0},this.instance=new un({isServer:!0}),this.sealed=!1}n.prototype.collectStyles=function(n){if(this.sealed)throw Je(2);return e.createElement(yn,{sheet:this.instance},n)},n.prototype.interleaveWithNodeStream=function(e){throw Je(3)}}(),"__sc-".concat(se,"__");var zn,Vn,Gn,Hn,Jn=Wn.div(Tn||(zn=["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    \n    position: fixed;\n    bottom: 0;\n    left: 0;\n    \n    transition: transform 0.5s ease-out;\n    z-index: 10;\n    \n    .botao{\n        background: white;\n        border: none;\n        border-radius: 50%;\n        width: 4rem;\n        height: 4rem;\n        transition: 0.5s all ease-out;\n        z-index: 1000;\n        cursor: pointer;\n    }\n    \n    .botao:hover{\n        transform: scale(1.1);\n    }\n    \n    &.visible{\n        transform: translateY(0);\n    }\n\n    &.visible .botao{\n        transform: rotate(180deg);\n    }\n    \n    &.hidden{\n        transform: translateY(16rem);\n    }\n"],Vn||(Vn=zn.slice(0)),Tn=Object.freeze(Object.defineProperties(zn,{raw:{value:Object.freeze(Vn)}})))),Yn=Wn.form(Gn||(Gn=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    border-radius: 6.25rem 6.25rem 0rem 0rem;\n    background: #000;\n    width: 100vw;\n    padding: 2rem 0;\n    flex-shrink: 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    \n    label{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    input{\n        width: 15.375rem;\n        height: 3.375rem;\n        flex-shrink: 0;\n        border: none;\n        border-radius: 0;\n    }\n    \n    input, input::placeholder{\n        color: rgba(0, 0, 0, 0.28);\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n"])));function Qn(){return Qn=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Qn.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(Hn||(Hn={}));const Zn="popstate";function $n(e,n){if(!1===e||null==e)throw new Error(n)}function Xn(e,n){if(!e){"undefined"!=typeof console&&console.warn(n);try{throw new Error(n)}catch(e){}}}function qn(e,n){return{usr:e.state,key:e.key,idx:n}}function Kn(e,n,t,r){return void 0===t&&(t=null),Qn({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof n?nt(n):n,{state:t,key:n&&n.key||r||Math.random().toString(36).substr(2,8)})}function et(e){let{pathname:n="/",search:t="",hash:r=""}=e;return t&&"?"!==t&&(n+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(n+="#"===r.charAt(0)?r:"#"+r),n}function nt(e){let n={};if(e){let t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));let r=e.indexOf("?");r>=0&&(n.search=e.substr(r),e=e.substr(0,r)),e&&(n.pathname=e)}return n}var tt;function rt(e,n,t){void 0===t&&(t="/");let r=Ct(("string"==typeof n?nt(n):n).pathname||"/",t);if(null==r)return null;let i=it(e);!function(e){e.sort(((e,n)=>e.score!==n.score?n.score-e.score:function(e,n){return e.length===n.length&&e.slice(0,-1).every(((e,t)=>e===n[t]))?e[e.length-1]-n[n.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),n.routesMeta.map((e=>e.childrenIndex)))))}(i);let o=null;for(let e=0;null==o&&e<i.length;++e)o=ft(i[e],gt(r));return o}function it(e,n,t,r){void 0===n&&(n=[]),void 0===t&&(t=[]),void 0===r&&(r="");let i=(e,i,o)=>{let a={relativePath:void 0===o?e.path||"":o,caseSensitive:!0===e.caseSensitive,childrenIndex:i,route:e};a.relativePath.startsWith("/")&&($n(a.relativePath.startsWith(r),'Absolute route path "'+a.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),a.relativePath=a.relativePath.slice(r.length));let s=vt([r,a.relativePath]),l=t.concat(a);e.children&&e.children.length>0&&($n(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+s+'".'),it(e.children,n,l,s)),(null!=e.path||e.index)&&n.push({path:s,score:pt(s,e.index),routesMeta:l})};return e.forEach(((e,n)=>{var t;if(""!==e.path&&null!=(t=e.path)&&t.includes("?"))for(let t of ot(e.path))i(e,n,t);else i(e,n)})),n}function ot(e){let n=e.split("/");if(0===n.length)return[];let[t,...r]=n,i=t.endsWith("?"),o=t.replace(/\?$/,"");if(0===r.length)return i?[o,""]:[o];let a=ot(r.join("/")),s=[];return s.push(...a.map((e=>""===e?o:[o,e].join("/")))),i&&s.push(...a),s.map((n=>e.startsWith("/")&&""===n?"/":n))}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(tt||(tt={})),new Set(["lazy","caseSensitive","path","id","index","children"]);const at=/^:\w+$/,st=3,lt=2,dt=1,ct=10,ut=-2,mt=e=>"*"===e;function pt(e,n){let t=e.split("/"),r=t.length;return t.some(mt)&&(r+=ut),n&&(r+=lt),t.filter((e=>!mt(e))).reduce(((e,n)=>e+(at.test(n)?st:""===n?dt:ct)),r)}function ft(e,n){let{routesMeta:t}=e,r={},i="/",o=[];for(let e=0;e<t.length;++e){let a=t[e],s=e===t.length-1,l="/"===i?n:n.slice(i.length)||"/",d=ht({path:a.relativePath,caseSensitive:a.caseSensitive,end:s},l);if(!d)return null;Object.assign(r,d.params);let c=a.route;o.push({params:r,pathname:vt([i,d.pathname]),pathnameBase:bt(vt([i,d.pathnameBase])),route:c}),"/"!==d.pathnameBase&&(i=vt([i,d.pathnameBase]))}return o}function ht(e,n){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[t,r]=function(e,n,t){void 0===n&&(n=!1),void 0===t&&(t=!0),Xn("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:(\w+)(\?)?/g,((e,n,t)=>(r.push({paramName:n,isOptional:null!=t}),t?"/?([^\\/]+)?":"/([^\\/]+)")));return e.endsWith("*")?(r.push({paramName:"*"}),i+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?i+="\\/*$":""!==e&&"/"!==e&&(i+="(?:(?=\\/|$))"),[new RegExp(i,n?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),i=n.match(t);if(!i)return null;let o=i[0],a=o.replace(/(.)\/+$/,"$1"),s=i.slice(1);return{params:r.reduce(((e,n,t)=>{let{paramName:r,isOptional:i}=n;if("*"===r){let e=s[t]||"";a=o.slice(0,o.length-e.length).replace(/(.)\/+$/,"$1")}const l=s[t];return e[r]=i&&!l?void 0:function(e,n){try{return decodeURIComponent(e)}catch(t){return Xn(!1,'The value for the URL param "'+n+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}(l||"",r),e}),{}),pathname:o,pathnameBase:a,pattern:e}}function gt(e){try{return decodeURI(e)}catch(n){return Xn(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}function Ct(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let t=n.endsWith("/")?n.length-1:n.length,r=e.charAt(t);return r&&"/"!==r?null:e.slice(t)||"/"}function At(e,n,t,r){return"Cannot include a '"+e+"' character in a manually specified `to."+n+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+t+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}const vt=e=>e.join("/").replace(/\/\/+/g,"/"),bt=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),yt=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",St=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;const wt=["post","put","patch","delete"],Pt=(new Set(wt),["get",...wt]);function Et(){return Et=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Et.apply(this,arguments)}new Set(Pt),new Set([301,302,303,307,308]),new Set([307,308]),Symbol("deferred");const xt=e.createContext(null),_t=e.createContext(null),Dt=e.createContext(null),Ot=e.createContext(null),It=e.createContext({outlet:null,matches:[],isDataRoute:!1}),Lt=e.createContext(null);function kt(){return null!=e.useContext(Ot)}function Ft(){return kt()||$n(!1),e.useContext(Ot).location}function Mt(n){e.useContext(Dt).static||e.useLayoutEffect(n)}function jt(){let{isDataRoute:n}=e.useContext(It);return n?function(){let{router:n}=function(n){let t=e.useContext(xt);return t||$n(!1),t}(zt.UseNavigateStable),t=Gt(Vt.UseNavigateStable),r=e.useRef(!1);Mt((()=>{r.current=!0}));let i=e.useCallback((function(e,i){void 0===i&&(i={}),r.current&&("number"==typeof e?n.navigate(e):n.navigate(e,Et({fromRouteId:t},i)))}),[n,t]);return i}():function(){kt()||$n(!1);let n=e.useContext(xt),{basename:t,navigator:r}=e.useContext(Dt),{matches:i}=e.useContext(It),{pathname:o}=Ft(),a=JSON.stringify(function(e){return function(e){return e.filter(((e,n)=>0===n||e.route.path&&e.route.path.length>0))}(e).map(((n,t)=>t===e.length-1?n.pathname:n.pathnameBase))}(i)),s=e.useRef(!1);Mt((()=>{s.current=!0}));let l=e.useCallback((function(e,i){if(void 0===i&&(i={}),!s.current)return;if("number"==typeof e)return void r.go(e);let l=function(e,n,t,r){let i;void 0===r&&(r=!1),"string"==typeof e?i=nt(e):(i=Qn({},e),$n(!i.pathname||!i.pathname.includes("?"),At("?","pathname","search",i)),$n(!i.pathname||!i.pathname.includes("#"),At("#","pathname","hash",i)),$n(!i.search||!i.search.includes("#"),At("#","search","hash",i)));let o,a=""===e||""===i.pathname,s=a?"/":i.pathname;if(null==s)o=t;else if(r){let e=n[n.length-1].replace(/^\//,"").split("/");if(s.startsWith("..")){let n=s.split("/");for(;".."===n[0];)n.shift(),e.pop();i.pathname=n.join("/")}o="/"+e.join("/")}else{let e=n.length-1;if(s.startsWith("..")){let n=s.split("/");for(;".."===n[0];)n.shift(),e-=1;i.pathname=n.join("/")}o=e>=0?n[e]:"/"}let l=function(e,n){void 0===n&&(n="/");let{pathname:t,search:r="",hash:i=""}="string"==typeof e?nt(e):e,o=t?t.startsWith("/")?t:function(e,n){let t=n.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?t.length>1&&t.pop():"."!==e&&t.push(e)})),t.length>1?t.join("/"):"/"}(t,n):n;return{pathname:o,search:yt(r),hash:St(i)}}(i,o),d=s&&"/"!==s&&s.endsWith("/"),c=(a||"."===s)&&t.endsWith("/");return l.pathname.endsWith("/")||!d&&!c||(l.pathname+="/"),l}(e,JSON.parse(a),o,"path"===i.relative);null==n&&"/"!==t&&(l.pathname="/"===l.pathname?t:vt([t,l.pathname])),(i.replace?r.replace:r.push)(l,i.state,i)}),[t,r,a,o,n]);return l}()}function Ut(n,t,r){kt()||$n(!1);let{navigator:i}=e.useContext(Dt),{matches:o}=e.useContext(It),a=o[o.length-1],s=a?a.params:{},l=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let d,c=Ft();if(t){var u;let e="string"==typeof t?nt(t):t;"/"===l||(null==(u=e.pathname)?void 0:u.startsWith(l))||$n(!1),d=e}else d=c;let m=d.pathname||"/",p=rt(n,{pathname:"/"===l?m:m.slice(l.length)||"/"}),f=function(n,t,r){var i;if(void 0===t&&(t=[]),void 0===r&&(r=null),null==n){var o;if(null==(o=r)||!o.errors)return null;n=r.matches}let a=n,s=null==(i=r)?void 0:i.errors;if(null!=s){let e=a.findIndex((e=>e.route.id&&(null==s?void 0:s[e.route.id])));e>=0||$n(!1),a=a.slice(0,Math.min(a.length,e+1))}return a.reduceRight(((n,i,o)=>{let l=i.route.id?null==s?void 0:s[i.route.id]:null,d=null;r&&(d=i.route.errorElement||Tt);let c=t.concat(a.slice(0,o+1)),u=()=>{let t;return t=l?d:i.route.Component?e.createElement(i.route.Component,null):i.route.element?i.route.element:n,e.createElement(Wt,{match:i,routeContext:{outlet:n,matches:c,isDataRoute:null!=r},children:t})};return r&&(i.route.ErrorBoundary||i.route.errorElement||0===o)?e.createElement(Nt,{location:r.location,revalidation:r.revalidation,component:d,error:l,children:u(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):u()}),null)}(p&&p.map((e=>Object.assign({},e,{params:Object.assign({},s,e.params),pathname:vt([l,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?l:vt([l,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,r);return t&&f?e.createElement(Ot.Provider,{value:{location:Et({pathname:"/",search:"",hash:"",state:null,key:"default"},d),navigationType:Hn.Pop}},f):f}function Rt(){let n=function(){var n;let t=e.useContext(Lt),r=function(n){let t=e.useContext(_t);return t||$n(!1),t}(Vt.UseRouteError),i=Gt(Vt.UseRouteError);return t||(null==(n=r.errors)?void 0:n[i])}(),t=function(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}(n)?n.status+" "+n.statusText:n instanceof Error?n.message:JSON.stringify(n),r=n instanceof Error?n.stack:null,i={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return e.createElement(e.Fragment,null,e.createElement("h2",null,"Unexpected Application Error!"),e.createElement("h3",{style:{fontStyle:"italic"}},t),r?e.createElement("pre",{style:i},r):null,null)}const Tt=e.createElement(Rt,null);class Nt extends e.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,n){return n.location!==e.location||"idle"!==n.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||n.error,location:n.location,revalidation:e.revalidation||n.revalidation}}componentDidCatch(e,n){console.error("React Router caught the following error during render",e,n)}render(){return this.state.error?e.createElement(It.Provider,{value:this.props.routeContext},e.createElement(Lt.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Wt(n){let{routeContext:t,match:r,children:i}=n,o=e.useContext(xt);return o&&o.static&&o.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(o.staticContext._deepestRenderedBoundaryId=r.route.id),e.createElement(It.Provider,{value:t},i)}var Bt,zt=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(zt||{}),Vt=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Vt||{});function Gt(n){let t=function(n){let t=e.useContext(It);return t||$n(!1),t}(),r=t.matches[t.matches.length-1];return r.route.id||$n(!1),r.route.id}function Ht(e){$n(!1)}function Jt(n){let{basename:t="/",children:r=null,location:i,navigationType:o=Hn.Pop,navigator:a,static:s=!1}=n;kt()&&$n(!1);let l=t.replace(/^\/*/,"/"),d=e.useMemo((()=>({basename:l,navigator:a,static:s})),[l,a,s]);"string"==typeof i&&(i=nt(i));let{pathname:c="/",search:u="",hash:m="",state:p=null,key:f="default"}=i,h=e.useMemo((()=>{let e=Ct(c,l);return null==e?null:{location:{pathname:e,search:u,hash:m,state:p,key:f},navigationType:o}}),[l,c,u,m,p,f,o]);return null==h?null:e.createElement(Dt.Provider,{value:d},e.createElement(Ot.Provider,{children:r,value:h}))}function Yt(e){let{children:n,location:t}=e;return Ut(Qt(n),t)}function Qt(n,t){void 0===t&&(t=[]);let r=[];return e.Children.forEach(n,((n,i)=>{if(!e.isValidElement(n))return;let o=[...t,i];if(n.type===e.Fragment)return void r.push.apply(r,Qt(n.props.children,o));n.type!==Ht&&$n(!1),n.props.index&&n.props.children&&$n(!1);let a={id:n.props.id||o.join("-"),caseSensitive:n.props.caseSensitive,element:n.props.element,Component:n.props.Component,index:n.props.index,path:n.props.path,loader:n.props.loader,action:n.props.action,errorElement:n.props.errorElement,ErrorBoundary:n.props.ErrorBoundary,hasErrorBoundary:null!=n.props.ErrorBoundary||null!=n.props.errorElement,shouldRevalidate:n.props.shouldRevalidate,handle:n.props.handle,lazy:n.props.lazy};n.props.children&&(a.children=Qt(n.props.children,o)),r.push(a)})),r}n.startTransition,new Promise((()=>{})),e.Component;var Zt=Wn.button(Bt||(Bt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 13.0625rem;\n    height: 3rem;\n    flex-shrink: 0;\n    background: #CD0909;\n\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.25rem;\n    font-style: italic;\n    font-weight: 400;\n    line-height: normal;\n    border: none;\n\n    transition: background 0.3s ease-in-out;\n    cursor: pointer;\n\n    &:hover {\n        background: #A00000;\n    }\n\n    &:active {\n        background: #fc2f2f;\n    }\n\n    &:disabled {\n        background: #A0A0A0;\n        cursor: not-allowed;\n        color: #FFF;\n    }\n"]))),$t=i(893);const Xt=function(e){var n=e.type,t=e.disabled,r=e.children,i=e.onClick,o=e.className;return(0,$t.jsx)(Zt,{type:n,disabled:t,onClick:i,className:o,children:r})};function qt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Kt=function(n){var t,r,i=n.className,o=(t=(0,e.useState)(""),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(t,r)||function(e,n){if(e){if("string"==typeof e)return qt(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?qt(e,n):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1],l=jt();return(0,$t.jsxs)(Yn,{className:i,onSubmit:function(e){e.preventDefault(),localStorage.setItem("name",a),localStorage.setItem("pontuacao","0"),localStorage.setItem("toolTipCronograma","false"),l("/avatar",{state:{name:a}})},children:[(0,$t.jsx)("label",{htmlFor:"name",children:"NOME"}),(0,$t.jsx)("input",{type:"text",id:"name",value:a,onChange:function(e){s(e.target.value)},placeholder:"digite seu nome"}),(0,$t.jsx)(Xt,{type:"submit",disabled:!a.trim(),children:"ENTRE"})]})};var er;Wn.div(er||(er=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n"])));var nr=function(e){var n=e.className,t=e.onClick;return(0,$t.jsx)("svg",{className:n,onClick:t,xmlns:"http://www.w3.org/2000/svg",width:"55",height:"55",viewBox:"0 0 55 55",fill:"none",children:(0,$t.jsx)("path",{d:"M41.9212 35.038C42.8161 34.1431 42.8161 32.692 41.9212 31.7971L30.7099 20.5967C28.9197 18.8083 26.0189 18.809 24.2296 20.5983L13.0226 31.8053C12.1276 32.7002 12.1276 34.1513 13.0226 35.0462C13.9175 35.9413 15.3685 35.9413 16.2635 35.0462L25.8555 25.4542C26.7506 24.5593 28.2015 24.5593 29.0964 25.4542L38.6804 35.038C39.5753 35.9329 41.0263 35.9329 41.9212 35.038Z",fill:"#CD0909"})})};function tr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const rr=function(){var n,t,r=(n=(0,e.useState)(!1),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return tr(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?tr(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0],o=r[1];return(0,$t.jsxs)(Jn,{className:i?"visible":"hidden",children:[(0,$t.jsx)(nr,{className:"botao",onClick:function(){o(!i)}}),(0,$t.jsx)(Kt,{className:"input"})]})};var ir,or=Wn.article(ir||(ir=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin-top: 4rem;\n    \n  .boas-vindas {\n      color: #FFF;\n      font-family: Inter;\n      font-size: 1.5rem;\n      font-style: italic;\n      font-weight: 400;\n      line-height: normal;\n  }\n    \n    .titulo {\n        display: flex;\n        flex-direction: column;\n        \n        .titulo-principal {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 2rem;\n            font-style: normal;\n            font-weight: 600;\n            line-height: normal;\n            letter-spacing: 0.09rem;\n        }\n        \n        .titulo-secundario {\n            color: #CD0909;\n            font-family: Inter;\n            font-size: 3.4rem;\n            font-style: italic;\n            font-weight: 700;\n            line-height: normal;\n            letter-spacing: 0.15rem;\n        }\n    }\n    \n    .logo svg{\n        width: 10rem;\n        height: 2rem;\n    }\n    \n"]))),ar=function(e){var n=e.onClick,t=e.className;return(0,$t.jsxs)("svg",{className:t,onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"90",height:"14",viewBox:"0 0 90 14",fill:"none",children:[(0,$t.jsx)("path",{d:"M49.6598 2.73711V13.8267H49.3088V2.73711H49.6598Z",fill:"white"}),(0,$t.jsx)("path",{d:"M53.1698 13.8267V2.73711H53.5208V7.63213H53.5647C53.7109 7.17007 53.923 6.77117 54.2009 6.43545C54.4787 6.09612 54.806 5.83621 55.1826 5.65571C55.5592 5.47161 55.9705 5.37956 56.4165 5.37956C57.0747 5.37956 57.6469 5.56907 58.1331 5.94811C58.6194 6.32715 58.996 6.84156 59.2629 7.49135C59.5298 8.14113 59.6633 8.87394 59.6633 9.68978C59.6633 10.5092 59.5298 11.2438 59.2629 11.8936C58.9997 12.5434 58.6249 13.0578 58.1386 13.4369C57.656 13.8123 57.082 14 56.4165 14C55.9668 14 55.5537 13.9079 55.1771 13.7238C54.8041 13.5397 54.4806 13.2798 54.2064 12.9441C53.9321 12.6048 53.7182 12.2059 53.5647 11.7474H53.5208V13.8267H53.1698ZM53.5208 9.68978C53.5208 10.4406 53.6378 11.1157 53.8718 11.7149C54.1058 12.3106 54.4385 12.7835 54.87 13.1336C55.3051 13.4802 55.8206 13.6534 56.4165 13.6534C57.0125 13.6534 57.5262 13.4802 57.9577 13.1336C58.3927 12.7835 58.7273 12.3106 58.9613 11.7149C59.1953 11.1157 59.3123 10.4406 59.3123 9.68978C59.3123 8.93892 59.1935 8.26567 58.9558 7.67004C58.7218 7.07079 58.3873 6.5979 57.9522 6.25135C57.5207 5.90119 57.0089 5.72611 56.4165 5.72611C55.8242 5.72611 55.3105 5.90119 54.8754 6.25135C54.444 6.5979 54.1095 7.07079 53.8718 7.67004C53.6378 8.26567 53.5208 8.93892 53.5208 9.68978Z",fill:"white"}),(0,$t.jsx)("path",{d:"M62.1367 13.8267V5.50951H62.4877V6.7441H62.5316C62.6852 6.33979 62.9594 6.0149 63.3543 5.76942C63.7528 5.52395 64.2318 5.40121 64.7912 5.40121C65.4273 5.40121 65.9337 5.55644 66.3103 5.86689C66.6906 6.17734 66.952 6.59248 67.0946 7.11231H67.1385C67.2774 6.59248 67.5589 6.17734 67.9831 5.86689C68.4072 5.55644 68.9373 5.40121 69.5735 5.40121C70.4181 5.40121 71.0415 5.66654 71.4437 6.1972C71.8495 6.72424 72.0524 7.40471 72.0524 8.2386V13.8267H71.7014V8.2386C71.7014 7.50218 71.5333 6.90293 71.1969 6.44087C70.8605 5.9788 70.3194 5.74777 69.5735 5.74777C68.8276 5.74777 68.2573 5.98241 67.8624 6.4517C67.4675 6.91737 67.2701 7.51301 67.2701 8.2386V13.8267H66.9191V8.2386C66.9191 7.50218 66.7509 6.90293 66.4145 6.44087C66.0782 5.9788 65.537 5.74777 64.7912 5.74777C64.2939 5.74777 63.8734 5.85426 63.5298 6.06724C63.1897 6.28023 62.9301 6.57443 62.751 6.94986C62.5755 7.32529 62.4877 7.75487 62.4877 8.2386V13.8267H62.1367Z",fill:"white"}),(0,$t.jsx)("path",{d:"M78.1908 14C77.4559 14 76.8124 13.8105 76.2603 13.4314C75.7119 13.0524 75.2859 12.538 74.9825 11.8882C74.679 11.2384 74.5273 10.5056 74.5273 9.68978C74.5273 8.87394 74.679 8.14113 74.9825 7.49135C75.2896 6.84156 75.7064 6.32715 76.2329 5.94811C76.7594 5.56907 77.3535 5.37956 78.0153 5.37956C78.5052 5.37956 78.9586 5.48244 79.3754 5.6882C79.7959 5.89397 80.1615 6.17915 80.4723 6.54375C80.7831 6.90835 81.0244 7.3289 81.1962 7.80541C81.3717 8.27831 81.4595 8.78369 81.4595 9.32157V9.66812H74.7028V9.32157H81.1085C81.1085 8.65374 80.9695 8.04908 80.6917 7.50759C80.4138 6.9625 80.0409 6.52931 79.5729 6.20803C79.1049 5.88675 78.5857 5.72611 78.0153 5.72611C77.4376 5.72611 76.9148 5.89577 76.4468 6.2351C75.9788 6.57443 75.604 7.0365 75.3225 7.6213C75.041 8.20611 74.8929 8.86672 74.8783 9.60314V9.64646C74.8783 10.372 75.0062 11.0399 75.2622 11.65C75.5218 12.2564 75.8983 12.7419 76.3919 13.1065C76.8855 13.4711 77.4852 13.6534 78.1908 13.6534C78.71 13.6534 79.1451 13.5632 79.4961 13.3827C79.8507 13.2022 80.1341 12.9946 80.3462 12.76C80.5619 12.5254 80.7209 12.325 80.8233 12.159L81.1085 12.3539C80.9842 12.5633 80.7977 12.7961 80.5491 13.0524C80.3005 13.3087 79.9824 13.5307 79.5948 13.7184C79.2072 13.9061 78.7392 14 78.1908 14Z",fill:"white"}),(0,$t.jsx)("path",{d:"M86.9726 14C86.2926 14 85.6856 13.8123 85.1518 13.4369C84.6217 13.0578 84.203 12.5434 83.8959 11.8936C83.5924 11.2438 83.4407 10.5092 83.4407 9.68978C83.4407 8.87755 83.5924 8.14654 83.8959 7.49676C84.1994 6.84337 84.6162 6.32715 85.1463 5.94811C85.6802 5.56907 86.2889 5.37956 86.9726 5.37956C87.4772 5.37956 87.9397 5.48785 88.3602 5.70445C88.7843 5.91743 89.139 6.21705 89.4241 6.60331C89.7093 6.98596 89.894 7.42998 89.9781 7.93537H89.6051C89.4918 7.28197 89.1901 6.75132 88.7002 6.3434C88.2139 5.93187 87.6381 5.72611 86.9726 5.72611C86.3693 5.72611 85.8264 5.89938 85.3438 6.24593C84.8648 6.58887 84.4864 7.05996 84.2085 7.65921C83.9306 8.25484 83.7917 8.9317 83.7917 9.68978C83.7917 10.4262 83.9252 11.094 84.1921 11.6933C84.4626 12.2925 84.8374 12.769 85.3164 13.1228C85.7953 13.4766 86.3474 13.6534 86.9726 13.6534C87.4223 13.6534 87.8355 13.5614 88.2121 13.3773C88.5887 13.1896 88.9013 12.9261 89.1499 12.5867C89.4022 12.2474 89.5612 11.8521 89.6271 11.4009H90C89.9196 11.9243 89.7367 12.381 89.4516 12.7708C89.1664 13.1607 88.8099 13.4639 88.3821 13.6805C87.9543 13.8935 87.4845 14 86.9726 14Z",fill:"white"}),(0,$t.jsx)("path",{d:"M0 3.55856V0.683474H11.57V3.55856H7.56597V13.8267H4.00399V3.55856H0Z",fill:"#CD0909"}),(0,$t.jsx)("path",{d:"M12.9301 13.8267V0.683474H22.524V3.55856H16.5441V5.81756H22.03V8.69264H16.5441V10.9516H22.498V13.8267H12.9301Z",fill:"#CD0909"}),(0,$t.jsx)("path",{d:"M29.4384 13.8267H24.3164V0.683474H29.3864C30.7557 0.683474 31.9387 0.946596 32.9354 1.47284C33.9364 1.9948 34.7077 2.7478 35.2494 3.73184C35.7954 4.71159 36.0684 5.88601 36.0684 7.2551C36.0684 8.62419 35.7975 9.80075 35.2559 10.7848C34.7142 11.7645 33.9472 12.5175 32.9549 13.0438C31.9626 13.5657 30.7904 13.8267 29.4384 13.8267ZM27.9304 10.7976H29.3084C29.9671 10.7976 30.5282 10.6928 30.9919 10.4832C31.4599 10.2735 31.8152 9.91199 32.0579 9.39858C32.3049 8.88517 32.4284 8.17068 32.4284 7.2551C32.4284 6.33952 32.3027 5.62503 32.0514 5.11162C31.8044 4.59821 31.4404 4.23669 30.9594 4.02705C30.4827 3.8174 29.8977 3.71258 29.2044 3.71258H27.9304V10.7976Z",fill:"#CD0909"}),(0,$t.jsx)("path",{d:"M40.2154 0L41.5804 2.39056H41.6453L43.0266 0H45.5453L43.0591 4.10727L45.6428 8.21453H43.0591L41.6453 5.77584H41.5804L40.1666 8.21453H37.5991L40.1504 4.10727L37.6804 0H40.2154Z",fill:"#CD0909"})]})};const sr=function(){return(0,$t.jsxs)(or,{children:[(0,$t.jsx)("div",{className:"boas-vindas",children:"Seja bem-vindo ao:"}),(0,$t.jsxs)("div",{className:"titulo",children:[(0,$t.jsx)("div",{className:"titulo-principal",children:"RECONSTRUINDO"}),(0,$t.jsx)("div",{className:"titulo-secundario",children:"O FUTURO"})]}),(0,$t.jsx)("div",{className:"logo",children:(0,$t.jsx)(ar,{})})]})};var lr,dr=Wn.article(lr||(lr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    margin-top: 4rem;\n    z-index: 0;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    \n    img {\n        height: 40.3125rem;\n        z-index: 0;\n    }\n"])));const cr=function(){return(0,$t.jsx)(dr,{children:(0,$t.jsx)("img",{src:"imagens/telainicial.png"})})},ur=function(){return(0,$t.jsxs)($t.Fragment,{children:[(0,$t.jsx)(sr,{}),(0,$t.jsx)(cr,{}),(0,$t.jsx)(rr,{})]})};var mr=i(935),pr=i.t(mr,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]),new Map;const fr=n.startTransition;function hr(n){let{basename:t,children:r,future:i,window:o}=n,a=e.useRef();null==a.current&&(a.current=function(e){return void 0===e&&(e={}),function(e,n,t,r){void 0===r&&(r={});let{window:i=document.defaultView,v5Compat:o=!1}=r,a=i.history,s=Hn.Pop,l=null,d=c();function c(){return(a.state||{idx:null}).idx}function u(){s=Hn.Pop;let e=c(),n=null==e?null:e-d;d=e,l&&l({action:s,location:p.location,delta:n})}function m(e){let n="null"!==i.location.origin?i.location.origin:i.location.href,t="string"==typeof e?e:et(e);return $n(n,"No window.location.(origin|href) available to create URL for href: "+t),new URL(t,n)}null==d&&(d=0,a.replaceState(Qn({},a.state,{idx:d}),""));let p={get action(){return s},get location(){return e(i,a)},listen(e){if(l)throw new Error("A history only accepts one active listener");return i.addEventListener(Zn,u),l=e,()=>{i.removeEventListener(Zn,u),l=null}},createHref:e=>n(i,e),createURL:m,encodeLocation(e){let n=m(e);return{pathname:n.pathname,search:n.search,hash:n.hash}},push:function(e,n){s=Hn.Push;let r=Kn(p.location,e,n);t&&t(r,e),d=c()+1;let u=qn(r,d),m=p.createHref(r);try{a.pushState(u,"",m)}catch(e){if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;i.location.assign(m)}o&&l&&l({action:s,location:p.location,delta:1})},replace:function(e,n){s=Hn.Replace;let r=Kn(p.location,e,n);t&&t(r,e),d=c();let i=qn(r,d),u=p.createHref(r);a.replaceState(i,"",u),o&&l&&l({action:s,location:p.location,delta:0})},go:e=>a.go(e)};return p}((function(e,n){let{pathname:t="/",search:r="",hash:i=""}=nt(e.location.hash.substr(1));return t.startsWith("/")||t.startsWith(".")||(t="/"+t),Kn("",{pathname:t,search:r,hash:i},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}),(function(e,n){let t=e.document.querySelector("base"),r="";if(t&&t.getAttribute("href")){let n=e.location.href,t=n.indexOf("#");r=-1===t?n:n.slice(0,t)}return r+"#"+("string"==typeof n?n:et(n))}),(function(e,n){Xn("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(n)+")")}),e)}({window:o,v5Compat:!0}));let s=a.current,[l,d]=e.useState({action:s.action,location:s.location}),{v7_startTransition:c}=i||{},u=e.useCallback((e=>{c&&fr?fr((()=>d(e))):d(e)}),[d,c]);return e.useLayoutEffect((()=>s.listen(u)),[s,u]),e.createElement(Jt,{basename:t,children:r,location:l.location,navigationType:l.action,navigator:s})}var gr,Cr,Ar;pr.flushSync,"undefined"!=typeof window&&void 0!==window.document&&window.document.createElement,function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"}(gr||(gr={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Cr||(Cr={}));var vr,br=Wn.header(Ar||(Ar=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n    \n    .logo{\n        width: 9rem;\n        height: 1.375rem;\n    }\n    \n    .perfil{\n        width: 3rem;\n        height: 3rem;\n        \n        svg{\n            width: 2rem;\n        }\n    }\n"]))),yr=Wn.article(vr||(vr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 11.97244rem;\n    height: 11.97244rem;\n    flex-shrink: 0;\n    aspect-ratio: 191.56/191.56;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    &.desativado {\n        background-color: #D9D9D9;\n    }\n    \n    &.ativado {\n        background-color: #cd0909;\n    }\n"])));const Sr=function(e){var n=e.children,t=e.id,r=e.ativado,i=void 0!==r&&r,o=e.className,a=e.onClick,s=e.style,l=i?"ativado":"desativado";return(0,$t.jsx)(yr,{onClick:a,id:t,className:"".concat(l," ").concat(o),style:s,children:n})};var wr=function(e){var n=e.className;return(0,$t.jsxs)("svg",{className:n,xmlns:"http://www.w3.org/2000/svg",width:"115",height:"172",viewBox:"0 0 115 172",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_223)",children:[(0,$t.jsx)("path",{d:"M3.86174 68.0746C4.64631 67.6466 5.41051 67.504 5.96073 67.4632C-1.5182 37.2826 11.6158 7.94762 43.3554 1.16156C59.8518 -2.36393 86.0587 1.68121 91.6933 20.0321C112.337 24.6275 112.245 50.0497 106.957 66.4035C114.609 72.8126 115.312 79.4254 112.836 88.8709C110.605 97.3484 106.835 101.72 98.0922 103.666C96.7676 108.669 95.8913 113.906 93.7312 118.654C90.5114 125.746 86.5376 127.335 85.2945 133.724C84.999 135.232 83.9699 140.541 86.5478 145.289C89.8287 151.341 97.8884 154.51 106.784 153.573C104.522 157.995 90.165 164.659 84.6526 166.574C80.964 167.858 68.3395 172.576 51.68 171.832C27.8983 170.772 10.9025 159.503 3.95344 154.266L25.3204 142.996C25.9215 140.734 26.7876 136.18 25.3306 130.841C24.5256 127.886 23.2621 125.613 22.2126 124.054C18.7279 118.664 16.955 110.941 15.6304 104.674C12.543 102.963 4.88067 98.133 1.73218 88.8811C-0.631736 81.9626 -1.08006 70.7951 3.88212 68.0644L3.86174 68.0746Z",fill:"#121212"}),(0,$t.jsx)("path",{d:"M43.0905 92.4983C50.4471 91.245 52.3525 81.9931 54.3904 76.1547L59.8213 76.2973C60.1066 81.3512 64.7835 92.4983 70.6015 92.4983H92.5085C94.1184 108.791 86.4866 124.431 73.4851 134.05C46.5344 153.991 17.6784 119.306 21.1835 92.4983C27.8269 91.7035 36.7731 93.5783 43.0905 92.4983Z",fill:"#EEEEEE"}),(0,$t.jsx)("path",{d:"M80.2712 136.261C80.0164 137.311 78.5899 143.689 82.6351 149.517C85.4677 153.593 89.3906 155.122 90.8375 155.601C87.3527 158.464 74.769 168.103 56.0818 168.144C35.907 168.184 22.6202 157.017 19.4615 154.215C20.7352 154.154 25.4732 153.777 29.3146 149.986C34.8168 144.545 33.5431 136.944 33.4107 136.261C47.4005 149.14 66.1794 148.488 80.261 136.261H80.2712Z",fill:"#EEEEEE"}),(0,$t.jsx)("path",{d:"M94.5463 61.961H19.1457L21.1937 52.8009C22.4062 53.3103 23.3131 53.7485 24.7192 53.8504C43.9667 55.2463 68.3293 53.3205 82.9611 39.6261C86.9757 38.7397 96.2581 57.6 94.5565 61.961H94.5463Z",fill:"#EEEEEE"}),(0,$t.jsx)("path",{d:"M17.3422 68.3089C19.8487 65.7922 39.942 67.2289 44.6189 67.5549C49.4588 70.0105 47.7368 82.2377 43.9056 85.1824C41.0628 86.7617 24.0467 87.1387 21.1835 85.8752C17.4542 84.0412 15.0903 70.5709 17.3422 68.3089Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M67.6772 68.207L94.5463 68.5738C98.6221 70.5811 96.3091 83.7457 92.2537 85.6307C89.3294 86.9961 72.3133 86.9961 69.6845 85.2639C65.3642 82.4313 65.4152 73.5666 66.4647 69.0222L67.6874 68.207H67.6772Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M98.6221 97.5828C97.7254 89.1562 101.679 81.4022 102.698 73.1489L105.123 73.2711C113.193 76.063 106.58 96.2785 98.6221 97.5828Z",fill:"#EFEEEE"}),(0,$t.jsx)("path",{d:"M15.0598 96.5638C7.12231 96.197 3.10773 81.0761 6.03205 75.8286C11.1573 66.6481 12.6551 83.4197 13.297 86.6191C13.8982 89.6453 16.2315 92.5798 15.0598 96.5536V96.5638Z",fill:"#EDEDED"}),(0,$t.jsx)("path",{d:"M53.3205 101.455C53.3205 101.455 56.9377 104.573 60.2798 101.455",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M45.057 111.379C45.8314 111.899 50.1618 114.721 56.9886 114.66C63.5709 114.609 67.7281 111.929 68.5433 111.379",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_223",children:(0,$t.jsx)("rect",{width:"114.1",height:"171.914",fill:"white"})})})]})},Pr=function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"147",height:"172",viewBox:"0 0 147 172",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_118)",children:[(0,$t.jsx)("path",{d:"M4.40471 94.2651C4.4783 92.1941 5.4875 90.0811 7.4323 87.9051C6.01312 84.005 5.56108 80.0838 6.08671 76.1416C2.13403 70.3388 8.19971 63.2008 12.657 59.3533C10.7858 50.3756 12.4362 43.3744 19.9947 37.7502L21.8869 34.7752C16.0105 6.0657 60.4571 -2.15503 81.913 0.452053C112.21 4.14192 124.467 21.4875 130.47 48.7672C139.931 55.0957 142.465 65.7238 136.21 75.206C146.07 83.7106 148.341 92.2782 140.331 103.327C146.617 110.885 147.626 117.403 143.726 126.77L141.077 127.905C140.951 128.241 138.144 129.314 138.028 130.67C137.839 132.804 142.675 135.873 141.645 139.437C140.562 143.19 120.62 157.865 116.152 160.283C84.8354 177.313 46.1181 175.81 17.1143 154.617C2.32325 143.8 1.6925 143.379 4.40471 125.802C3.38501 124.741 3.71089 122.701 5.39288 119.663C-0.210249 113.198 -2.81734 100.121 4.40471 94.2651Z",fill:"black"}),(0,$t.jsx)("path",{d:"M74.8381 73.5135C75.5529 82.8801 82.5227 90.5542 91.5319 92.0996C99.9523 93.5398 108.52 89.3453 112.704 81.6607C111.19 144.862 42.8277 154.155 33.8396 86.9169C40.3047 90.9747 46.5491 92.9511 52.6989 92.1626C59.3112 91.3111 63.7054 87.6633 65.892 85.8552C71.2533 81.4084 73.7553 76.2152 74.8381 73.5135Z",fill:"white"}),(0,$t.jsx)("path",{d:"M107.427 152.105C108.562 154.218 98.9116 161.829 96.7881 162.995C80.0102 172.215 48.988 170.932 39.0537 152.651C48.1996 149.045 50.7751 141.329 49.6187 132.12C65.1561 143.18 82.2283 144.304 96.9037 131.059C90.9327 144.136 106.743 150.822 107.427 152.105Z",fill:"white"}),(0,$t.jsx)("path",{d:"M69.4662 25.0091C69.9603 25.2299 72.3361 30.9697 77.2139 32.4835C82.0917 33.9973 90.6804 31.9894 94.2546 35.4164C96.6514 37.7187 97.177 46.2758 98.796 49.7975C100.499 53.4873 104.063 53.0143 104.262 56.4098L39.0958 55.348C47.8001 51.7107 47.6424 39.8527 50.1338 36.4361C51.0379 35.1852 54.8855 34.8593 57.009 32.7988C60.1837 29.7397 63.0852 22.1918 69.4662 24.9986V25.0091Z",fill:"white"}),(0,$t.jsx)("path",{d:"M82.4176 64.62C90.9221 64.5044 99.4267 64.3887 107.931 64.2731C109.508 64.2521 110.791 65.5346 110.791 67.1114C110.77 75.8368 106.396 83.0483 100.11 85.361C94.9694 87.2533 90.2388 85.2454 89.5555 84.9511C83.5319 82.2914 79.6002 75.4163 79.6423 67.3427C79.6423 65.8394 80.9143 64.641 82.4176 64.62Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M69.7921 66.67C65.7764 90.9747 31.9053 93.9182 33.6188 65.1667C33.7029 63.8106 34.8593 62.7593 36.2259 62.8014C46.6122 63.1063 56.988 63.4111 67.3743 63.7055C68.9091 63.7475 70.0444 65.1562 69.7921 66.67Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M69.6975 100.552C69.6975 100.552 73.4294 103.768 76.8775 100.552",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M61.1719 110.791C61.9709 111.327 66.4387 114.239 73.482 114.176C80.273 114.123 84.5621 111.358 85.4031 110.791",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_118",children:(0,$t.jsx)("rect",{width:"146.018",height:"171.91",fill:"white"})})})]})},Er=function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"147",height:"149",viewBox:"0 0 147 149",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_130)",children:[(0,$t.jsx)("path",{d:"M97.58 120.59C102.79 121.1 115.56 128.03 130.5 140.1C128.54 141.49 126.59 142.89 124.63 144.28C118.69 145.3 110.83 146.47 101.54 147.38C94.33 148.08 85.21 149 73.57 148.88C51.8 148.64 33.47 145.18 19.82 141.55C17.59 140.84 15.36 140.13 13.13 139.41C15.87 135.27 21.62 128.94 30.57 124.09C35.71 121.31 40.14 120.47 43.77 120.45C50.96 120.41 64.24 123.52 93.11 120.44C93.11 120.44 95.16 120.35 97.57 120.58L97.58 120.59Z",fill:"white"}),(0,$t.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",fill:"black"}),(0,$t.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",stroke:"black",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M16.16 45.99L18.09 46.32C25.9 -7.21003 117.19 -10.62 127.12 43.1C127.48 43.87 128.3 44.03 129.16 43.99C130.55 44.19 131.88 45.52 133.16 47.99C134.61 48.18 136.67 48.65 138.66 49.99C148.02 56.27 149.2 77.23 138.9 88.66C134.18 93.91 128.04 96.04 123.6 96.94C122.65 99.61 120.48 104.57 115.69 109.03C112.16 112.31 108.56 114.07 106.16 115.01C109.99 116.81 115.3 119.86 120.35 125C125.77 130.5 132.65 140.18 130.18 143.39C129.55 144.21 128.11 144.87 124.62 144.29C115.89 127.58 106.98 122.63 100.28 121.31C90.52 119.39 86.78 125.45 71.34 125.22C56.77 125 53.64 119.75 44.11 121.48C37.81 122.62 28.96 126.8 19.81 141.56C15.8 142.09 14.13 141.38 13.47 140.38C11.33 137.11 18.42 128.37 24.13 123.47C30.35 118.14 36.87 115.7 41.15 114.5C38.44 112.92 35.06 110.59 31.69 107.19C26.96 102.42 24.2 97.51 22.63 94.08C20.06 94.08 16.22 93.67 12.34 91.58C2.93 86.49 -2.11 73.95 0.840001 63.17C3.02 55.19 8.9 50.64 11.27 49.01C12.06 48.35 13.03 47.64 14.2 46.97C14.89 46.58 15.55 46.25 16.16 45.99Z",fill:"black"}),(0,$t.jsx)("path",{d:"M45.79 21.11C46.76 20.49 64.97 10.58 86.1 16.3C118.49 25.07 137.63 64.34 115.97 97.29C101.6 119.16 66.6 118.67 46.62 109.02C42.8 107.18 36.86 104.2 31.82 97.84C15.8 77.61 20.31 37.33 45.79 21.11Z",fill:"white"}),(0,$t.jsx)("path",{d:"M126.17 89.9799C124.24 88.5699 127.9 83.6199 128.84 73.8999C130.06 61.3699 125.49 54.0999 128.64 52.0199C130.88 50.5399 135.24 52.8899 137.64 55.1299C144.54 61.5699 143.69 74.9999 137.68 83.0099C134.13 87.7399 128.14 91.4199 126.16 89.9799H126.17Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M20.18 89.9799C22.11 88.5699 18.45 83.6199 17.51 73.8999C16.29 61.3699 20.86 54.0999 17.71 52.0199C15.47 50.5399 11.11 52.8899 8.71 55.1299C1.81 61.5699 2.66 74.9999 8.67 83.0099C12.22 87.7399 18.21 91.4199 20.19 89.9799H20.18Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M58.71 39.53C75.92 37.11 108.78 38.15 115.24 58.48C130.99 108.03 49.73 105.35 36.43 88.29C21.6 69.28 36.13 42.71 58.72 39.53H58.71Z",fill:"black"}),(0,$t.jsx)("path",{d:"M54.09 78.49C59.3201 78.49 63.56 74.2501 63.56 69.02C63.56 63.7898 59.3201 59.55 54.09 59.55C48.8599 59.55 44.62 63.7898 44.62 69.02C44.62 74.2501 48.8599 78.49 54.09 78.49Z",fill:"#EF2D3F"}),(0,$t.jsx)("path",{d:"M93.73 78.73C98.9601 78.73 103.2 74.4901 103.2 69.26C103.2 64.0298 98.9601 59.79 93.73 59.79C88.4999 59.79 84.26 64.0298 84.26 69.26C84.26 74.4901 88.4999 78.73 93.73 78.73Z",fill:"#EF2D3F"}),(0,$t.jsx)("path",{d:"M18.63 45.0599C19.35 41.4399 22.71 27.1899 37.94 17.1199C52.06 7.77994 67.33 8.03994 73.63 8.13994C79.78 8.23994 98.28 8.79994 113.26 21.1899C124.01 30.0899 127.43 40.5199 128.58 45.0599",stroke:"#EB0028",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_130",children:(0,$t.jsx)("rect",{width:"146.17",height:"148.89",fill:"white"})})})]})},xr={homem1:wr,homem2:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"123",height:"154",viewBox:"0 0 123 154",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_39)",children:[(0,$t.jsx)("path",{d:"M1.83001 153.55C8.99001 148.5 28.88 145.89 30.88 136.4C33.74 122.83 26.82 120.61 22.77 110.04C20.9 105.17 20.02 99.96 18.94 94.89C6.51001 95.44 1.74001 79.42 1.12001 69.38C0.67001 62.14 0.86001 57.4 7.77001 53.82C9.98001 52.67 11.51 53.89 12.72 50.2C14.11 45.98 13.21 39.4 14.51 34.07C25.83 -12.32 99.1 -11.23 108.35 36.65C109.03 40.15 108.79 47.58 109.66 49.67C109.75 49.9 112.06 53.73 112.27 53.87C112.87 54.25 115.03 53.94 116.72 54.8C126.51 59.76 120.84 81.57 115.61 88.61C112.43 92.9 109.02 94.9 103.71 95.69C102.18 103.36 100.09 110.97 95.97 117.68C94.98 119.3 91.77 122.41 91.52 123.26C90.68 126.1 91.21 136.25 92.67 139.01C95.81 144.95 115.5 149.35 121.46 153.55H92.81C91.6 152.82 91.84 151.35 93.53 149.15C89.09 145.72 85.34 140.99 84.3 135.84C69.6 149.89 52.16 147.22 37.81 134.64C37.7 141.43 33.16 145.76 28.36 149.7C29.74 151.18 29.98 152.46 29.06 153.55H1.83001Z",fill:"#1E1D1E"}),(0,$t.jsx)("path",{d:"M29.05 153.55L26.2 148.95C32.96 144.91 37.31 139.73 36.22 131.35C46.05 139.01 54.54 146.25 67.91 143.35C75.15 141.78 81.11 136.97 86.35 132.07C85.2 139.78 89.37 144.64 95.63 148.26L92.81 153.56H29.05V153.55Z",fill:"#FBFBFB"}),(0,$t.jsx)("path",{d:"M100.67 84.79C98.33 102.45 92.26 121.78 75.98 131.37C45.8 149.14 22.19 111.11 22.97 84.78C30.52 86.22 43.86 88.15 50.49 83.67C54.19 81.16 55.67 76.3 60.92 76.14C66.96 75.96 67.51 80.3 71.06 83.25C77.32 88.44 92.94 86.14 100.67 84.79Z",fill:"#FBFBFB"}),(0,$t.jsx)("path",{d:"M102.83 46.82C76.37 43.77 49.46 43.33 23.72 47.01L19.74 46.82C19.47 46.71 18.82 47.05 18.41 46.74C18.1 15.02 48.77 -1.58001 77.41 8.12999C88.12 11.76 97.21 20.2 101.22 30.88C102.43 34.09 105.17 44.44 102.82 46.83L102.83 46.82Z",fill:"#FBFBFB"}),(0,$t.jsx)("path",{d:"M100.68 50.4C104.76 51.2 106.81 53.48 107.84 57.56C104.41 56.36 100.85 55.47 97.25 54.91C78.27 51.95 44.91 51.87 25.92 54.8C22.45 55.34 19.02 56.15 15.8 57.58C15.44 52.77 18.5 51.24 22.6 50.41C47.9 46.48 75.37 46.51 100.68 50.41V50.4Z",fill:"#F9F9F9"}),(0,$t.jsx)("path",{d:"M104.27 90.51C105.08 88.45 104.8 84.94 105.71 83.19C106.16 82.34 107.76 81.92 108.59 80.87C111.74 76.88 112.44 65.3 112.87 60.07C112.96 59.01 112.29 57.99 113.93 58.29C118.78 61.68 117.22 68.44 116.35 73.58C115.15 80.59 112.49 89.5 104.28 90.51H104.27Z",fill:"#FAFAFA"}),(0,$t.jsx)("path",{d:"M10.43 58.28C10.65 62.38 11.21 67.2 12.43 72.51C14 79.32 16.22 85.01 18.32 89.43C9.59002 89.99 6.65002 76.87 6.14002 70.09C5.85002 66.2 5.01002 58.15 10.43 58.28Z",fill:"#FAFAFA"}),(0,$t.jsx)("path",{d:"M102.83 46.82C102.18 47.48 102.2 47.61 101.11 47.58C95.27 47.43 87.93 45.64 81.74 45.36C69.61 44.81 54.38 44.75 42.28 45.36C36.09 45.67 29.04 47.43 22.94 47.6C21.19 47.65 21.05 47.35 19.74 46.82L50.15 43.92C67.78 44.03 85.51 43.47 102.83 46.82Z",fill:"#0F0F0F"}),(0,$t.jsx)("path",{d:"M22.6 50.4L22.26 49.71C48.32 46.57 74.96 46.58 101.02 49.71L100.68 50.4C83.79 47.07 39.39 47.02 22.6 50.4Z",fill:"#0A090A"}),(0,$t.jsx)("path",{d:"M57.5 98.03C57.5 98.03 61.05 101.09 64.33 98.03",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M49.39 107.77C50.15 108.28 54.4 111.05 61.1 110.99C67.56 110.94 71.64 108.31 72.44 107.77",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M15.81 57.57C15.16 60.06 14.11 65.41 15.75 71.87C17.46 78.61 21.18 82.93 22.98 84.77C36.06 90.14 43.6 88.79 48.18 86.16C54.42 82.58 55.81 76.23 60.93 76.12C66.25 76 68.31 82.75 73.97 86.41C79.43 89.94 89.4 91.35 109.22 81.24C110.4 78.26 111.63 74.38 112.37 69.75C113.07 65.34 113.14 61.44 112.98 58.34C108.28 56.94 101.71 55.25 93.74 54C91.07 53.58 85.15 52.71 65.29 52.32C37.96 51.79 28.93 52.93 19.36 56.24C17.83 56.77 16.6 57.24 15.82 57.55L15.81 57.57Z",fill:"#EB0028"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_39",children:(0,$t.jsx)("rect",{width:"121.07",height:"153.55",fill:"white",transform:"translate(0.980011)"})})})]})},homem3:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"123",height:"169",viewBox:"0 0 123 169",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_55)",children:[(0,$t.jsx)("path",{d:"M67.29 0.220002C71.05 0.430002 72.11 4.2 74.19 4.8C77.68 5.81 81.39 4.69 84.72 5.29C90.34 6.31 99.1 12.57 102.29 17.22C104.31 18.04 105.82 20.1 106.83 23.41C119.5 32.81 118.75 50.32 115.79 64.09C128.98 75.84 121.07 102.23 103.9 106.01L98.81 120.26C94.82 125.66 87.57 136.06 95.04 141.4L111.28 147.93C111.98 148.15 113.34 148.67 113.5 149.61C113.62 150.34 112.98 151 112.75 151.23C95.16 169.34 61.69 168.99 61.69 168.99C38.09 168.74 19.72 159.68 9.28 153.22C8.01 151.83 8.47 150.66 9.47 149.2L23.89 143.26C35.36 137.24 27.36 125.04 22.14 117.44L18.29 105.54C0.750002 101.43 -6.8 74.61 7.7 63.15C4.6 57.75 4.8 53.11 7.05 47.43C3.33 38.15 7.26 30.96 14.94 25.33C16.13 11.21 38.09 0.710002 51.04 2.75C55.76 0.400002 61.18 -0.449998 67.29 0.220002Z",fill:"black"}),(0,$t.jsx)("path",{d:"M98.28 94.23C96.51 128.1 61.42 156.84 34.78 123.23C30.25 117.52 23.01 101.76 23.28 94.71C23.41 91.26 29.66 96.22 32.07 96.94C53.04 103.2 77.69 100.54 98.29 94.22L98.28 94.23Z",fill:"white"}),(0,$t.jsx)("path",{d:"M22.29 83.22C21.23 77.64 20.17 71.68 21.13 65.96C42.67 65.78 64.06 65.54 85.29 65.22C91.11 65.11 101.48 63.02 102.27 70.81C102.53 73.39 100.25 82.92 98.75 85.19C92.13 95.23 56.02 95.19 44.92 94.09C37.25 93.32 25.75 90.55 22.28 83.23L22.29 83.22Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M26.29 59.22C25.31 52.18 28.11 51.61 31.03 46.46C31.78 45.13 32.17 41.49 32.39 41.33C33.01 40.87 36.5 41.47 38.34 40.78C40.75 39.89 42.53 36.69 43.98 36.38C45.66 36.02 47.84 37.48 50.52 37.04C52.62 36.7 56.41 33.38 56.79 33.39C57.27 33.4 60.63 37.85 64.9 38.17C68.23 38.42 75.77 34.9 76.26 35.22C76.5 35.37 76.8 38.82 78.73 40.27C81.77 42.56 87.53 41.47 89.1 42.4C89.55 42.67 91.19 47.83 92.55 48.93C93.91 50.03 96.93 50 97.17 50.32C97.65 50.96 97.06 57.36 98.27 59.21C90.95 59.26 83.59 59.17 76.27 59.21H26.29V59.22Z",fill:"white"}),(0,$t.jsx)("path",{d:"M85.28 134.22C84.94 138.55 85.55 142.45 87.85 146.16C89.13 148.22 92.16 146.89 90.79 151.17C84.9 169.6 36.86 170.25 29.39 149.6C28.91 147.59 33.42 147.71 35.07 144.5C36.72 141.29 36.26 137.63 36.29 134.22C41.9 136.68 45.79 141.55 52.24 142.76C64.6 145.07 75.98 142.73 85.27 134.22H85.28Z",fill:"white"}),(0,$t.jsx)("path",{d:"M103.29 97.21C106.04 90.6 104.97 77.96 107.28 71.94C107.67 70.91 109.77 70.24 110.64 70.45C118.47 72.33 113.85 98.52 103.3 97.21H103.29Z",fill:"white"}),(0,$t.jsx)("path",{d:"M18.28 97.22C10.16 94.09 4.65001 80 8.98001 72.49C14.91 62.2 17.21 94.4 18.28 97.22Z",fill:"white"}),(0,$t.jsx)("path",{d:"M85.29 65.22C85.11 65.22 83.66 66.26 81.91 66.29C61.72 66.63 41.47 65.89 21.28 66.21L22.29 83.22C20.53 79.5 18.07 65.97 22.22 64.69L85.29 65.22Z",fill:"#F23037"}),(0,$t.jsx)("path",{d:"M76.29 59.22H26.29C42.94 59.14 59.64 59.33 76.29 59.22Z",fill:"#000001"}),(0,$t.jsx)("path",{d:"M58.77 106.14C58.77 106.14 62.32 109.2 65.6 106.14",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M50.66 115.89C51.42 116.4 55.67 119.17 62.37 119.11C68.83 119.06 72.91 116.43 73.71 115.89",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_55",children:(0,$t.jsx)("rect",{width:"122.34",height:"168.99",fill:"white",transform:"translate(0.0499878)"})})})]})},mulher1:Pr,mulher2:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"138",height:"165",viewBox:"0 0 138 165",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_70)",children:[(0,$t.jsx)("path",{d:"M84.02 2.54999C93.17 0.859988 103.35 5.16999 107.79 14.15C118.95 16.19 132.43 33.66 132.82 44.4L132.08 53.3C139.32 60.73 137.84 69.08 132.98 77.32C137.7 86.58 134.14 92.9 127.29 99.72C123.9 109.55 118.07 114.36 107.59 114.36L104.12 121.54C91.99 132.97 95.63 142.8 111.28 146.27C115.24 147.44 116.82 149.2 116.03 151.54C103.91 159.24 92.19 162.93 78.03 164.54C76.77 164.59 76.1 164.26 76.03 163.54L76.29 162.17C79.75 161.19 97.12 154.51 96.66 150.52C90.71 148.46 88.76 143.82 88.5 137.52C77.06 144.76 62.79 145.33 51.42 137.77C50.67 143.68 49.31 149.76 42.33 150.39C46.54 156.51 54.35 159.88 61.43 161.41L63.04 163.54C63.08 165.04 59.56 164.88 58.04 164.54C44.02 162.87 33.52 158.59 21.03 152.49C20.67 151.62 22.05 150.68 22.04 150.54L22.63 148.21L34.88 144.17C47.59 139.7 42.28 128.84 34.94 121.53L31.21 114.27C19.71 114.98 10.11 108.44 11.32 96.1C3.14999 90.82 1.19999 82.41 4.82999 73.61C-1.27001 65.49 -2.60001 53.31 6.88999 47.43C7.43999 37 7.91999 28 19.55 24.39C22.18 15.39 27.24 10.44 36.78 10.6C44.21 1.92999 54.63 -1.42001 68.02 0.549988C74.29 -0.150012 78.26 1.04999 84.02 2.54999Z",fill:"black"}),(0,$t.jsx)("path",{d:"M72.02 77.55C71.44 100.51 104.15 101.92 106.04 79.55C107.86 80.19 107.16 85.49 107.01 87.03C106 97.58 102.57 111.55 96 120.02C66.97 157.49 30.78 120.23 33.04 84.55L40.69 93.38C53.62 101.31 66.87 91.5 67.03 77.55H72.02Z",fill:"white"}),(0,$t.jsx)("path",{d:"M63.02 163.55C56.35 163.53 41.84 156.6 40.04 150.03C39.33 147.44 46.2 149.02 46.88 145.91C49.34 142.43 49.22 138.65 49.03 134.56C52.95 135.85 56.1 138.67 60.21 139.87C70.58 142.92 81.85 140.77 90.02 133.55C90.84 137.85 90.24 144.27 94.05 147.03C95.8 148.3 99.5 147.93 98.98 149.98C97.17 157.18 82.8 162.87 76.03 163.55C71.89 163.96 67.17 163.13 63.03 163.55H63.02Z",fill:"white"}),(0,$t.jsx)("path",{d:"M81.96 44.6C82.04 52.3 92.62 51.2 94.86 52.7C95.13 52.88 96.17 56.92 97.48 58.59C101.44 63.66 109.47 63.19 107.02 73.54C100.32 65.49 94.5 59.71 82.99 63C75.74 65.07 75.2 74.5 68.58 73.57C65.28 73.11 64.48 68.72 62.43 66.64C56.98 61.11 47.5 59.81 40.68 63.69C36.8 65.9 35.13 71.11 31.03 72.53C30.48 63.58 36.57 64.43 40.05 60.06C41.52 58.22 42.84 52.9 43.18 52.69C43.98 52.19 46.32 52.76 48 52.02C49.68 51.28 51.59 47.58 52.97 47.08C54.04 46.7 56.94 47.72 59.26 47.33C61.75 46.91 66.11 43.87 66.51 43.87C67.23 43.87 70.52 46.51 73.57 46.59C77.02 46.68 78.75 44.43 81.95 44.59L81.96 44.6Z",fill:"#EEEEEE"}),(0,$t.jsx)("path",{d:"M45.73 67.76C67.18 62.85 65.04 93 47.59 90.48C36.03 88.81 34.6 70.31 45.73 67.76Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M86.77 67.78C104.46 64.67 105.24 89.9 89.44 90.49C75.42 91.01 73.04 70.2 86.77 67.78Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M29.02 99.54C19.08 100.25 13.42 77.12 25.04 79.01C27.93 80.76 27.69 95.64 29.02 99.54Z",fill:"white"}),(0,$t.jsx)("path",{d:"M110.03 101.55C111.19 97.74 111.75 72.03 119.02 82.05C124.28 89.3 117.67 99.39 110.03 101.55Z",fill:"white"}),(0,$t.jsx)("path",{d:"M66.09 102.23C66.09 102.23 69.64 105.29 72.92 102.23",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M57.98 111.97C58.74 112.48 62.99 115.25 69.69 115.19C76.15 115.14 80.23 112.51 81.03 111.97",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_70",children:(0,$t.jsx)("rect",{width:"137.07",height:"164.77",fill:"white"})})})]})},mulher3:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"129",height:"166",viewBox:"0 0 129 166",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_102)",children:[(0,$t.jsx)("path",{d:"M77.22 1.07002C105.8 1.04002 124.09 36.54 118.98 62.1C128.74 70.09 126.12 80.65 122.35 91C122.92 104.03 125.02 117.16 128.65 130.4C129.04 131.85 128.46 133.49 126.94 135.32C126.59 145.14 100.12 159.97 90.15 161.18C90.84 158.72 92.91 156.61 96.38 154.87C86.86 151.98 84.51 145.73 84.45 136.24C72.23 144.44 55.48 146.05 43.32 136.74C44.11 146.73 39.59 151.37 30.88 154.65C33.99 156.65 35.85 158.82 36.45 161.18C23.94 157.98 10.53 149.56 1.64999 140.3L-0.0100098 136.01C3.45999 120.82 5.18999 105.75 5.19999 90.8C0.19999 78.53 1.41999 69.32 8.84999 63.17C6.85999 47.25 12.45 30.8 22.29 17.91C28.11 10.29 37.16 1.21002 47.38 2.07002C55.92 -0.349979 68.48 -0.599979 77.21 1.08002L77.22 1.07002Z",fill:"black"}),(0,$t.jsx)("path",{d:"M36.46 161.18C18.98 151.18 35.94 153.78 39.85 146.17C41.99 142.02 41.07 133.86 41.44 133.33C41.75 132.9 48.28 138.03 50.39 138.78C72.31 146.59 85.01 131.81 86.16 133.33C86.63 133.95 86.07 144.45 89.29 148.61C93.12 153.56 107.94 151.82 90.15 161.18C79.66 166.7 46.82 167.11 36.46 161.18Z",fill:"white"}),(0,$t.jsx)("path",{d:"M103.07 89.59C104.94 91.9 94.79 115.35 91.64 119.42C63.64 155.6 26.29 123.76 24.51 88.1C34.25 97.29 48.85 98.9 58.36 88.12C60.65 85.52 63.21 77.58 63.79 77.65C64.99 77.79 67.43 90.63 80.39 93.86C93.07 97.03 102.33 88.66 103.07 89.59Z",fill:"white"}),(0,$t.jsx)("path",{d:"M29.99 55.77C28.94 55.96 28.08 56.14 27.51 56.27C33.15 54.4 42.73 26.59 44.39 26.93C45.61 27.18 56.62 40.4 62.62 44.02C71.02 49.08 80.3 52.81 90.14 53.79C82.07 54.16 71.42 61.07 63.78 60.82C58.23 60.64 57.68 57.27 49.88 55.77C40.68 53.99 32.24 55.37 29.99 55.77Z",fill:"white"}),(0,$t.jsx)("path",{d:"M81.94 60.99C113.68 55.29 107.99 96.54 80.96 88.33C66.41 83.91 65.31 63.98 81.94 60.99Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M36.2 60.98C56.6 58.07 66.42 79.96 49.08 87.79C25.94 98.24 13.85 64.18 36.2 60.98Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M108.06 95.55C110.11 90.81 107.5 67.38 114.35 69.82C120.95 72.18 115.5 93.57 108.06 95.55Z",fill:"white"}),(0,$t.jsx)("path",{d:"M20.54 95.54C13.09 94.05 6.27001 71.55 14.24 69.83C20.13 68.56 17.61 91.23 20.54 95.54Z",fill:"white"}),(0,$t.jsx)("path",{d:"M96.84 68.96C105.47 79.97 79.9 91.46 75.67 76.7C72.76 66.53 92 62.79 96.84 68.96Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M36.2 66.9501C47.05 64.6301 58.92 73.1401 47.89 81.6101C34.67 91.7701 22.94 69.7801 36.2 66.9501Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M60.97 104.15C60.97 104.15 64.52 107.21 67.8 104.15",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M52.86 113.89C53.62 114.4 57.87 117.17 64.57 117.11C71.03 117.06 75.11 114.43 75.91 113.89",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_102",children:(0,$t.jsx)("rect",{width:"128.77",height:"165.48",fill:"white"})})})]})},mulher4:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"114",height:"139",viewBox:"0 0 114 139",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_84)",children:[(0,$t.jsx)("path",{d:"M68.3549 0.72242C93.648 0.698069 109.834 24.6843 105.321 41.9415C113.957 47.3394 111.636 54.4744 108.3 61.4633C108.803 70.2623 110.662 79.1344 113.876 88.0796C114.217 89.0617 113.714 90.1657 112.358 91.4076C110.743 93.7859 106.636 99.1433 99.2732 102.325C93.3558 104.882 88.0715 104.842 85.3117 104.614C76.886 102.658 74.7999 98.4452 74.7512 92.0326C63.9391 97.5685 49.1171 98.6562 38.3456 92.3736C39.0437 99.1189 35.0419 102.26 27.3387 104.468C24.5789 104.72 20.431 104.744 15.6662 103.364C8.44193 101.27 3.71773 97.0734 1.46927 94.7762L0.00817871 91.8784C3.07647 81.6183 4.61874 71.4393 4.62686 61.3416C0.202991 53.0539 1.28258 46.8361 7.8575 42.6801C6.09607 31.9249 11.0394 20.8206 19.7573 12.1108C24.8955 6.9483 32.9071 0.819826 41.9497 1.39615C49.5068 -0.235407 60.6273 -0.405868 68.3549 0.72242Z",fill:"black"}),(0,$t.jsx)("path",{d:"M61.5283 1.26627C64.5803 1.43673 65.4407 4.49691 67.1291 4.98394C69.962 5.80378 72.9735 4.89465 75.6765 5.38168C80.2384 6.20964 87.349 11.291 89.9384 15.0655C91.5781 15.7311 92.8038 17.4032 93.6236 20.09C103.908 27.7202 103.299 41.9334 100.897 53.1107C111.603 62.6484 105.182 84.0697 91.2453 87.138L87.1136 98.7049C83.8749 103.088 77.9899 111.53 84.0535 115.865L97.2358 121.165C97.804 121.344 98.9079 121.766 99.0378 122.529C99.1352 123.121 98.6157 123.657 98.429 123.844C84.1509 138.544 56.9826 138.26 56.9826 138.26C37.8261 138.057 22.9148 130.703 14.4405 125.459C13.4096 124.331 13.783 123.381 14.5947 122.196L26.2997 117.374C35.6101 112.488 29.1164 102.585 24.8792 96.4159L21.7541 86.7565C7.50841 83.4122 1.37993 61.6419 13.1499 52.3477C10.6335 47.9644 10.7959 44.1981 12.6222 39.5875C9.60264 32.0548 12.7927 26.2185 19.0267 21.6485C19.9926 10.1789 37.818 1.6559 48.3297 3.3118C52.161 1.40426 56.5606 0.714302 61.5201 1.25815L61.5283 1.26627Z",fill:"black"}),(0,$t.jsx)("path",{d:"M34.8633 132.667C20.6745 124.282 34.4412 126.466 37.6151 120.077C39.3521 116.595 38.6054 109.752 38.9057 109.314C39.1573 108.957 44.4579 113.259 46.1706 113.884C63.9634 120.435 74.2723 108.04 75.2057 109.314C75.5873 109.834 75.1327 118.641 77.7464 122.123C80.8553 126.271 92.885 124.81 78.4445 132.667C69.9296 137.294 43.2727 137.635 34.8633 132.667Z",fill:"white"}),(0,$t.jsx)("path",{d:"M88.0877 76.9915C90.7258 78.9721 82.8116 115.386 58.3464 116.368C42.1282 117.017 25.4961 101.822 25.2607 81.115C33.0857 88.5747 44.8232 89.8816 52.4614 81.1313C54.304 79.0208 56.3577 72.5758 56.8285 72.6326C57.7944 72.7462 59.7507 83.1687 70.165 85.7905C78.4526 87.8848 86.3588 75.6927 88.0877 76.9915Z",fill:"black"}),(0,$t.jsx)("path",{d:"M88.3962 76.3421C89.9141 78.2172 81.6751 97.252 79.1182 100.556C56.3901 129.924 26.0724 104.079 24.6276 75.1327C32.5337 82.5924 44.3848 83.8992 52.1042 75.1489C53.9631 73.0384 56.0411 66.5934 56.5119 66.6502C57.4859 66.7639 59.4665 77.1863 69.9864 79.8082C80.279 82.3813 87.7955 75.5872 88.3962 76.3421Z",fill:"white"}),(0,$t.jsx)("path",{d:"M29.0676 48.8816C28.2153 49.0359 27.5172 49.182 27.0546 49.2875C31.6327 47.7696 39.4089 25.1957 40.7564 25.4717C41.7467 25.6746 50.6837 36.4055 55.554 39.344C62.3724 43.4513 69.9052 46.479 77.8925 47.2744C71.3419 47.5748 62.6971 53.1838 56.4956 52.9808C51.9906 52.8347 51.5441 50.0992 45.2127 48.8816C37.7449 47.4368 30.894 48.557 29.0676 48.8816Z",fill:"white"}),(0,$t.jsx)("path",{d:"M71.2365 53.1188C97.0004 48.492 92.3817 81.9754 70.441 75.3112C58.6305 71.7234 57.7376 55.5459 71.2365 53.1188Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M34.1165 53.1107C50.6756 50.7486 58.6466 68.5171 44.5714 74.8729C25.7883 83.3553 15.9746 55.7082 34.1165 53.1107Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M92.4385 81.1718C94.1025 77.3243 91.9839 58.3057 97.5442 60.2863C102.902 62.202 98.4777 79.5646 92.4385 81.1718Z",fill:"white"}),(0,$t.jsx)("path",{d:"M21.397 81.1637C15.3497 79.9542 9.81374 61.6906 16.2831 60.2944C21.0642 59.2635 19.0186 77.6652 21.397 81.1637Z",fill:"white"}),(0,$t.jsx)("path",{d:"M83.331 59.5882C90.3362 68.5252 69.5805 77.8519 66.147 65.8709C63.7849 57.6157 79.4023 54.5799 83.331 59.5882Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M34.1084 57.9648C42.9156 56.0816 52.5507 62.9893 43.5974 69.8646C32.8665 78.1116 23.345 60.2619 34.1084 57.9648Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M54.2147 88.1526C54.2147 88.1526 57.0963 90.6364 59.7588 88.1526",stroke:"#141313",strokeWidth:"4",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M47.6317 96.0587C48.2486 96.4727 51.6984 98.7212 57.1369 98.6725C62.3806 98.6319 65.6925 96.497 66.3418 96.0587",stroke:"#141313",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_84",children:(0,$t.jsx)("rect",{width:"113.973",height:"138.26",fill:"white"})})})]})},robo1:Er,robo2:function(e){return e.className,(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"147",height:"149",viewBox:"0 0 147 149",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_127_144)",children:[(0,$t.jsx)("path",{d:"M97.58 120.59C102.79 121.1 115.56 128.03 130.5 140.1C128.54 141.49 126.59 142.89 124.63 144.28C118.69 145.3 110.83 146.47 101.54 147.38C94.33 148.08 85.21 149 73.57 148.88C51.8 148.64 33.47 145.18 19.82 141.55C17.59 140.84 15.36 140.13 13.13 139.41C15.87 135.27 21.62 128.94 30.57 124.09C35.71 121.31 40.14 120.47 43.77 120.45C50.96 120.41 64.24 123.52 93.11 120.44C93.11 120.44 95.16 120.35 97.57 120.58L97.58 120.59Z",fill:"white"}),(0,$t.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",fill:"black"}),(0,$t.jsx)("path",{d:"M13.14 49.14C13.94 44.57 17.63 26.58 34.37 13.87C49.91 2.07997 66.7 2.39997 73.63 2.52997C80.39 2.65997 100.75 3.35997 117.22 19.01C129.05 30.24 132.8 43.42 134.07 49.14",stroke:"black",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M16.16 45.99L18.09 46.32C25.9 -7.21003 117.19 -10.62 127.12 43.1C127.48 43.87 128.3 44.03 129.16 43.99C130.55 44.19 131.88 45.52 133.16 47.99C134.61 48.18 136.67 48.65 138.66 49.99C148.02 56.27 149.2 77.23 138.9 88.66C134.18 93.91 128.04 96.04 123.6 96.94C122.65 99.61 120.48 104.57 115.69 109.03C112.16 112.31 108.56 114.07 106.16 115.01C109.99 116.81 115.3 119.86 120.35 125C125.77 130.5 132.65 140.18 130.18 143.39C129.55 144.21 128.11 144.87 124.62 144.29C115.89 127.58 106.98 122.63 100.28 121.31C90.52 119.39 86.78 125.45 71.34 125.22C56.77 125 53.64 119.75 44.11 121.48C37.81 122.62 28.96 126.8 19.81 141.56C15.8 142.09 14.13 141.38 13.47 140.38C11.33 137.11 18.42 128.37 24.13 123.47C30.35 118.14 36.87 115.7 41.15 114.5C38.44 112.92 35.06 110.59 31.69 107.19C26.96 102.42 24.2 97.51 22.63 94.08C20.06 94.08 16.22 93.67 12.34 91.58C2.93 86.49 -2.11 73.95 0.839995 63.17C3.02 55.19 8.9 50.64 11.27 49.01C12.06 48.35 13.03 47.64 14.2 46.97C14.89 46.58 15.55 46.25 16.16 45.99Z",fill:"black"}),(0,$t.jsx)("path",{d:"M45.79 21.11C46.76 20.49 64.97 10.58 86.1 16.3C118.49 25.07 137.63 64.34 115.97 97.29C101.6 119.16 66.6 118.67 46.62 109.02C42.8 107.18 36.86 104.2 31.82 97.84C15.8 77.61 20.31 37.33 45.79 21.11Z",fill:"white"}),(0,$t.jsx)("path",{d:"M126.17 89.98C124.24 88.57 127.9 83.62 128.84 73.9C130.06 61.37 125.49 54.1 128.64 52.02C130.88 50.54 135.24 52.89 137.64 55.13C144.54 61.57 143.69 75 137.68 83.01C134.13 87.74 128.14 91.42 126.16 89.98H126.17Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M20.18 89.98C22.11 88.57 18.45 83.62 17.51 73.9C16.29 61.37 20.86 54.1 17.71 52.02C15.47 50.54 11.11 52.89 8.71 55.13C1.81 61.57 2.66 75 8.67 83.01C12.22 87.74 18.21 91.42 20.19 89.98H20.18Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M58.71 39.53C75.92 37.11 108.78 38.15 115.24 58.48C130.99 108.03 49.73 105.35 36.43 88.29C21.6 69.28 36.13 42.71 58.72 39.53H58.71Z",fill:"black"}),(0,$t.jsx)("path",{d:"M18.63 45.0599C19.35 41.4399 22.71 27.1899 37.94 17.1199C52.06 7.77994 67.33 8.03994 73.63 8.13994C79.78 8.23994 98.28 8.79994 113.26 21.1899C124.01 30.0899 127.43 40.5199 128.58 45.0599",stroke:"#EB0028",strokeWidth:"5",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,$t.jsx)("path",{d:"M46.25 59.94H50.67L55.47 67.75L60.33 59.94H64.66L57.66 70.23L65.22 81.26H60.72L55.73 73.53L50.03 81.26H45.64L53.29 70.36L46.25 59.94Z",fill:"#EB0028"}),(0,$t.jsx)("path",{d:"M83.19 59.94H87.62L92.41 67.75L97.28 59.94H101.6L94.6 70.23L102.16 81.26H97.66L92.67 73.53L86.97 81.26H82.58L90.23 70.36L83.19 59.94Z",fill:"#EB0028"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_127_144",children:(0,$t.jsx)("rect",{width:"146.17",height:"148.89",fill:"white"})})})]})}};function _r(e){var n=e.toLowerCase(),t=xr[n];return t?(0,$t.jsx)(t,{}):(console.warn('Avatar "'.concat(e,'" não encontrado.')),null)}function Dr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Or=function(){var n,t,r=jt(),i=(n=(0,e.useState)(localStorage.getItem("avatar")||"homem3"),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return Dr(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Dr(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[0];return i[1],(0,$t.jsxs)(br,{children:[(0,$t.jsx)(ar,{onClick:function(){r("/cronograma")},className:"logo"}),(0,$t.jsx)(Sr,{className:"perfil",ativado:!0,onClick:function(){r("/perfil")},children:_r(o)})]})},Ir=function(e){return(0,$t.jsxs)($t.Fragment,{children:[(0,$t.jsx)(Or,{}),(0,$t.jsx)("div",{className:"container",children:e.children})]})};var Lr,kr,Fr=Wn.article(Lr||(Lr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    gap: 2rem;\n    justify-content: center;\n\n    img {\n        width: 4.6875rem;\n        height: 4.6875rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n\n        border-radius: 3.125rem;\n        border: 2px solid #FFF;\n    }\n    \n    &.active{\n        z-index: 9999;\n    }\n\n    &.posterior{\n        .nomePalestrante {\n            color: #A7A7A7 !important;\n        }\n        \n        img {\n            border-radius: 3.125rem;\n            border: 3px solid #878787;\n            filter: saturate(0%);\n        }\n    }\n    \n    &.dentro{\n        .nomePalestrante {\n            color: #CD0909 !important;\n        }\n        \n        img {\n            border: 2px solid #CD0909 !important;\n        }\n    }\n\n    .informacoesPalestrante {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n        \n        .nomePalestrante {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 1.25rem;\n            font-style: normal;\n            font-weight: 900;\n            line-height: normal;\n\n            text-transform: uppercase;\n        }\n    }\n    \n    .setaEnviarParaPaginaPalestrante {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        cursor: pointer;\n\n        svg {\n            width: 2.5rem;\n            height: 2.5rem;\n        }\n    }\n"]))),Mr=Wn.article(kr||(kr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: none;\n    position: absolute;\n    width: 19rem;\n    flex-shrink: 0;\n    border-radius: 0.625rem;\n    background: #FFF;\n    z-index: 2;\n    color: black;\n    padding: 1rem 0;\n    box-sizing: content-box;\n    \n    &.active{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 2rem;\n        z-index: 30001;\n    }\n    \n    img{\n        width: 17.5rem;\n        height: 17.5rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n        border-radius: 0.625rem !important;\n        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n        border: none;\n    }\n    \n    .informacoes-convidado{\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        width: 14.5625rem;\n    }\n\n    .nome-convidado{\n        color: #000;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .horario{\n        color: #000;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .descricao-convidado{\n        width: 14.5625rem;\n        flex-shrink: 0;\n\n        color: #000;\n        font-family: Inter;\n        font-size: 0.75rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .fechar{\n        position: absolute;\n        right: 1rem;\n        top: 1.5rem;\n        z-index: 999;\n        \n        cursor: pointer;\n        \n        &:hover{\n            transform: scale(1.1);\n        }\n        \n        &:active{\n            transform: scale(0.9);\n        }\n    }\n"])));const jr=function(e){var n=e.className,t=e.onClick,r=e.textoBotao,i=e.disabled,o=e.nomeConvidado,a=e.horaInicio,s=e.horaFim,l=e.onClickBotao;return(0,$t.jsxs)(Mr,{className:n,children:[(0,$t.jsx)("div",{className:"fechar",onClick:t,children:(0,$t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",children:(0,$t.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22ZM8.96965 8.96967C9.26254 8.67678 9.73742 8.67678 10.0303 8.96967L12 10.9394L13.9696 8.96969C14.2625 8.6768 14.7374 8.6768 15.0303 8.96969C15.3232 9.26258 15.3232 9.73746 15.0303 10.0303L13.0606 12L15.0303 13.9697C15.3232 14.2625 15.3232 14.7374 15.0303 15.0303C14.7374 15.3232 14.2625 15.3232 13.9696 15.0303L12 13.0607L10.0303 15.0303C9.73744 15.3232 9.26256 15.3232 8.96967 15.0303C8.67678 14.7374 8.67678 14.2626 8.96967 13.9697L10.9393 12L8.96965 10.0303C8.67676 9.73744 8.67676 9.26256 8.96965 8.96967Z",fill:"white"})})}),(0,$t.jsx)("img",{src:"imagens/fotoDefaultCronogramaPalestrante.png",alt:"Foto do convidado",className:"imagem-convidado"}),(0,$t.jsxs)("div",{className:"informacoes-convidado",children:[(0,$t.jsx)("div",{className:"nome-convidado",children:o}),(0,$t.jsxs)("div",{className:"horario",children:[a," - ",s]})]}),(0,$t.jsx)("div",{className:"descricao-convidado",children:"Professor e Coordenador dos cursos de Publicidade e Propaganda no IBMEC, com mais de 10 anos de experiência no ensino superior e na indústria da comunicação, o Prof. Victor une sólida formação acadêmica a uma atuação prática e estratégica em marketing e branding."}),(0,$t.jsx)(Xt,{onClick:l,disabled:i,children:r})]})};var Ur,Rr=Wn.article(Ur||(Ur=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 100%;\n    height: 100%;\n    background: rgb(0 0 0 / 64%);\n    \n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 30000;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    &.hidden {\n        display: none;\n    }\n"])));const Tr=function(e){var n=e.className,t=e.children,r=e.onClick;return(0,$t.jsx)(Rr,{className:n,onClick:r,children:t})};function Nr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Wr(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Wr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Br=function(n){var t=n.urlFotoConvidado,r=void 0===t?"imagens/fotoDefaultCronogramaPalestrante.png":t,i=n.nomeConvidado,o=n.horarioInicio,a=n.horarioFim,s=n.onClick,l=n.onClickFinalizado,d=n.id,c=Nr((0,e.useState)(new Date),2),u=c[0],m=c[1],p=Nr((0,e.useState)(!1),2),f=p[0],h=p[1],g=Nr((0,e.useState)("anterior"),2),C=g[0],A=g[1],v=Nr((0,e.useState)((function(){return s})),2),b=v[0],y=v[1],S=Nr((0,e.useState)(!1),2),w=S[0],P=S[1],E=Nr((0,e.useState)("DINÂMICA"),2),x=E[0],_=E[1];(0,e.useEffect)((function(){var e=setInterval((function(){var e=new Date;m(e)}),6e4);return function(){return clearInterval(e)}}),[]),(0,e.useEffect)((function(){!function(e,n){var t=Nr(e.split(":").map(Number),2),r=t[0],i=t[1],o=Nr(n.split(":").map(Number),2),a=o[0],s=o[1],d=Nr(D().split(":").map(Number),2),c=d[0],u=d[1],m=new Date;m.setHours(r,i);var p=new Date;p.setHours(a,s);var f=new Date;f.setHours(c,u),f<m?(_("ESPERANDO.."),P(!0),A("anterior")):f>p?(_("VER RANKING"),P(!1),A("posterior"),y((function(){return l}))):(_("DINÂMICA"),P(!1),A("dentro"))}(o,a)}),[o,a,u]);var D=function(){var e=new Date,n=e.getHours().toString().padStart(2,"0"),t=e.getMinutes().toString().padStart(2,"0");return"".concat(n,":").concat(t)},O=function(){h(!1)};return(0,$t.jsxs)(Fr,{className:"".concat(C," ").concat(f?"active":"hidden"),id:d,onClick:function(){f||h((function(e){return!e}))},children:[(0,$t.jsx)("img",{src:r,alt:"Foto do convidado",className:"fotoConvidado"}),(0,$t.jsxs)("div",{className:"informacoesPalestrante",children:[(0,$t.jsx)("div",{className:"nomePalestrante",children:i}),(0,$t.jsxs)("div",{className:"horarioPalestrante",children:[o," - ",a]})]}),(0,$t.jsxs)("div",{className:"setaEnviarParaPaginaPalestrante",children:["anterior"===C&&(0,$t.jsx)("div",{className:"toolTip",children:(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_45_430)",children:[(0,$t.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2001 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8143 5.98995e-07H8.18572C7.44668 -0.000491588 6.7679 0.302368 6.28462 0.787555C5.79949 1.27083 5.49658 1.94912 5.49756 2.68816V5.83565C5.49756 7.72734 6.28041 9.53428 7.66056 10.8282L9.98751 13.0096C10.1156 13.1301 10.1887 13.2978 10.1887 13.474V14.5258C10.1887 14.702 10.1156 14.8692 9.98801 14.9894L7.66062 17.1717C6.28047 18.4651 5.49762 20.2725 5.49762 22.1642V25.3117C5.49663 26.0508 5.7996 26.7291 6.28468 27.2123C6.76801 27.6975 7.44673 28.0004 8.18578 27.9999H19.8143C20.5534 28.0004 21.2317 27.6975 21.715 27.2123C22.2001 26.729 22.503 26.0508 22.5026 25.3117V22.1643C22.5026 20.2726 21.7197 18.4652 20.3396 17.1718L18.0126 14.9899C17.884 14.8693 17.8115 14.7021 17.8115 14.5259V13.4741C17.8114 13.2979 17.884 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2637 25.7612C20.1454 25.878 19.9933 25.9472 19.8143 25.9477H8.18572C8.00673 25.9472 7.8541 25.878 7.73587 25.7612C7.61905 25.643 7.55031 25.4908 7.54982 25.3118V22.1643C7.54982 20.8402 8.09812 19.5745 9.06417 18.6692L11.3911 16.4869C11.9333 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9333 12.0205 11.3907 11.5126L9.06417 9.33084C8.09806 8.42554 7.54982 7.16029 7.54982 5.83576V2.68822C7.55031 2.50923 7.61905 2.35709 7.73587 2.23836C7.8541 2.12204 8.00673 2.05275 8.18572 2.05231H19.8143C19.9932 2.05275 20.1454 2.12198 20.2637 2.23836C20.3805 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6089 11.5126C16.0667 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6094 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"white"}),(0,$t.jsx)("path",{d:"M12.9752 20.7238L8.74622 24.9528H19.2532L15.0242 20.7238C14.4585 20.1586 13.5414 20.1586 12.9752 20.7238Z",fill:"white"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_45_430",children:(0,$t.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]})}),"posterior"===C&&(0,$t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:l,children:(0,$t.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M36.6667 20C36.6667 29.2047 29.2047 36.6667 20 36.6667C10.7953 36.6667 3.33337 29.2047 3.33337 20C3.33337 10.7952 10.7953 3.33333 20 3.33333C29.2047 3.33333 36.6667 10.7952 36.6667 20ZM26.7172 14.9494C27.2054 15.4376 27.2054 16.2291 26.7172 16.7172L18.3839 25.0505C17.8957 25.5387 17.1044 25.5387 16.6162 25.0505L13.2828 21.7172C12.7947 21.229 12.7947 20.4377 13.2828 19.9495C13.771 19.4613 14.5624 19.4613 15.0506 19.9495L17.5 22.3988L21.2247 18.6742L24.9495 14.9494C25.4377 14.4613 26.229 14.4613 26.7172 14.9494Z",fill:"white"})}),"dentro"===C&&(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:s,children:[(0,$t.jsx)("path",{d:"M1.66663 25V15C1.66663 9.47715 6.14378 5 11.6666 5H28.3333C33.8561 5 38.3333 9.47715 38.3333 15V25C38.3333 30.5228 33.8561 35 28.3333 35H11.6666C6.14378 35 1.66663 30.5228 1.66663 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,$t.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,$t.jsx)("path",{d:"M23.3333 25V15L29.9999 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]})]}),(0,$t.jsx)(Tr,{className:f?"active":"hidden",onClick:O,children:(0,$t.jsx)(jr,{className:f?"modal active":"modal",onClick:O,textoBotao:x,disabled:w,nomeConvidado:i,horaInicio:o,horaFim:a,onClickBotao:b})})]})};var zr,Vr=Wn.article(zr||(zr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    border-top: 3px solid #fff;;\n    border-bottom: 3px solid #fff;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    padding: 1rem 0;\n    box-sizing: border-box;\n    margin: 0 2rem;\n\n    color: #FFF;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    \n    .horario{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n    }\n    \n    .break-time {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        \n        .break {\n            color: #CD0909;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 600;\n            line-height: normal;\n        }\n\n        .time {\n            color: #FFF;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 300;\n            line-height: normal;\n        }\n    }\n"])));const Gr=function(e){var n=e.horarioInicio,t=void 0===n?"11:00":n,r=e.horarioFim,i=void 0===r?"12:00":r;return(0,$t.jsxs)(Vr,{children:[(0,$t.jsx)("div",{className:"horario",children:t}),(0,$t.jsxs)("div",{className:"break-time",children:[(0,$t.jsx)("div",{className:"break",children:"BREAK"}),(0,$t.jsx)("div",{className:"time",children:"TIME"})]}),(0,$t.jsx)("div",{className:"horario",children:i})]})};var Hr,Jr=Wn.article(Hr||(Hr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 320px;\n    box-sizing: border-box;\n    justify-content: space-between;\n    \n    .titulo{\n        color: #FFF;\n        text-align: left;\n        font-family: Inter,serif;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .subtitulo{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter,serif;\n        font-size: 0.875rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .mini{\n        width: 6rem;\n    }\n"])));const Yr=function(e){var n=e.id,t=e.titulo,r=e.subtitulo,i=e.style;return(0,$t.jsxs)(Jr,{id:n,style:i,children:[(0,$t.jsx)("div",{className:"titulo",children:t}),(0,$t.jsx)("div",{className:"subtitulo",children:r})]})};var Qr,Zr=Wn.article(Qr||(Qr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    padding: 1.25rem 1.5rem;\n    flex-shrink: 0;\n    \n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 0.5rem;\n\n    border-radius: 0.625rem;\n    background: #FFF;\n\n    color: #000;\n    font-family: Inter,serif;\n    font-size: 0.9375rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    \n    position: absolute;\n    top: ","rem;\n    left: ","rem;\n    z-index: 99999;\n    \n    &.direita{\n        align-items: flex-end;\n    }\n    \n    .ponta{\n        position: absolute;\n    }\n    \n    .esquerda{\n        top: -0.6rem;\n        left: 0.4rem;\n    }\n    \n    .direita{\n        top: -0.6rem;\n        right: 0.4rem;\n    }\n    \n    .texto{\n        max-width: ","rem;\n    }\n    \n    button{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n\n        width: 5.375rem;\n        height: 1.5rem;\n        flex-shrink: 0;\n        background: #CD0909;\n        border: none;\n        cursor: pointer;\n        \n        &:hover{\n            background: #A00000;\n        }\n        \n        &:active{\n            background: #CD0909;\n        }\n    }\n"])),(function(e){return e.top}),(function(e){return e.left}),16);const $r=function(e){var n=e.children,t=e.left,r=e.top,i=e.className,o=e.onClick,a=e.id,s=e.style,l=e.orientation,d=void 0===l?"esquerda":l;return(0,$t.jsxs)(Zr,{id:a,className:"".concat(i," ").concat(d),left:t,top:r,style:s,children:[(0,$t.jsx)("svg",{className:"ponta ".concat(d),xmlns:"http://www.w3.org/2000/svg",width:"14",height:"12",viewBox:"0 0 14 12",fill:"none",children:(0,$t.jsx)("path",{d:"M7 0L13.9282 12H0.0717969L7 0Z",fill:"white"})}),(0,$t.jsx)("div",{className:"texto",children:n}),(0,$t.jsx)("button",{onClick:o,children:"Entendi!"})]})};var Xr,qr=Wn.article(Xr||(Xr=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    \n    .status{\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        gap: 1rem;\n    }\n"])));const Kr=function(){return(0,$t.jsxs)(qr,{children:["Aqui você consegue vê o Status do palestrante. Pode ser:",(0,$t.jsxs)("div",{className:"status",children:[(0,$t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"34",height:"34",viewBox:"0 0 34 34",fill:"none",children:(0,$t.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M33.6666 17C33.6666 26.2047 26.2046 33.6667 17 33.6667C7.79523 33.6667 0.333313 26.2047 0.333313 17C0.333313 7.79529 7.79523 0.333374 17 0.333374C26.2046 0.333374 33.6666 7.79529 33.6666 17ZM23.7171 11.9495C24.2053 12.4376 24.2053 13.2291 23.7171 13.7172L15.3838 22.0505C14.8956 22.5387 14.1043 22.5387 13.6161 22.0505L10.2828 18.7172C9.79461 18.229 9.79461 17.4377 10.2828 16.9495C10.7709 16.4614 11.5624 16.4614 12.0505 16.9495L14.5 19.3989L18.2246 15.6742L21.9495 11.9495C22.4376 11.4613 23.229 11.4613 23.7171 11.9495Z",fill:"black"})}),(0,$t.jsx)("span",{children:"Já aconteceu."})]}),(0,$t.jsxs)("div",{className:"status",children:[(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",children:[(0,$t.jsx)("path",{d:"M1.66669 25V15C1.66669 9.47715 6.14384 5 11.6667 5H28.3334C33.8562 5 38.3334 9.47715 38.3334 15V25C38.3334 30.5228 33.8562 35 28.3334 35H11.6667C6.14384 35 1.66669 30.5228 1.66669 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,$t.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,$t.jsx)("path",{d:"M23.3334 25V15L30 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]}),(0,$t.jsx)("span",{children:"Acontecendo."})]}),(0,$t.jsxs)("div",{className:"status",children:[(0,$t.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,$t.jsxs)("g",{clipPath:"url(#clip0_45_641)",children:[(0,$t.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8142 5.98995e-07H8.18566C7.44662 -0.000491588 6.76784 0.302368 6.28456 0.787555C5.79943 1.27083 5.49652 1.94912 5.4975 2.68816V5.83565C5.4975 7.72734 6.28035 9.53428 7.6605 10.8282L9.98745 13.0096C10.1155 13.1301 10.1886 13.2978 10.1886 13.474V14.5258C10.1886 14.702 10.1155 14.8692 9.98795 14.9894L7.66055 17.1717C6.28041 18.4651 5.49755 20.2725 5.49755 22.1642V25.3117C5.49657 26.0508 5.79954 26.7291 6.28462 27.2123C6.76795 27.6975 7.44667 28.0004 8.18572 27.9999H19.8142C20.5534 28.0004 21.2316 27.6975 21.7149 27.2123C22.2 26.729 22.503 26.0508 22.5025 25.3117V22.1643C22.5025 20.2726 21.7196 18.4652 20.3395 17.1718L18.0126 14.9899C17.8839 14.8693 17.8114 14.7021 17.8114 14.5259V13.4741C17.8114 13.2979 17.8839 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2636 25.7612C20.1454 25.878 19.9932 25.9472 19.8142 25.9477H8.18566C8.00667 25.9472 7.85404 25.878 7.7358 25.7612C7.61899 25.643 7.55025 25.4908 7.54976 25.3118V22.1643C7.54976 20.8402 8.09805 19.5745 9.06411 18.6692L11.3911 16.4869C11.9332 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9332 12.0205 11.3906 11.5126L9.06411 9.33084C8.098 8.42554 7.54976 7.16029 7.54976 5.83576V2.68822C7.55025 2.50923 7.61899 2.35709 7.7358 2.23836C7.85404 2.12204 8.00667 2.05275 8.18566 2.05231H19.8142C19.9932 2.05275 20.1454 2.12198 20.2636 2.23836C20.3804 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6088 11.5126C16.0666 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6093 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"black"}),(0,$t.jsx)("path",{d:"M12.9752 20.7239L8.74622 24.9528H19.2532L15.0242 20.7239C14.4585 20.1586 13.5414 20.1586 12.9752 20.7239Z",fill:"black"})]}),(0,$t.jsx)("defs",{children:(0,$t.jsx)("clipPath",{id:"clip0_45_641",children:(0,$t.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]}),(0,$t.jsx)("span",{children:"Ainda vai acontecer."})]})]})};var ei,ni,ti=Wn.header(ei||(ei=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n"]))),ri=Wn.article(ni||(ni=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 5rem;\n    height: 2.4375rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    \n    .valor{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"]))),ii=function(){return(0,$t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"21",height:"21",viewBox:"0 0 21 21",fill:"none",children:(0,$t.jsx)("path",{d:"M9.86046 3.85976C10.063 3.4053 10.1644 3.17807 10.3054 3.1081C10.4279 3.0473 10.5718 3.0473 10.6943 3.1081C10.8353 3.17807 10.9366 3.4053 11.1392 3.85976L12.7527 7.47957C12.8126 7.61392 12.8426 7.68109 12.8889 7.73253C12.9299 7.77805 12.98 7.81446 13.0359 7.83938C13.0992 7.86755 13.1723 7.87527 13.3186 7.89071L17.2599 8.30669C17.7547 8.35891 18.0021 8.38502 18.1122 8.49754C18.2079 8.59526 18.2523 8.73212 18.2324 8.86742C18.2094 9.02318 18.0247 9.18969 17.6551 9.5228L14.7109 12.176C14.6017 12.2744 14.5471 12.3237 14.5125 12.3836C14.4819 12.4367 14.4627 12.4956 14.4563 12.5565C14.4491 12.6254 14.4643 12.6973 14.4948 12.8412L15.3171 16.7181C15.4204 17.2049 15.472 17.4482 15.399 17.5877C15.3356 17.709 15.2192 17.7935 15.0844 17.8163C14.9292 17.8426 14.7137 17.7183 14.2826 17.4697L10.8496 15.4896C10.7222 15.4161 10.6585 15.3794 10.5907 15.365C10.5308 15.3523 10.4689 15.3523 10.4089 15.365C10.3412 15.3794 10.2775 15.4161 10.1501 15.4896L6.71704 17.4697C6.28604 17.7183 6.07053 17.8426 5.9153 17.8163C5.78045 17.7935 5.66404 17.709 5.60066 17.5877C5.52769 17.4482 5.57931 17.2049 5.68255 16.7181L6.50484 12.8412C6.53536 12.6973 6.55062 12.6254 6.54337 12.5565C6.53696 12.4956 6.51782 12.4367 6.4872 12.3836C6.45259 12.3237 6.39796 12.2744 6.2887 12.176L3.34465 9.5228C2.97504 9.18969 2.79024 9.02318 2.76726 8.86742C2.74731 8.73212 2.79177 8.59526 2.88744 8.49754C2.99758 8.38502 3.24499 8.35891 3.7398 8.30669L7.68106 7.89071C7.82734 7.87527 7.90047 7.86755 7.96372 7.83938C8.01967 7.81446 8.06978 7.77805 8.11078 7.73253C8.15711 7.68109 8.18705 7.61392 8.24695 7.47957L9.86046 3.85976Z",fill:"white",stroke:"white",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};const oi=function(e){var n=e.valor;return(0,$t.jsxs)(ri,{children:[(0,$t.jsx)(ii,{}),(0,$t.jsx)("div",{className:"valor",children:n})]})};var ai,si=Wn.article(ai||(ai=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n\n    .avatar{\n        width: 5rem;\n        height: 5rem;\n\n        svg{\n            width: 3.5rem;\n        }\n    }\n\n    .perfil {\n        display: flex;\n        flex-direction: column;\n        \n        .sair {\n            display: flex;\n            align-items: center;\n            \n            color: #FFF;\n            font-family: Inter;\n            font-size: 0.875rem;\n            font-style: normal;\n            font-weight: 400;\n            line-height: normal;\n            \n            cursor: pointer;\n        }\n    }\n}\n"]))),li=function(e){var n=e.onClick;return(0,$t.jsx)("svg",{onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",children:(0,$t.jsx)("path",{d:"M18 12L6 12M6 12L11 17M6 12L11 7",stroke:"#CD0909",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};function di(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ci(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ci(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ci(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const ui=function(n){var t=n.onClick,r=di((0,e.useState)(localStorage.getItem("name")||"Jogador"),2),i=r[0],o=(r[1],di((0,e.useState)(localStorage.getItem("avatar")||"homem3"),2)),a=o[0];return o[1],(0,$t.jsxs)(si,{children:[(0,$t.jsx)(Sr,{className:"avatar",ativado:!0,children:_r(a)}),(0,$t.jsxs)("div",{className:"perfil",children:[i,(0,$t.jsxs)("div",{className:"sair",onClick:t,children:[(0,$t.jsx)(li,{}),"Sair do Quiz"]})]})]})};function mi(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var pi=(0,e.createContext)();function fi(n){var t,r,i=n.children,o=(t=(0,e.useState)(localStorage.getItem("pontuacao")),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(t,r)||function(e,n){if(e){if("string"==typeof e)return mi(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?mi(e,n):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,e.useEffect)((function(){var e=localStorage.getItem("pontuacao");e&&s(parseInt(e))}),[]),(0,e.useEffect)((function(){null!==a?localStorage.setItem("pontuacao",a.toString()):localStorage.removeItem("pontuacao")}),[a]);var l={pontuacao:a,adicionarPontos:function(){s((function(e){return e+20}))},resetarPontuacao:function(){s(0)}};return(0,$t.jsx)(pi.Provider,{value:l,children:i})}function hi(){var n=(0,e.useContext)(pi);if(void 0===n)throw new Error("usePontuacao deve ser usado dentro de um PontuacaoProvider");return n}const gi=function(){var e=jt(),n=hi().pontuacao;return(0,$t.jsxs)(ti,{children:[(0,$t.jsx)(ui,{onClick:function(){e("/cronograma")}}),(0,$t.jsx)(oi,{valor:n})]})},Ci=function(e){return(0,$t.jsxs)($t.Fragment,{children:[(0,$t.jsx)(gi,{}),(0,$t.jsx)("div",{className:"container",children:e.children})]})};var Ai,vi=Wn.article(Ai||(Ai=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n    \n    .barTrack{\n        position: relative;\n        height: 0.625rem;\n        background-color: white;\n        border-radius: 999px;\n        overflow: hidden;\n    }\n    \n    .barFill{\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        background-color: red;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n    \n    .barText{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.625rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        \n        text-align: right;\n        margin-bottom: 4px;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n"])),(function(e){return e.progress}),(function(e){return e.progress+6}));function bi(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const yi=function(n){var t,r,i=n.progress,o=void 0===i?20:i,a=n.color,s=void 0===a?"red":a,l=n.showPercentage,d=void 0===l||l,c=(t=(0,e.useState)(0),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(t,r)||function(e,n){if(e){if("string"==typeof e)return bi(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?bi(e,n):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=c[0],m=c[1];return(0,e.useEffect)((function(){var e=setTimeout((function(){u<o&&m((function(e){return Math.min(e+1,o)}))}),15);return function(){return clearTimeout(e)}}),[u,o]),(0,$t.jsxs)(vi,{progress:u,children:[d&&(0,$t.jsxs)("div",{className:"barText",children:[u,"%"]}),(0,$t.jsx)("div",{className:"barTrack",children:(0,$t.jsx)("div",{className:"barFill",color:s})})]})};var Si,wi,Pi=Wn.article(Si||(Si=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n"]))),Ei=Wn.article(wi||(wi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    background: #FFF;\n    width: 16.875rem;\n    height: 3.0625rem;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding-left: 1.31rem;\n    gap: 1rem;\n    cursor: pointer;\n    transition: background 0.3s ease-in-out;\n    \n    &.ativo {\n        background: #CD0909;\n    }\n\n    &.incorreto {\n        background: #878787;\n    }\n    \n    &.correto {\n        background: #008000;\n    }\n\n    &.ativo, &.incorreto, &.correto {\n        .texto-alternativa, .letra-alternativa {\n            color: #FFF;\n        }\n    }\n\n    .letra-alternativa {\n        color: #CD0909;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        width: 2rem;\n    }\n\n    .texto-alternativa {\n        color: #000;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"])));const xi=function(e){var n=e.letraDaAlternativa,t=e.textoDaAlternativa,r=e.selecionado,i=e.incorreto,o=e.correto,a=e.onSelecao,s="";return r?s=i?"incorreto":o?"correto":"ativo":o&&(s="correto"),(0,$t.jsxs)(Ei,{className:s,onClick:a,children:[(0,$t.jsx)("div",{className:"letra-alternativa",children:n}),(0,$t.jsx)("div",{className:"texto-alternativa",children:t})]})},_i=function(e){var n=e.alternativas,t=e.alternativaSelecionada,r=e.alternativaIncorreta,i=e.respostaCorreta,o=e.handleSelecao;return(0,$t.jsx)(Pi,{children:n.map((function(e){return(0,$t.jsx)(xi,{letraDaAlternativa:(n=e.id,["A","B","C","D"][n-1]),textoDaAlternativa:e.texto,selecionado:t===e.id,incorreto:r===e.id,onSelecao:function(){return o(e.id)},correto:i===e.id},e.id);var n}))})};var Di,Oi=Wn.article(Di||(Di=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    color: #CD0909;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const Ii=function(e){var n=e.pontos;return(0,$t.jsxs)(Oi,{children:["Valendo ",n," pontos"]})};var Li,ki=Wn.article(Li||(Li=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n"])));const Fi=function(e){var n=e.children;return(0,$t.jsx)(ki,{children:n})};var Mi,ji=Wn.article(Mi||(Mi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const Ui=function(e){var n=e.children;return(0,$t.jsx)(ji,{children:n})};function Ri(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(e,n)||Ti(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ti(e,n){if(e){if("string"==typeof e)return Ni(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ni(e,n):void 0}}function Ni(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Wi=function(){var n=Ri((0,e.useState)(null),2),t=n[0],r=n[1],i=Ri((0,e.useState)(null),2),o=i[0],a=i[1],s=Ri((0,e.useState)(!1),2),l=s[0],d=s[1],c=Ri((0,e.useState)(0),2),u=c[0],m=c[1],p=Ri((0,e.useState)("ENVIAR"),2),f=p[0],h=p[1],g=Ri((0,e.useState)([]),2),C=g[0],A=g[1],v=hi(),b=(v.pontuacao,v.adicionarPontos),y=jt(),S=Ft().state.palestrante,w=function(){var e,n=[].concat(function(e){if(Array.isArray(e))return Ni(e)}(e=C)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Ti(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[S.nome]);A(n),localStorage.setItem("completedQuizzes",JSON.stringify(n)),y("/ranking",{state:{palestrante:S}})};(0,e.useEffect)((function(){var e;e=S.nome,localStorage.setItem("palestrante",e)}),[S]),(0,e.useEffect)((function(){var e=JSON.parse(localStorage.getItem("completedQuizzes"))||[];A(e)}),[]);var P,E=[{id:1,pergunta:"Qual é o tema da palestra?",alternativas:[{id:1,texto:"Tema 1"},{id:2,texto:"Tema 2"},{id:3,texto:"Tema 3"},{id:4,texto:"Tema 4"}],resposta:2},{id:2,pergunta:"Qual é o público-alvo da palestra?",alternativas:[{id:1,texto:"Público 1"},{id:2,texto:"Público 2"},{id:3,texto:"Público 3"},{id:4,texto:"Público 4"}],resposta:3},{id:3,pergunta:"Qual é a duração da palestra?",alternativas:[{id:1,texto:"30 minutos"},{id:2,texto:"1 hora"},{id:3,texto:"1 hora e 30 minutos"},{id:4,texto:"2 horas"}],resposta:1}];return(0,$t.jsxs)(Ci,{children:[(0,$t.jsx)(yi,{progress:(P=u/E.length*100,Math.round(100*P)/100),color:"blue",backgroundColor:"gray",height:10}),(0,$t.jsx)(Ui,{children:E[u].pergunta}),(0,$t.jsx)(_i,{alternativas:E[u].alternativas,alternativaSelecionada:t,alternativaIncorreta:o,respostaCorreta:l?E[u].resposta:null,handleSelecao:function(e){r(e)}}),(0,$t.jsx)(Xt,{disabled:!t,type:"button",onClick:function(){t===E[u].resposta?(d(!0),h("ACERTOU!!"),b(),setTimeout((function(){u===E.length-1?w():(m(u+1),r(null),d(!1),h("ENVIAR"))}),1e3)):(a(t),d(!0),h("ERROU.."),setTimeout((function(){u===E.length-1?w():(m(u+1),r(null),d(!1),h("ENVIAR"))}),1e3))},children:f}),(0,$t.jsx)(Ii,{pontos:20}),(0,$t.jsx)(Fi,{children:(0,$t.jsx)(ar,{})})]})};function Bi(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return zi(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?zi(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function zi(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Vi=function(){var n=jt(),t=Bi((0,e.useState)(0),2),r=t[0],i=t[1],o=Bi((0,e.useState)("true"!==localStorage.getItem("toolTipCronograma")),2),a=o[0],s=o[1],l=Bi((0,e.useState)([]),2),d=l[0],c=l[1],u=function(e){d.includes(e.nome)?n("/ranking",{state:{palestrante:e}}):n("/palestrante",{state:{palestrante:e}})},m=function(e){n("/ranking",{state:{palestrante:e}})},p=[{nome:"Convidado 1",horario_inicio:"00:00",horario_fim:"11:00"},{nome:"Convidado 2",horario_inicio:"11:00",horario_fim:"15:00"},{nome:"Convidado 3",horario_inicio:"16:00",horario_fim:"17:00"},{nome:"Convidado 4",horario_inicio:"17:00",horario_fim:"18:00"},{nome:"Convidado 5",horario_inicio:"18:00",horario_fim:"19:00"}],f=function(){i(r+1);var e=document.querySelector("#toolTip1"),n=document.querySelector("#toolTip2"),t=document.querySelector("#toolTip3"),o=document.querySelector("#tituloCronograma"),a=document.querySelector("#cardCronograma1"),l=document.querySelector("#cardCronograma2"),d=document.querySelector(".telaPreta");return 1===r?(n.style.display="none",t.style.display="flex",a.style.zIndex="0",void(l.style.zIndex="9999")):2===r?(t.style.display="none",d.style.display="none",l.style.zIndex="0",localStorage.setItem("toolTipCronograma","true"),void s(!1)):(e.style.display="none",n.style.display="flex",o.style.zIndex="0",void(a.style.zIndex="9999"))};return(0,e.useEffect)((function(){var e=JSON.parse(localStorage.getItem("completedQuizzes"))||[];c(e)}),[]),(0,$t.jsxs)(Ir,{children:[(0,$t.jsxs)("div",{style:{display:a?"flex":"none",position:"absolute",width:"320px"},children:[(0,$t.jsx)($r,{className:"toolTip",onClick:f,left:.5,top:-19,id:"toolTip1",children:"Seja bem-vindo ao cronograma do TEDX. Aqui você consegue vê o horário de cada palestrante"}),(0,$t.jsx)($r,{className:"toolTip",onClick:f,left:.6,top:-14,orientation:"direita",id:"toolTip2",style:{display:"none"},children:(0,$t.jsx)(Kr,{})}),(0,$t.jsx)($r,{className:"toolTip",onClick:f,left:.6,top:-7,id:"toolTip3",orientation:"direita",style:{display:"none"},children:"Você pode clicar em ON para participar da dinâmica do palestrante. É um Quiz que no final te permite fazer uma pergunta a ele."}),(0,$t.jsx)(Tr,{className:"telaPreta"})]}),(0,$t.jsx)(Yr,{titulo:"Cronograma",subtitulo:(0,$t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 20 20",fill:"none",onClick:function(){s(!0);var e=document.querySelector("#toolTip1"),n=document.querySelector("#toolTip2"),t=document.querySelector("#toolTip3"),r=document.querySelector("#tituloCronograma"),o=document.querySelector(".telaPreta");e.style.display="flex",n.style.display="none",t.style.display="none",o.style.display="flex",r.style.zIndex="9999",i(0)},children:(0,$t.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10ZM10 5.75C9.3787 5.75 8.875 6.25368 8.875 6.875C8.875 7.28921 8.5392 7.625 8.125 7.625C7.71079 7.625 7.375 7.28921 7.375 6.875C7.375 5.42525 8.5503 4.25 10 4.25C11.4497 4.25 12.625 5.42525 12.625 6.875C12.625 7.58584 12.3415 8.232 11.883 8.704C11.7907 8.7989 11.7027 8.8869 11.6187 8.9708C11.4029 9.1864 11.2138 9.3753 11.0479 9.5885C10.8289 9.8699 10.75 10.0768 10.75 10.25V11C10.75 11.4142 10.4142 11.75 10 11.75C9.5858 11.75 9.25 11.4142 9.25 11V10.25C9.25 9.5948 9.555 9.0644 9.8642 8.6672C10.0929 8.3733 10.3804 8.0863 10.6138 7.85346C10.6842 7.78321 10.7496 7.71789 10.807 7.65877C11.0046 7.45543 11.125 7.18004 11.125 6.875C11.125 6.25368 10.6213 5.75 10 5.75ZM10 15C10.5523 15 11 14.5523 11 14C11 13.4477 10.5523 13 10 13C9.4477 13 9 13.4477 9 14C9 14.5523 9.4477 15 10 15Z",fill:"white"})}),id:"tituloCronograma",style:{zIndex:"9999"}}),(0,$t.jsx)(Br,{nomeConvidado:p[0].nome,horarioInicio:p[0].horario_inicio,horarioFim:p[0].horario_fim,onClick:u.bind(null,p[0]),onClickFinalizado:m.bind(null,p[0]),id:"cardCronograma1"},0),(0,$t.jsx)(Br,{nomeConvidado:p[1].nome,horarioInicio:p[1].horario_inicio,horarioFim:p[1].horario_fim,onClick:u.bind(null,p[1]),onClickFinalizado:m.bind(null,p[1]),id:"cardCronograma2"},1),(0,$t.jsx)(Gr,{horarioFim:p[2].horario_inicio,horarioInicio:p[1].horario_fim}),p.slice(2,5).map((function(e,n){return(0,$t.jsx)(Br,{nomeConvidado:e.nome,horarioInicio:e.horario_inicio,horarioFim:e.horario_fim,onClick:u.bind(null,e),onClickFinalizado:m.bind(null,e)},n)}))]})};var Gi,Hi,Ji,Yi=Wn.article(Gi||(Gi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    gap: 0.5rem;\n    justify-content: flex-end;\n    align-items: flex-end;\n    height: 15rem;\n"])));function Qi(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var Zi=Bn(Hi||(Hi=Qi(["\n    from {\n        height: 0;\n        margin-top: auto;\n    }\n    to {\n        height: ","rem;\n        margin-top: 0;\n    }\n"])),(function(e){return e.altura})),$i=Wn.article(Ji||(Ji=Qi(["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n\n    .avatar{\n        width: 4rem;\n        height: 4rem;\n\n        svg{\n            width: 2.5rem;\n        }\n    }\n    \n    .icone{\n        img{\n            width: 3.95088rem;\n            height: 3.6875rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 63.21/59.00;\n        }\n    }\n    \n    .torre {\n        width: 3.4375rem;\n        height: ",";\n        flex-shrink: 0;\n        background: #CD0909;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 900;\n        line-height: normal;\n        animation: "," 5s ease-out forwards;\n        transform-origin: bottom;\n    }\n"])),(function(e){return e.altura||"7.75rem"}),Zi);const Xi=function(e){var n=e.posicaoNumero,t=void 0===n?1:n,r=e.nomeCompetidor,i=void 0===r?"michel":r,o=e.iconeCompetidor,a=void 0===o?"homem1":o;return e.altura,(0,$t.jsxs)($i,{children:[(0,$t.jsx)("div",{className:"nome",children:i}),(0,$t.jsx)("div",{className:"icone",children:(0,$t.jsx)(Sr,{className:"avatar",ativado:!0,children:_r(a)})}),(0,$t.jsx)("div",{className:"torre",style:{height:function(e){switch(e){case 1:return 7.75;case 2:return 5.0625;case 3:return 3.25}}(t)+"rem"},children:t})]})},qi=function(e){var n=e.top3;return(0,$t.jsxs)(Yi,{children:[(0,$t.jsx)(Xi,{posicaoNumero:2,nomeCompetidor:n[1].espectador,iconeCompetidor:n[1].avatar}),(0,$t.jsx)(Xi,{posicaoNumero:1,nomeCompetidor:n[0].espectador,iconeCompetidor:n[0].avatar}),(0,$t.jsx)(Xi,{posicaoNumero:3,nomeCompetidor:n[2].espectador,iconeCompetidor:n[2].avatar})]})};var Ki,eo,no,to=Wn.article(Ki||(Ki=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: 0.5rem;\n    width: 100%;\n"])));function ro(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var io=Bn(eo||(eo=ro(["\n  from {\n    width: 0;\n  }\n  to {\n    width: ","rem;\n  }\n"])),(function(e){return e.largura})),oo=Wn.article(no||(no=ro(["\n    width: ","rem;\n    height: 3.625rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.125rem;\n    animation: "," 5s ease-out forwards;\n    gap: 1rem;\n    \n    color: #FFF;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 900;\n    line-height: normal;\n\n    .avatar{\n        width: 3rem;\n        height: 3rem;\n\n        svg{\n            width: 2rem;\n        }\n    }\n    \n    .info {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        \n        img{\n            width: 2.27681rem;\n            height: 2.125rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 36.43/34.00;\n            border: none;\n        }\n    }\n    \n    .container-pontuacao {\n        position: relative;\n        left: 3rem;\n    }\n"])),(function(e){return e.largura}),io);const ao=function(e){var n=e.posicao,t=void 0===n?1:n,r=e.icone,i=void 0===r?"homem1":r,o=e.nome,a=void 0===o?"michel":o,s=e.pontuacao,l=void 0===s?90:s,d=e.pontuacaoMaxima,c=void 0===d?100:d;return(0,$t.jsxs)(oo,{largura:function(e){return e/c*15}(l),children:[(0,$t.jsxs)("div",{children:["#",t]}),(0,$t.jsxs)("div",{className:"info",children:[(0,$t.jsx)(Sr,{className:"avatar",ativado:!1,children:_r(i)}),a]}),(0,$t.jsx)("div",{className:"container-pontuacao",children:l})]})};function so(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const lo=function(n){var t,r,i=n.top5,o=(t=(0,e.useState)(100),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(t,r)||function(e,n){if(e){if("string"==typeof e)return so(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?so(e,n):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,e.useEffect)((function(){l()}),[]);var l=function(){var e=0;i.forEach((function(n){n.score>e&&(e=n.score)})),s(e)};return(0,$t.jsx)(to,{children:i.map((function(e,n){return(0,$t.jsx)(ao,{posicao:n+1,icone:e.avatar,nome:e.espectador,pontuacao:e.score,pontuacaoMaxima:a},n)}))})};function co(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)e[r]=t[r]}return e}var uo=function e(n,t){function r(e,r,i){if("undefined"!=typeof document){"number"==typeof(i=co({},t,i)).expires&&(i.expires=new Date(Date.now()+864e5*i.expires)),i.expires&&(i.expires=i.expires.toUTCString()),e=encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var o="";for(var a in i)i[a]&&(o+="; "+a,!0!==i[a]&&(o+="="+i[a].split(";")[0]));return document.cookie=e+"="+n.write(r,e)+o}}return Object.create({set:r,get:function(e){if("undefined"!=typeof document&&(!arguments.length||e)){for(var t=document.cookie?document.cookie.split("; "):[],r={},i=0;i<t.length;i++){var o=t[i].split("="),a=o.slice(1).join("=");try{var s=decodeURIComponent(o[0]);if(r[s]=n.read(a,s),e===s)break}catch(e){}}return e?r[e]:r}},remove:function(e,n){r(e,"",co({},n,{expires:-1}))},withAttributes:function(n){return e(this.converter,co({},this.attributes,n))},withConverter:function(n){return e(co({},this.converter,n),this.attributes)}},{attributes:{value:Object.freeze(t)},converter:{value:Object.freeze(n)}})}({read:function(e){return'"'===e[0]&&(e=e.slice(1,-1)),e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(e){return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}},{path:"/"});function mo(e){return mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},mo(e)}function po(){po=function(){return n};var e,n={},t=Object.prototype,r=t.hasOwnProperty,i=Object.defineProperty||function(e,n,t){e[n]=t.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function d(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{d({},"")}catch(e){d=function(e,n,t){return e[n]=t}}function c(e,n,t,r){var o=n&&n.prototype instanceof C?n:C,a=Object.create(o.prototype),s=new I(r||[]);return i(a,"_invoke",{value:x(e,t,s)}),a}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}n.wrap=c;var m="suspendedStart",p="suspendedYield",f="executing",h="completed",g={};function C(){}function A(){}function v(){}var b={};d(b,a,(function(){return this}));var y=Object.getPrototypeOf,S=y&&y(y(L([])));S&&S!==t&&r.call(S,a)&&(b=S);var w=v.prototype=C.prototype=Object.create(b);function P(e){["next","throw","return"].forEach((function(n){d(e,n,(function(e){return this._invoke(n,e)}))}))}function E(e,n){function t(i,o,a,s){var l=u(e[i],e,o);if("throw"!==l.type){var d=l.arg,c=d.value;return c&&"object"==mo(c)&&r.call(c,"__await")?n.resolve(c.__await).then((function(e){t("next",e,a,s)}),(function(e){t("throw",e,a,s)})):n.resolve(c).then((function(e){d.value=e,a(d)}),(function(e){return t("throw",e,a,s)}))}s(l.arg)}var o;i(this,"_invoke",{value:function(e,r){function i(){return new n((function(n,i){t(e,r,n,i)}))}return o=o?o.then(i,i):i()}})}function x(n,t,r){var i=m;return function(o,a){if(i===f)throw new Error("Generator is already running");if(i===h){if("throw"===o)throw a;return{value:e,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var l=_(s,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===m)throw i=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=f;var d=u(n,t,r);if("normal"===d.type){if(i=r.done?h:p,d.arg===g)continue;return{value:d.arg,done:r.done}}"throw"===d.type&&(i=h,r.method="throw",r.arg=d.arg)}}}function _(n,t){var r=t.method,i=n.iterator[r];if(i===e)return t.delegate=null,"throw"===r&&n.iterator.return&&(t.method="return",t.arg=e,_(n,t),"throw"===t.method)||"return"!==r&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var o=u(i,n.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,g;var a=o.arg;return a?a.done?(t[n.resultName]=a.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=e),t.delegate=null,g):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,g)}function D(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function O(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function L(n){if(n||""===n){var t=n[a];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var i=-1,o=function t(){for(;++i<n.length;)if(r.call(n,i))return t.value=n[i],t.done=!1,t;return t.value=e,t.done=!0,t};return o.next=o}}throw new TypeError(mo(n)+" is not iterable")}return A.prototype=v,i(w,"constructor",{value:v,configurable:!0}),i(v,"constructor",{value:A,configurable:!0}),A.displayName=d(v,l,"GeneratorFunction"),n.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===A||"GeneratorFunction"===(n.displayName||n.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,d(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},n.awrap=function(e){return{__await:e}},P(E.prototype),d(E.prototype,s,(function(){return this})),n.AsyncIterator=E,n.async=function(e,t,r,i,o){void 0===o&&(o=Promise);var a=new E(c(e,t,r,i),o);return n.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(w),d(w,l,"Generator"),d(w,a,(function(){return this})),d(w,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var n=Object(e),t=[];for(var r in n)t.push(r);return t.reverse(),function e(){for(;t.length;){var r=t.pop();if(r in n)return e.value=r,e.done=!1,e}return e.done=!0,e}},n.values=L,I.prototype={constructor:I,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function i(r,i){return s.type="throw",s.arg=n,t.next=r,i&&(t.method="next",t.arg=e),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var l=r.call(a,"catchLoc"),d=r.call(a,"finallyLoc");if(l&&d){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!d)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,n){for(var t=this.tryEntries.length-1;t>=0;--t){var i=this.tryEntries[t];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=n,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),g},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),O(t),g}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var i=r.arg;O(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:L(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=e),g}},n}function fo(e,n,t,r,i,o,a){try{var s=e[o](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,i)}function ho(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(e,n)||go(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function go(e,n){if(e){if("string"==typeof e)return Co(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Co(e,n):void 0}}function Co(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const Ao=function(){var n=jt(),t=ho((0,e.useState)(localStorage.getItem("palestrante")||"Palestrante"),2),r=t[0],i=(t[1],ho((0,e.useState)([]),2)),o=i[0],a=i[1],s=ho((0,e.useState)(!0),2),l=(s[0],s[1]),d=ho((0,e.useState)(localStorage.getItem("name")),2),c=d[0],u=(d[1],ho((0,e.useState)(localStorage.getItem("pontuacao")),2)),m=u[0],p=(u[1],ho((0,e.useState)([]),2)),f=p[0],h=p[1],g=function(){var e,n=(e=po().mark((function e(){var n,t,r;return po().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=uo.get("csrftoken"),e.next=3,fetch("http://127.0.0.1:8000/api/rankings/speaker/1/",{method:"GET",headers:{"Content-Type":"application/json","X-CSRFToken":n}});case 3:if((t=e.sent).ok){e.next=9;break}return console.error("Erro ao buscar o ranking"),h([{espectador:"Lucas",score:100,avatar:"robo2"},{espectador:"Maria",score:90,avatar:"homem2"},{espectador:"João",score:80,avatar:"mulher1"},{espectador:"Ana",score:70,avatar:"mulher2"},{espectador:"Pedro",score:60,avatar:"robo1"}]),e.abrupt("return");case 9:return e.next=11,t.json();case 11:r=e.sent,h(r);case 13:case"end":return e.stop()}}),e)})),function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(e){fo(o,r,i,a,s,"next",e)}function s(e){fo(o,r,i,a,s,"throw",e)}a(void 0)}))});return function(){return n.apply(this,arguments)}}();return(0,e.useEffect)((function(){var e,n,t;0===f.length&&g(),e={espectador:c,score:m},n=[].concat((t=f,function(e){if(Array.isArray(e))return Co(e)}(t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||go(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),[e]).sort((function(e,n){return n.score-e.score})).slice(0,5),a(n),function(){l(!0);setTimeout((function(){l(!1)}),5e3)}()}),[f]),(0,e.useEffect)((function(){}),[]),(0,$t.jsxs)(Ci,{children:[(0,$t.jsx)(Yr,{titulo:"Resultado da dinâmica do "+r,subtitulo:(0,$t.jsx)($t.Fragment,{children:(0,$t.jsx)(Xt,{className:"mini",onClick:function(){n("/cronograma")},children:"SAIR"})})}),o.length>4&&(0,$t.jsxs)($t.Fragment,{children:[(0,$t.jsx)(qi,{top3:o.slice(0,3)}),(0,$t.jsx)(lo,{top5:o})]}),(0,$t.jsx)(Fi,{children:(0,$t.jsx)(ar,{})})]})};var vo,bo=Wn.article(vo||(vo=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    color: #FFF;\n    font-family: Inter;\n    font-size: 1rem;\n    font-style: italic;\n    font-weight: 400;\n    line-height: normal;\n"])));const yo=function(e){var n=e.children;return(0,$t.jsx)(bo,{children:n})},So=function(e){return(0,$t.jsx)($t.Fragment,{children:(0,$t.jsx)("div",{className:"container-selecao",children:e.children})})};var wo,Po=Wn.article(wo||(wo=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    max-width: 365px;\n    display: flex;\n\n    .swiper-slide {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n"])));function Eo(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function xo(e,n){void 0===e&&(e={}),void 0===n&&(n={});const t=["__proto__","constructor","prototype"];Object.keys(n).filter((e=>t.indexOf(e)<0)).forEach((t=>{void 0===e[t]?e[t]=n[t]:Eo(n[t])&&Eo(e[t])&&Object.keys(n[t]).length>0&&xo(e[t],n[t])}))}const _o={body:{},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector:()=>null,querySelectorAll:()=>[],getElementById:()=>null,createEvent:()=>({initEvent(){}}),createElement:()=>({children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName:()=>[]}),createElementNS:()=>({}),importNode:()=>null,location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function Do(){const e="undefined"!=typeof document?document:{};return xo(e,_o),e}const Oo={document:_o,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState(){},pushState(){},go(){},back(){}},CustomEvent:function(){return this},addEventListener(){},removeEventListener(){},getComputedStyle:()=>({getPropertyValue:()=>""}),Image(){},Date(){},screen:{},setTimeout(){},clearTimeout(){},matchMedia:()=>({}),requestAnimationFrame:e=>"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0),cancelAnimationFrame(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function Io(){const e="undefined"!=typeof window?window:{};return xo(e,Oo),e}function Lo(e,n){return void 0===n&&(n=0),setTimeout(e,n)}function ko(){return Date.now()}function Fo(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)}function Mo(e){return"undefined"!=typeof window&&void 0!==window.HTMLElement?e instanceof HTMLElement:e&&(1===e.nodeType||11===e.nodeType)}function jo(){const e=Object(arguments.length<=0?void 0:arguments[0]),n=["__proto__","constructor","prototype"];for(let t=1;t<arguments.length;t+=1){const r=t<0||arguments.length<=t?void 0:arguments[t];if(null!=r&&!Mo(r)){const t=Object.keys(Object(r)).filter((e=>n.indexOf(e)<0));for(let n=0,i=t.length;n<i;n+=1){const i=t[n],o=Object.getOwnPropertyDescriptor(r,i);void 0!==o&&o.enumerable&&(Fo(e[i])&&Fo(r[i])?r[i].__swiper__?e[i]=r[i]:jo(e[i],r[i]):!Fo(e[i])&&Fo(r[i])?(e[i]={},r[i].__swiper__?e[i]=r[i]:jo(e[i],r[i])):e[i]=r[i])}}}return e}function Uo(e,n,t){e.style.setProperty(n,t)}function Ro(e){let{swiper:n,targetPosition:t,side:r}=e;const i=Io(),o=-n.translate;let a,s=null;const l=n.params.speed;n.wrapperEl.style.scrollSnapType="none",i.cancelAnimationFrame(n.cssModeFrameID);const d=t>o?"next":"prev",c=(e,n)=>"next"===d&&e>=n||"prev"===d&&e<=n,u=()=>{a=(new Date).getTime(),null===s&&(s=a);const e=Math.max(Math.min((a-s)/l,1),0),d=.5-Math.cos(e*Math.PI)/2;let m=o+d*(t-o);if(c(m,t)&&(m=t),n.wrapperEl.scrollTo({[r]:m}),c(m,t))return n.wrapperEl.style.overflow="hidden",n.wrapperEl.style.scrollSnapType="",setTimeout((()=>{n.wrapperEl.style.overflow="",n.wrapperEl.scrollTo({[r]:m})})),void i.cancelAnimationFrame(n.cssModeFrameID);n.cssModeFrameID=i.requestAnimationFrame(u)};u()}function To(e,n){void 0===n&&(n="");const t=Io(),r=[...e.children];return t.HTMLSlotElement&&e instanceof HTMLSlotElement&&r.push(...e.assignedElements()),n?r.filter((e=>e.matches(n))):r}function No(e){try{return void console.warn(e)}catch(e){}}function Wo(e,n){void 0===n&&(n=[]);const t=document.createElement(e);return t.classList.add(...Array.isArray(n)?n:function(e){return void 0===e&&(e=""),e.trim().split(" ").filter((e=>!!e.trim()))}(n)),t}function Bo(e,n){return Io().getComputedStyle(e,null).getPropertyValue(n)}function zo(e){let n,t=e;if(t){for(n=0;null!==(t=t.previousSibling);)1===t.nodeType&&(n+=1);return n}}function Vo(e,n,t){const r=Io();return t?e["width"===n?"offsetWidth":"offsetHeight"]+parseFloat(r.getComputedStyle(e,null).getPropertyValue("width"===n?"margin-right":"margin-top"))+parseFloat(r.getComputedStyle(e,null).getPropertyValue("width"===n?"margin-left":"margin-bottom")):e.offsetWidth}let Go,Ho,Jo;function Yo(){return Go||(Go=function(){const e=Io(),n=Do();return{smoothScroll:n.documentElement&&n.documentElement.style&&"scrollBehavior"in n.documentElement.style,touch:!!("ontouchstart"in e||e.DocumentTouch&&n instanceof e.DocumentTouch)}}()),Go}function Qo(e){return void 0===e&&(e={}),Ho||(Ho=function(e){let{userAgent:n}=void 0===e?{}:e;const t=Yo(),r=Io(),i=r.navigator.platform,o=n||r.navigator.userAgent,a={ios:!1,android:!1},s=r.screen.width,l=r.screen.height,d=o.match(/(Android);?[\s\/]+([\d.]+)?/);let c=o.match(/(iPad).*OS\s([\d_]+)/);const u=o.match(/(iPod)(.*OS\s([\d_]+))?/),m=!c&&o.match(/(iPhone\sOS|iOS)\s([\d_]+)/),p="Win32"===i;let f="MacIntel"===i;return!c&&f&&t.touch&&["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(`${s}x${l}`)>=0&&(c=o.match(/(Version)\/([\d.]+)/),c||(c=[0,1,"13_0_0"]),f=!1),d&&!p&&(a.os="android",a.android=!0),(c||m||u)&&(a.os="ios",a.ios=!0),a}(e)),Ho}function Zo(){return Jo||(Jo=function(){const e=Io(),n=Qo();let t=!1;function r(){const n=e.navigator.userAgent.toLowerCase();return n.indexOf("safari")>=0&&n.indexOf("chrome")<0&&n.indexOf("android")<0}if(r()){const n=String(e.navigator.userAgent);if(n.includes("Version/")){const[e,r]=n.split("Version/")[1].split(" ")[0].split(".").map((e=>Number(e)));t=e<16||16===e&&r<2}}const i=/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent),o=r();return{isSafari:t||o,needPerspectiveFix:t,need3dFix:o||i&&n.ios,isWebView:i}}()),Jo}var $o={on(e,n,t){const r=this;if(!r.eventsListeners||r.destroyed)return r;if("function"!=typeof n)return r;const i=t?"unshift":"push";return e.split(" ").forEach((e=>{r.eventsListeners[e]||(r.eventsListeners[e]=[]),r.eventsListeners[e][i](n)})),r},once(e,n,t){const r=this;if(!r.eventsListeners||r.destroyed)return r;if("function"!=typeof n)return r;function i(){r.off(e,i),i.__emitterProxy&&delete i.__emitterProxy;for(var t=arguments.length,o=new Array(t),a=0;a<t;a++)o[a]=arguments[a];n.apply(r,o)}return i.__emitterProxy=n,r.on(e,i,t)},onAny(e,n){const t=this;if(!t.eventsListeners||t.destroyed)return t;if("function"!=typeof e)return t;const r=n?"unshift":"push";return t.eventsAnyListeners.indexOf(e)<0&&t.eventsAnyListeners[r](e),t},offAny(e){const n=this;if(!n.eventsListeners||n.destroyed)return n;if(!n.eventsAnyListeners)return n;const t=n.eventsAnyListeners.indexOf(e);return t>=0&&n.eventsAnyListeners.splice(t,1),n},off(e,n){const t=this;return!t.eventsListeners||t.destroyed?t:t.eventsListeners?(e.split(" ").forEach((e=>{void 0===n?t.eventsListeners[e]=[]:t.eventsListeners[e]&&t.eventsListeners[e].forEach(((r,i)=>{(r===n||r.__emitterProxy&&r.__emitterProxy===n)&&t.eventsListeners[e].splice(i,1)}))})),t):t},emit(){const e=this;if(!e.eventsListeners||e.destroyed)return e;if(!e.eventsListeners)return e;let n,t,r;for(var i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];return"string"==typeof o[0]||Array.isArray(o[0])?(n=o[0],t=o.slice(1,o.length),r=e):(n=o[0].events,t=o[0].data,r=o[0].context||e),t.unshift(r),(Array.isArray(n)?n:n.split(" ")).forEach((n=>{e.eventsAnyListeners&&e.eventsAnyListeners.length&&e.eventsAnyListeners.forEach((e=>{e.apply(r,[n,...t])})),e.eventsListeners&&e.eventsListeners[n]&&e.eventsListeners[n].forEach((e=>{e.apply(r,t)}))})),e}};const Xo=(e,n,t)=>{n&&!e.classList.contains(t)?e.classList.add(t):!n&&e.classList.contains(t)&&e.classList.remove(t)},qo=(e,n,t)=>{n&&!e.classList.contains(t)?e.classList.add(t):!n&&e.classList.contains(t)&&e.classList.remove(t)},Ko=(e,n)=>{if(!e||e.destroyed||!e.params)return;const t=n.closest(e.isElement?"swiper-slide":`.${e.params.slideClass}`);if(t){let n=t.querySelector(`.${e.params.lazyPreloaderClass}`);!n&&e.isElement&&(t.shadowRoot?n=t.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`):requestAnimationFrame((()=>{t.shadowRoot&&(n=t.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`),n&&n.remove())}))),n&&n.remove()}},ea=(e,n)=>{if(!e.slides[n])return;const t=e.slides[n].querySelector('[loading="lazy"]');t&&t.removeAttribute("loading")},na=e=>{if(!e||e.destroyed||!e.params)return;let n=e.params.lazyPreloadPrevNext;const t=e.slides.length;if(!t||!n||n<0)return;n=Math.min(n,t);const r="auto"===e.params.slidesPerView?e.slidesPerViewDynamic():Math.ceil(e.params.slidesPerView),i=e.activeIndex;if(e.params.grid&&e.params.grid.rows>1){const t=i,o=[t-n];return o.push(...Array.from({length:n}).map(((e,n)=>t+r+n))),void e.slides.forEach(((n,t)=>{o.includes(n.column)&&ea(e,t)}))}const o=i+r-1;if(e.params.rewind||e.params.loop)for(let r=i-n;r<=o+n;r+=1){const n=(r%t+t)%t;(n<i||n>o)&&ea(e,n)}else for(let r=Math.max(i-n,0);r<=Math.min(o+n,t-1);r+=1)r!==i&&(r>o||r<i)&&ea(e,r)};var ta={updateSize:function(){const e=this;let n,t;const r=e.el;n=void 0!==e.params.width&&null!==e.params.width?e.params.width:r.clientWidth,t=void 0!==e.params.height&&null!==e.params.height?e.params.height:r.clientHeight,0===n&&e.isHorizontal()||0===t&&e.isVertical()||(n=n-parseInt(Bo(r,"padding-left")||0,10)-parseInt(Bo(r,"padding-right")||0,10),t=t-parseInt(Bo(r,"padding-top")||0,10)-parseInt(Bo(r,"padding-bottom")||0,10),Number.isNaN(n)&&(n=0),Number.isNaN(t)&&(t=0),Object.assign(e,{width:n,height:t,size:e.isHorizontal()?n:t}))},updateSlides:function(){const e=this;function n(n,t){return parseFloat(n.getPropertyValue(e.getDirectionLabel(t))||0)}const t=e.params,{wrapperEl:r,slidesEl:i,size:o,rtlTranslate:a,wrongRTL:s}=e,l=e.virtual&&t.virtual.enabled,d=l?e.virtual.slides.length:e.slides.length,c=To(i,`.${e.params.slideClass}, swiper-slide`),u=l?e.virtual.slides.length:c.length;let m=[];const p=[],f=[];let h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(e));let g=t.slidesOffsetAfter;"function"==typeof g&&(g=t.slidesOffsetAfter.call(e));const C=e.snapGrid.length,A=e.slidesGrid.length;let v=t.spaceBetween,b=-h,y=0,S=0;if(void 0===o)return;"string"==typeof v&&v.indexOf("%")>=0?v=parseFloat(v.replace("%",""))/100*o:"string"==typeof v&&(v=parseFloat(v)),e.virtualSize=-v,c.forEach((e=>{a?e.style.marginLeft="":e.style.marginRight="",e.style.marginBottom="",e.style.marginTop=""})),t.centeredSlides&&t.cssMode&&(Uo(r,"--swiper-centered-offset-before",""),Uo(r,"--swiper-centered-offset-after",""));const w=t.grid&&t.grid.rows>1&&e.grid;let P;w?e.grid.initSlides(c):e.grid&&e.grid.unsetSlides();const E="auto"===t.slidesPerView&&t.breakpoints&&Object.keys(t.breakpoints).filter((e=>void 0!==t.breakpoints[e].slidesPerView)).length>0;for(let r=0;r<u;r+=1){let i;if(P=0,c[r]&&(i=c[r]),w&&e.grid.updateSlide(r,i,c),!c[r]||"none"!==Bo(i,"display")){if("auto"===t.slidesPerView){E&&(c[r].style[e.getDirectionLabel("width")]="");const o=getComputedStyle(i),a=i.style.transform,s=i.style.webkitTransform;if(a&&(i.style.transform="none"),s&&(i.style.webkitTransform="none"),t.roundLengths)P=e.isHorizontal()?Vo(i,"width",!0):Vo(i,"height",!0);else{const e=n(o,"width"),t=n(o,"padding-left"),r=n(o,"padding-right"),a=n(o,"margin-left"),s=n(o,"margin-right"),l=o.getPropertyValue("box-sizing");if(l&&"border-box"===l)P=e+a+s;else{const{clientWidth:n,offsetWidth:o}=i;P=e+t+r+a+s+(o-n)}}a&&(i.style.transform=a),s&&(i.style.webkitTransform=s),t.roundLengths&&(P=Math.floor(P))}else P=(o-(t.slidesPerView-1)*v)/t.slidesPerView,t.roundLengths&&(P=Math.floor(P)),c[r]&&(c[r].style[e.getDirectionLabel("width")]=`${P}px`);c[r]&&(c[r].swiperSlideSize=P),f.push(P),t.centeredSlides?(b=b+P/2+y/2+v,0===y&&0!==r&&(b=b-o/2-v),0===r&&(b=b-o/2-v),Math.abs(b)<.001&&(b=0),t.roundLengths&&(b=Math.floor(b)),S%t.slidesPerGroup==0&&m.push(b),p.push(b)):(t.roundLengths&&(b=Math.floor(b)),(S-Math.min(e.params.slidesPerGroupSkip,S))%e.params.slidesPerGroup==0&&m.push(b),p.push(b),b=b+P+v),e.virtualSize+=P+v,y=P,S+=1}}if(e.virtualSize=Math.max(e.virtualSize,o)+g,a&&s&&("slide"===t.effect||"coverflow"===t.effect)&&(r.style.width=`${e.virtualSize+v}px`),t.setWrapperSize&&(r.style[e.getDirectionLabel("width")]=`${e.virtualSize+v}px`),w&&e.grid.updateWrapperSize(P,m),!t.centeredSlides){const n=[];for(let r=0;r<m.length;r+=1){let i=m[r];t.roundLengths&&(i=Math.floor(i)),m[r]<=e.virtualSize-o&&n.push(i)}m=n,Math.floor(e.virtualSize-o)-Math.floor(m[m.length-1])>1&&m.push(e.virtualSize-o)}if(l&&t.loop){const n=f[0]+v;if(t.slidesPerGroup>1){const r=Math.ceil((e.virtual.slidesBefore+e.virtual.slidesAfter)/t.slidesPerGroup),i=n*t.slidesPerGroup;for(let e=0;e<r;e+=1)m.push(m[m.length-1]+i)}for(let r=0;r<e.virtual.slidesBefore+e.virtual.slidesAfter;r+=1)1===t.slidesPerGroup&&m.push(m[m.length-1]+n),p.push(p[p.length-1]+n),e.virtualSize+=n}if(0===m.length&&(m=[0]),0!==v){const n=e.isHorizontal()&&a?"marginLeft":e.getDirectionLabel("marginRight");c.filter(((e,n)=>!(t.cssMode&&!t.loop)||n!==c.length-1)).forEach((e=>{e.style[n]=`${v}px`}))}if(t.centeredSlides&&t.centeredSlidesBounds){let e=0;f.forEach((n=>{e+=n+(v||0)})),e-=v;const n=e>o?e-o:0;m=m.map((e=>e<=0?-h:e>n?n+g:e))}if(t.centerInsufficientSlides){let e=0;f.forEach((n=>{e+=n+(v||0)})),e-=v;const n=(t.slidesOffsetBefore||0)+(t.slidesOffsetAfter||0);if(e+n<o){const t=(o-e-n)/2;m.forEach(((e,n)=>{m[n]=e-t})),p.forEach(((e,n)=>{p[n]=e+t}))}}if(Object.assign(e,{slides:c,snapGrid:m,slidesGrid:p,slidesSizesGrid:f}),t.centeredSlides&&t.cssMode&&!t.centeredSlidesBounds){Uo(r,"--swiper-centered-offset-before",-m[0]+"px"),Uo(r,"--swiper-centered-offset-after",e.size/2-f[f.length-1]/2+"px");const n=-e.snapGrid[0],t=-e.slidesGrid[0];e.snapGrid=e.snapGrid.map((e=>e+n)),e.slidesGrid=e.slidesGrid.map((e=>e+t))}if(u!==d&&e.emit("slidesLengthChange"),m.length!==C&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),p.length!==A&&e.emit("slidesGridLengthChange"),t.watchSlidesProgress&&e.updateSlidesOffset(),e.emit("slidesUpdated"),!(l||t.cssMode||"slide"!==t.effect&&"fade"!==t.effect)){const n=`${t.containerModifierClass}backface-hidden`,r=e.el.classList.contains(n);u<=t.maxBackfaceHiddenSlides?r||e.el.classList.add(n):r&&e.el.classList.remove(n)}},updateAutoHeight:function(e){const n=this,t=[],r=n.virtual&&n.params.virtual.enabled;let i,o=0;"number"==typeof e?n.setTransition(e):!0===e&&n.setTransition(n.params.speed);const a=e=>r?n.slides[n.getSlideIndexByData(e)]:n.slides[e];if("auto"!==n.params.slidesPerView&&n.params.slidesPerView>1)if(n.params.centeredSlides)(n.visibleSlides||[]).forEach((e=>{t.push(e)}));else for(i=0;i<Math.ceil(n.params.slidesPerView);i+=1){const e=n.activeIndex+i;if(e>n.slides.length&&!r)break;t.push(a(e))}else t.push(a(n.activeIndex));for(i=0;i<t.length;i+=1)if(void 0!==t[i]){const e=t[i].offsetHeight;o=e>o?e:o}(o||0===o)&&(n.wrapperEl.style.height=`${o}px`)},updateSlidesOffset:function(){const e=this,n=e.slides,t=e.isElement?e.isHorizontal()?e.wrapperEl.offsetLeft:e.wrapperEl.offsetTop:0;for(let r=0;r<n.length;r+=1)n[r].swiperSlideOffset=(e.isHorizontal()?n[r].offsetLeft:n[r].offsetTop)-t-e.cssOverflowAdjustment()},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);const n=this,t=n.params,{slides:r,rtlTranslate:i,snapGrid:o}=n;if(0===r.length)return;void 0===r[0].swiperSlideOffset&&n.updateSlidesOffset();let a=-e;i&&(a=e),n.visibleSlidesIndexes=[],n.visibleSlides=[];let s=t.spaceBetween;"string"==typeof s&&s.indexOf("%")>=0?s=parseFloat(s.replace("%",""))/100*n.size:"string"==typeof s&&(s=parseFloat(s));for(let e=0;e<r.length;e+=1){const l=r[e];let d=l.swiperSlideOffset;t.cssMode&&t.centeredSlides&&(d-=r[0].swiperSlideOffset);const c=(a+(t.centeredSlides?n.minTranslate():0)-d)/(l.swiperSlideSize+s),u=(a-o[0]+(t.centeredSlides?n.minTranslate():0)-d)/(l.swiperSlideSize+s),m=-(a-d),p=m+n.slidesSizesGrid[e],f=m>=0&&m<=n.size-n.slidesSizesGrid[e],h=m>=0&&m<n.size-1||p>1&&p<=n.size||m<=0&&p>=n.size;h&&(n.visibleSlides.push(l),n.visibleSlidesIndexes.push(e)),Xo(l,h,t.slideVisibleClass),Xo(l,f,t.slideFullyVisibleClass),l.progress=i?-c:c,l.originalProgress=i?-u:u}},updateProgress:function(e){const n=this;if(void 0===e){const t=n.rtlTranslate?-1:1;e=n&&n.translate&&n.translate*t||0}const t=n.params,r=n.maxTranslate()-n.minTranslate();let{progress:i,isBeginning:o,isEnd:a,progressLoop:s}=n;const l=o,d=a;if(0===r)i=0,o=!0,a=!0;else{i=(e-n.minTranslate())/r;const t=Math.abs(e-n.minTranslate())<1,s=Math.abs(e-n.maxTranslate())<1;o=t||i<=0,a=s||i>=1,t&&(i=0),s&&(i=1)}if(t.loop){const t=n.getSlideIndexByData(0),r=n.getSlideIndexByData(n.slides.length-1),i=n.slidesGrid[t],o=n.slidesGrid[r],a=n.slidesGrid[n.slidesGrid.length-1],l=Math.abs(e);s=l>=i?(l-i)/a:(l+a-o)/a,s>1&&(s-=1)}Object.assign(n,{progress:i,progressLoop:s,isBeginning:o,isEnd:a}),(t.watchSlidesProgress||t.centeredSlides&&t.autoHeight)&&n.updateSlidesProgress(e),o&&!l&&n.emit("reachBeginning toEdge"),a&&!d&&n.emit("reachEnd toEdge"),(l&&!o||d&&!a)&&n.emit("fromEdge"),n.emit("progress",i)},updateSlidesClasses:function(){const e=this,{slides:n,params:t,slidesEl:r,activeIndex:i}=e,o=e.virtual&&t.virtual.enabled,a=e.grid&&t.grid&&t.grid.rows>1,s=e=>To(r,`.${t.slideClass}${e}, swiper-slide${e}`)[0];let l,d,c;if(o)if(t.loop){let n=i-e.virtual.slidesBefore;n<0&&(n=e.virtual.slides.length+n),n>=e.virtual.slides.length&&(n-=e.virtual.slides.length),l=s(`[data-swiper-slide-index="${n}"]`)}else l=s(`[data-swiper-slide-index="${i}"]`);else a?(l=n.find((e=>e.column===i)),c=n.find((e=>e.column===i+1)),d=n.find((e=>e.column===i-1))):l=n[i];l&&(a||(c=function(e,n){const t=[];for(;e.nextElementSibling;){const r=e.nextElementSibling;n?r.matches(n)&&t.push(r):t.push(r),e=r}return t}(l,`.${t.slideClass}, swiper-slide`)[0],t.loop&&!c&&(c=n[0]),d=function(e,n){const t=[];for(;e.previousElementSibling;){const r=e.previousElementSibling;n?r.matches(n)&&t.push(r):t.push(r),e=r}return t}(l,`.${t.slideClass}, swiper-slide`)[0],t.loop&&0===!d&&(d=n[n.length-1]))),n.forEach((e=>{qo(e,e===l,t.slideActiveClass),qo(e,e===c,t.slideNextClass),qo(e,e===d,t.slidePrevClass)})),e.emitSlidesClasses()},updateActiveIndex:function(e){const n=this,t=n.rtlTranslate?n.translate:-n.translate,{snapGrid:r,params:i,activeIndex:o,realIndex:a,snapIndex:s}=n;let l,d=e;const c=e=>{let t=e-n.virtual.slidesBefore;return t<0&&(t=n.virtual.slides.length+t),t>=n.virtual.slides.length&&(t-=n.virtual.slides.length),t};if(void 0===d&&(d=function(e){const{slidesGrid:n,params:t}=e,r=e.rtlTranslate?e.translate:-e.translate;let i;for(let e=0;e<n.length;e+=1)void 0!==n[e+1]?r>=n[e]&&r<n[e+1]-(n[e+1]-n[e])/2?i=e:r>=n[e]&&r<n[e+1]&&(i=e+1):r>=n[e]&&(i=e);return t.normalizeSlideIndex&&(i<0||void 0===i)&&(i=0),i}(n)),r.indexOf(t)>=0)l=r.indexOf(t);else{const e=Math.min(i.slidesPerGroupSkip,d);l=e+Math.floor((d-e)/i.slidesPerGroup)}if(l>=r.length&&(l=r.length-1),d===o&&!n.params.loop)return void(l!==s&&(n.snapIndex=l,n.emit("snapIndexChange")));if(d===o&&n.params.loop&&n.virtual&&n.params.virtual.enabled)return void(n.realIndex=c(d));const u=n.grid&&i.grid&&i.grid.rows>1;let m;if(n.virtual&&i.virtual.enabled&&i.loop)m=c(d);else if(u){const e=n.slides.find((e=>e.column===d));let t=parseInt(e.getAttribute("data-swiper-slide-index"),10);Number.isNaN(t)&&(t=Math.max(n.slides.indexOf(e),0)),m=Math.floor(t/i.grid.rows)}else if(n.slides[d]){const e=n.slides[d].getAttribute("data-swiper-slide-index");m=e?parseInt(e,10):d}else m=d;Object.assign(n,{previousSnapIndex:s,snapIndex:l,previousRealIndex:a,realIndex:m,previousIndex:o,activeIndex:d}),n.initialized&&na(n),n.emit("activeIndexChange"),n.emit("snapIndexChange"),(n.initialized||n.params.runCallbacksOnInit)&&(a!==m&&n.emit("realIndexChange"),n.emit("slideChange"))},updateClickedSlide:function(e,n){const t=this,r=t.params;let i=e.closest(`.${r.slideClass}, swiper-slide`);!i&&t.isElement&&n&&n.length>1&&n.includes(e)&&[...n.slice(n.indexOf(e)+1,n.length)].forEach((e=>{!i&&e.matches&&e.matches(`.${r.slideClass}, swiper-slide`)&&(i=e)}));let o,a=!1;if(i)for(let e=0;e<t.slides.length;e+=1)if(t.slides[e]===i){a=!0,o=e;break}if(!i||!a)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=i,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(i.getAttribute("data-swiper-slide-index"),10):t.clickedIndex=o,r.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},ra={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");const{params:n,rtlTranslate:t,translate:r,wrapperEl:i}=this;if(n.virtualTranslate)return t?-r:r;if(n.cssMode)return r;let o=function(e,n){void 0===n&&(n="x");const t=Io();let r,i,o;const a=function(e){const n=Io();let t;return n.getComputedStyle&&(t=n.getComputedStyle(e,null)),!t&&e.currentStyle&&(t=e.currentStyle),t||(t=e.style),t}(e);return t.WebKitCSSMatrix?(i=a.transform||a.webkitTransform,i.split(",").length>6&&(i=i.split(", ").map((e=>e.replace(",","."))).join(", ")),o=new t.WebKitCSSMatrix("none"===i?"":i)):(o=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),r=o.toString().split(",")),"x"===n&&(i=t.WebKitCSSMatrix?o.m41:16===r.length?parseFloat(r[12]):parseFloat(r[4])),"y"===n&&(i=t.WebKitCSSMatrix?o.m42:16===r.length?parseFloat(r[13]):parseFloat(r[5])),i||0}(i,e);return o+=this.cssOverflowAdjustment(),t&&(o=-o),o||0},setTranslate:function(e,n){const t=this,{rtlTranslate:r,params:i,wrapperEl:o,progress:a}=t;let s,l=0,d=0;t.isHorizontal()?l=r?-e:e:d=e,i.roundLengths&&(l=Math.floor(l),d=Math.floor(d)),t.previousTranslate=t.translate,t.translate=t.isHorizontal()?l:d,i.cssMode?o[t.isHorizontal()?"scrollLeft":"scrollTop"]=t.isHorizontal()?-l:-d:i.virtualTranslate||(t.isHorizontal()?l-=t.cssOverflowAdjustment():d-=t.cssOverflowAdjustment(),o.style.transform=`translate3d(${l}px, ${d}px, 0px)`);const c=t.maxTranslate()-t.minTranslate();s=0===c?0:(e-t.minTranslate())/c,s!==a&&t.updateProgress(e),t.emit("setTranslate",t.translate,n)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,n,t,r,i){void 0===e&&(e=0),void 0===n&&(n=this.params.speed),void 0===t&&(t=!0),void 0===r&&(r=!0);const o=this,{params:a,wrapperEl:s}=o;if(o.animating&&a.preventInteractionOnTransition)return!1;const l=o.minTranslate(),d=o.maxTranslate();let c;if(c=r&&e>l?l:r&&e<d?d:e,o.updateProgress(c),a.cssMode){const e=o.isHorizontal();if(0===n)s[e?"scrollLeft":"scrollTop"]=-c;else{if(!o.support.smoothScroll)return Ro({swiper:o,targetPosition:-c,side:e?"left":"top"}),!0;s.scrollTo({[e?"left":"top"]:-c,behavior:"smooth"})}return!0}return 0===n?(o.setTransition(0),o.setTranslate(c),t&&(o.emit("beforeTransitionStart",n,i),o.emit("transitionEnd"))):(o.setTransition(n),o.setTranslate(c),t&&(o.emit("beforeTransitionStart",n,i),o.emit("transitionStart")),o.animating||(o.animating=!0,o.onTranslateToWrapperTransitionEnd||(o.onTranslateToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.wrapperEl.removeEventListener("transitionend",o.onTranslateToWrapperTransitionEnd),o.onTranslateToWrapperTransitionEnd=null,delete o.onTranslateToWrapperTransitionEnd,o.animating=!1,t&&o.emit("transitionEnd"))}),o.wrapperEl.addEventListener("transitionend",o.onTranslateToWrapperTransitionEnd))),!0}};function ia(e){let{swiper:n,runCallbacks:t,direction:r,step:i}=e;const{activeIndex:o,previousIndex:a}=n;let s=r;if(s||(s=o>a?"next":o<a?"prev":"reset"),n.emit(`transition${i}`),t&&o!==a){if("reset"===s)return void n.emit(`slideResetTransition${i}`);n.emit(`slideChangeTransition${i}`),"next"===s?n.emit(`slideNextTransition${i}`):n.emit(`slidePrevTransition${i}`)}}var oa={setTransition:function(e,n){const t=this;t.params.cssMode||(t.wrapperEl.style.transitionDuration=`${e}ms`,t.wrapperEl.style.transitionDelay=0===e?"0ms":""),t.emit("setTransition",e,n)},transitionStart:function(e,n){void 0===e&&(e=!0);const t=this,{params:r}=t;r.cssMode||(r.autoHeight&&t.updateAutoHeight(),ia({swiper:t,runCallbacks:e,direction:n,step:"Start"}))},transitionEnd:function(e,n){void 0===e&&(e=!0);const t=this,{params:r}=t;t.animating=!1,r.cssMode||(t.setTransition(0),ia({swiper:t,runCallbacks:e,direction:n,step:"End"}))}},aa={slideTo:function(e,n,t,r,i){void 0===e&&(e=0),void 0===t&&(t=!0),"string"==typeof e&&(e=parseInt(e,10));const o=this;let a=e;a<0&&(a=0);const{params:s,snapGrid:l,slidesGrid:d,previousIndex:c,activeIndex:u,rtlTranslate:m,wrapperEl:p,enabled:f}=o;if(!f&&!r&&!i||o.destroyed||o.animating&&s.preventInteractionOnTransition)return!1;void 0===n&&(n=o.params.speed);const h=Math.min(o.params.slidesPerGroupSkip,a);let g=h+Math.floor((a-h)/o.params.slidesPerGroup);g>=l.length&&(g=l.length-1);const C=-l[g];if(s.normalizeSlideIndex)for(let e=0;e<d.length;e+=1){const n=-Math.floor(100*C),t=Math.floor(100*d[e]),r=Math.floor(100*d[e+1]);void 0!==d[e+1]?n>=t&&n<r-(r-t)/2?a=e:n>=t&&n<r&&(a=e+1):n>=t&&(a=e)}if(o.initialized&&a!==u){if(!o.allowSlideNext&&(m?C>o.translate&&C>o.minTranslate():C<o.translate&&C<o.minTranslate()))return!1;if(!o.allowSlidePrev&&C>o.translate&&C>o.maxTranslate()&&(u||0)!==a)return!1}let A;a!==(c||0)&&t&&o.emit("beforeSlideChangeStart"),o.updateProgress(C),A=a>u?"next":a<u?"prev":"reset";const v=o.virtual&&o.params.virtual.enabled;if((!v||!i)&&(m&&-C===o.translate||!m&&C===o.translate))return o.updateActiveIndex(a),s.autoHeight&&o.updateAutoHeight(),o.updateSlidesClasses(),"slide"!==s.effect&&o.setTranslate(C),"reset"!==A&&(o.transitionStart(t,A),o.transitionEnd(t,A)),!1;if(s.cssMode){const e=o.isHorizontal(),t=m?C:-C;if(0===n)v&&(o.wrapperEl.style.scrollSnapType="none",o._immediateVirtual=!0),v&&!o._cssModeVirtualInitialSet&&o.params.initialSlide>0?(o._cssModeVirtualInitialSet=!0,requestAnimationFrame((()=>{p[e?"scrollLeft":"scrollTop"]=t}))):p[e?"scrollLeft":"scrollTop"]=t,v&&requestAnimationFrame((()=>{o.wrapperEl.style.scrollSnapType="",o._immediateVirtual=!1}));else{if(!o.support.smoothScroll)return Ro({swiper:o,targetPosition:t,side:e?"left":"top"}),!0;p.scrollTo({[e?"left":"top"]:t,behavior:"smooth"})}return!0}const b=Zo().isSafari;return v&&!i&&b&&o.isElement&&o.virtual.update(!1,!1,a),o.setTransition(n),o.setTranslate(C),o.updateActiveIndex(a),o.updateSlidesClasses(),o.emit("beforeTransitionStart",n,r),o.transitionStart(t,A),0===n?o.transitionEnd(t,A):o.animating||(o.animating=!0,o.onSlideToWrapperTransitionEnd||(o.onSlideToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.wrapperEl.removeEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.onSlideToWrapperTransitionEnd=null,delete o.onSlideToWrapperTransitionEnd,o.transitionEnd(t,A))}),o.wrapperEl.addEventListener("transitionend",o.onSlideToWrapperTransitionEnd)),!0},slideToLoop:function(e,n,t,r){void 0===e&&(e=0),void 0===t&&(t=!0),"string"==typeof e&&(e=parseInt(e,10));const i=this;if(i.destroyed)return;void 0===n&&(n=i.params.speed);const o=i.grid&&i.params.grid&&i.params.grid.rows>1;let a=e;if(i.params.loop)if(i.virtual&&i.params.virtual.enabled)a+=i.virtual.slidesBefore;else{let e;if(o){const n=a*i.params.grid.rows;e=i.slides.find((e=>1*e.getAttribute("data-swiper-slide-index")===n)).column}else e=i.getSlideIndexByData(a);const n=o?Math.ceil(i.slides.length/i.params.grid.rows):i.slides.length,{centeredSlides:t}=i.params;let s=i.params.slidesPerView;"auto"===s?s=i.slidesPerViewDynamic():(s=Math.ceil(parseFloat(i.params.slidesPerView,10)),t&&s%2==0&&(s+=1));let l=n-e<s;if(t&&(l=l||e<Math.ceil(s/2)),r&&t&&"auto"!==i.params.slidesPerView&&!o&&(l=!1),l){const r=t?e<i.activeIndex?"prev":"next":e-i.activeIndex-1<i.params.slidesPerView?"next":"prev";i.loopFix({direction:r,slideTo:!0,activeSlideIndex:"next"===r?e+1:e-n+1,slideRealIndex:"next"===r?i.realIndex:void 0})}if(o){const e=a*i.params.grid.rows;a=i.slides.find((n=>1*n.getAttribute("data-swiper-slide-index")===e)).column}else a=i.getSlideIndexByData(a)}return requestAnimationFrame((()=>{i.slideTo(a,n,t,r)})),i},slideNext:function(e,n,t){void 0===n&&(n=!0);const r=this,{enabled:i,params:o,animating:a}=r;if(!i||r.destroyed)return r;void 0===e&&(e=r.params.speed);let s=o.slidesPerGroup;"auto"===o.slidesPerView&&1===o.slidesPerGroup&&o.slidesPerGroupAuto&&(s=Math.max(r.slidesPerViewDynamic("current",!0),1));const l=r.activeIndex<o.slidesPerGroupSkip?1:s,d=r.virtual&&o.virtual.enabled;if(o.loop){if(a&&!d&&o.loopPreventsSliding)return!1;if(r.loopFix({direction:"next"}),r._clientLeft=r.wrapperEl.clientLeft,r.activeIndex===r.slides.length-1&&o.cssMode)return requestAnimationFrame((()=>{r.slideTo(r.activeIndex+l,e,n,t)})),!0}return o.rewind&&r.isEnd?r.slideTo(0,e,n,t):r.slideTo(r.activeIndex+l,e,n,t)},slidePrev:function(e,n,t){void 0===n&&(n=!0);const r=this,{params:i,snapGrid:o,slidesGrid:a,rtlTranslate:s,enabled:l,animating:d}=r;if(!l||r.destroyed)return r;void 0===e&&(e=r.params.speed);const c=r.virtual&&i.virtual.enabled;if(i.loop){if(d&&!c&&i.loopPreventsSliding)return!1;r.loopFix({direction:"prev"}),r._clientLeft=r.wrapperEl.clientLeft}function u(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}const m=u(s?r.translate:-r.translate),p=o.map((e=>u(e))),f=i.freeMode&&i.freeMode.enabled;let h=o[p.indexOf(m)-1];if(void 0===h&&(i.cssMode||f)){let e;o.forEach(((n,t)=>{m>=n&&(e=t)})),void 0!==e&&(h=f?o[e]:o[e>0?e-1:e])}let g=0;if(void 0!==h&&(g=a.indexOf(h),g<0&&(g=r.activeIndex-1),"auto"===i.slidesPerView&&1===i.slidesPerGroup&&i.slidesPerGroupAuto&&(g=g-r.slidesPerViewDynamic("previous",!0)+1,g=Math.max(g,0))),i.rewind&&r.isBeginning){const i=r.params.virtual&&r.params.virtual.enabled&&r.virtual?r.virtual.slides.length-1:r.slides.length-1;return r.slideTo(i,e,n,t)}return i.loop&&0===r.activeIndex&&i.cssMode?(requestAnimationFrame((()=>{r.slideTo(g,e,n,t)})),!0):r.slideTo(g,e,n,t)},slideReset:function(e,n,t){void 0===n&&(n=!0);const r=this;if(!r.destroyed)return void 0===e&&(e=r.params.speed),r.slideTo(r.activeIndex,e,n,t)},slideToClosest:function(e,n,t,r){void 0===n&&(n=!0),void 0===r&&(r=.5);const i=this;if(i.destroyed)return;void 0===e&&(e=i.params.speed);let o=i.activeIndex;const a=Math.min(i.params.slidesPerGroupSkip,o),s=a+Math.floor((o-a)/i.params.slidesPerGroup),l=i.rtlTranslate?i.translate:-i.translate;if(l>=i.snapGrid[s]){const e=i.snapGrid[s];l-e>(i.snapGrid[s+1]-e)*r&&(o+=i.params.slidesPerGroup)}else{const e=i.snapGrid[s-1];l-e<=(i.snapGrid[s]-e)*r&&(o-=i.params.slidesPerGroup)}return o=Math.max(o,0),o=Math.min(o,i.slidesGrid.length-1),i.slideTo(o,e,n,t)},slideToClickedSlide:function(){const e=this;if(e.destroyed)return;const{params:n,slidesEl:t}=e,r="auto"===n.slidesPerView?e.slidesPerViewDynamic():n.slidesPerView;let i,o=e.clickedIndex;const a=e.isElement?"swiper-slide":`.${n.slideClass}`;if(n.loop){if(e.animating)return;i=parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"),10),n.centeredSlides?o<e.loopedSlides-r/2||o>e.slides.length-e.loopedSlides+r/2?(e.loopFix(),o=e.getSlideIndex(To(t,`${a}[data-swiper-slide-index="${i}"]`)[0]),Lo((()=>{e.slideTo(o)}))):e.slideTo(o):o>e.slides.length-r?(e.loopFix(),o=e.getSlideIndex(To(t,`${a}[data-swiper-slide-index="${i}"]`)[0]),Lo((()=>{e.slideTo(o)}))):e.slideTo(o)}else e.slideTo(o)}},sa={loopCreate:function(e,n){const t=this,{params:r,slidesEl:i}=t;if(!r.loop||t.virtual&&t.params.virtual.enabled)return;const o=()=>{To(i,`.${r.slideClass}, swiper-slide`).forEach(((e,n)=>{e.setAttribute("data-swiper-slide-index",n)}))},a=t.grid&&r.grid&&r.grid.rows>1,s=r.slidesPerGroup*(a?r.grid.rows:1),l=t.slides.length%s!=0,d=a&&t.slides.length%r.grid.rows!=0,c=e=>{for(let n=0;n<e;n+=1){const e=t.isElement?Wo("swiper-slide",[r.slideBlankClass]):Wo("div",[r.slideClass,r.slideBlankClass]);t.slidesEl.append(e)}};l?(r.loopAddBlankSlides?(c(s-t.slides.length%s),t.recalcSlides(),t.updateSlides()):No("Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"),o()):d?(r.loopAddBlankSlides?(c(r.grid.rows-t.slides.length%r.grid.rows),t.recalcSlides(),t.updateSlides()):No("Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"),o()):o(),t.loopFix({slideRealIndex:e,direction:r.centeredSlides?void 0:"next",initial:n})},loopFix:function(e){let{slideRealIndex:n,slideTo:t=!0,direction:r,setTranslate:i,activeSlideIndex:o,initial:a,byController:s,byMousewheel:l}=void 0===e?{}:e;const d=this;if(!d.params.loop)return;d.emit("beforeLoopFix");const{slides:c,allowSlidePrev:u,allowSlideNext:m,slidesEl:p,params:f}=d,{centeredSlides:h,initialSlide:g}=f;if(d.allowSlidePrev=!0,d.allowSlideNext=!0,d.virtual&&f.virtual.enabled)return t&&(f.centeredSlides||0!==d.snapIndex?f.centeredSlides&&d.snapIndex<f.slidesPerView?d.slideTo(d.virtual.slides.length+d.snapIndex,0,!1,!0):d.snapIndex===d.snapGrid.length-1&&d.slideTo(d.virtual.slidesBefore,0,!1,!0):d.slideTo(d.virtual.slides.length,0,!1,!0)),d.allowSlidePrev=u,d.allowSlideNext=m,void d.emit("loopFix");let C=f.slidesPerView;"auto"===C?C=d.slidesPerViewDynamic():(C=Math.ceil(parseFloat(f.slidesPerView,10)),h&&C%2==0&&(C+=1));const A=f.slidesPerGroupAuto?C:f.slidesPerGroup;let v=A;v%A!=0&&(v+=A-v%A),v+=f.loopAdditionalSlides,d.loopedSlides=v;const b=d.grid&&f.grid&&f.grid.rows>1;c.length<C+v||"cards"===d.params.effect&&c.length<C+2*v?No("Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"):b&&"row"===f.grid.fill&&No("Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`");const y=[],S=[],w=b?Math.ceil(c.length/f.grid.rows):c.length,P=a&&w-g<C&&!h;let E=P?g:d.activeIndex;void 0===o?o=d.getSlideIndex(c.find((e=>e.classList.contains(f.slideActiveClass)))):E=o;const x="next"===r||!r,_="prev"===r||!r;let D=0,O=0;const I=(b?c[o].column:o)+(h&&void 0===i?-C/2+.5:0);if(I<v){D=Math.max(v-I,A);for(let e=0;e<v-I;e+=1){const n=e-Math.floor(e/w)*w;if(b){const e=w-n-1;for(let n=c.length-1;n>=0;n-=1)c[n].column===e&&y.push(n)}else y.push(w-n-1)}}else if(I+C>w-v){O=Math.max(I-(w-2*v),A),P&&(O=Math.max(O,C-w+g+1));for(let e=0;e<O;e+=1){const n=e-Math.floor(e/w)*w;b?c.forEach(((e,t)=>{e.column===n&&S.push(t)})):S.push(n)}}if(d.__preventObserver__=!0,requestAnimationFrame((()=>{d.__preventObserver__=!1})),"cards"===d.params.effect&&c.length<C+2*v&&(S.includes(o)&&S.splice(S.indexOf(o),1),y.includes(o)&&y.splice(y.indexOf(o),1)),_&&y.forEach((e=>{c[e].swiperLoopMoveDOM=!0,p.prepend(c[e]),c[e].swiperLoopMoveDOM=!1})),x&&S.forEach((e=>{c[e].swiperLoopMoveDOM=!0,p.append(c[e]),c[e].swiperLoopMoveDOM=!1})),d.recalcSlides(),"auto"===f.slidesPerView?d.updateSlides():b&&(y.length>0&&_||S.length>0&&x)&&d.slides.forEach(((e,n)=>{d.grid.updateSlide(n,e,d.slides)})),f.watchSlidesProgress&&d.updateSlidesOffset(),t)if(y.length>0&&_){if(void 0===n){const e=d.slidesGrid[E],n=d.slidesGrid[E+D]-e;l?d.setTranslate(d.translate-n):(d.slideTo(E+Math.ceil(D),0,!1,!0),i&&(d.touchEventsData.startTranslate=d.touchEventsData.startTranslate-n,d.touchEventsData.currentTranslate=d.touchEventsData.currentTranslate-n))}else if(i){const e=b?y.length/f.grid.rows:y.length;d.slideTo(d.activeIndex+e,0,!1,!0),d.touchEventsData.currentTranslate=d.translate}}else if(S.length>0&&x)if(void 0===n){const e=d.slidesGrid[E],n=d.slidesGrid[E-O]-e;l?d.setTranslate(d.translate-n):(d.slideTo(E-O,0,!1,!0),i&&(d.touchEventsData.startTranslate=d.touchEventsData.startTranslate-n,d.touchEventsData.currentTranslate=d.touchEventsData.currentTranslate-n))}else{const e=b?S.length/f.grid.rows:S.length;d.slideTo(d.activeIndex-e,0,!1,!0)}if(d.allowSlidePrev=u,d.allowSlideNext=m,d.controller&&d.controller.control&&!s){const e={slideRealIndex:n,direction:r,setTranslate:i,activeSlideIndex:o,byController:!0};Array.isArray(d.controller.control)?d.controller.control.forEach((n=>{!n.destroyed&&n.params.loop&&n.loopFix({...e,slideTo:n.params.slidesPerView===f.slidesPerView&&t})})):d.controller.control instanceof d.constructor&&d.controller.control.params.loop&&d.controller.control.loopFix({...e,slideTo:d.controller.control.params.slidesPerView===f.slidesPerView&&t})}d.emit("loopFix")},loopDestroy:function(){const e=this,{params:n,slidesEl:t}=e;if(!n.loop||!t||e.virtual&&e.params.virtual.enabled)return;e.recalcSlides();const r=[];e.slides.forEach((e=>{const n=void 0===e.swiperSlideIndex?1*e.getAttribute("data-swiper-slide-index"):e.swiperSlideIndex;r[n]=e})),e.slides.forEach((e=>{e.removeAttribute("data-swiper-slide-index")})),r.forEach((e=>{t.append(e)})),e.recalcSlides(),e.slideTo(e.realIndex,0)}},la={setGrabCursor:function(e){const n=this;if(!n.params.simulateTouch||n.params.watchOverflow&&n.isLocked||n.params.cssMode)return;const t="container"===n.params.touchEventsTarget?n.el:n.wrapperEl;n.isElement&&(n.__preventObserver__=!0),t.style.cursor="move",t.style.cursor=e?"grabbing":"grab",n.isElement&&requestAnimationFrame((()=>{n.__preventObserver__=!1}))},unsetGrabCursor:function(){const e=this;e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e.isElement&&(e.__preventObserver__=!0),e["container"===e.params.touchEventsTarget?"el":"wrapperEl"].style.cursor="",e.isElement&&requestAnimationFrame((()=>{e.__preventObserver__=!1})))}};function da(e,n,t){const r=Io(),{params:i}=e,o=i.edgeSwipeDetection,a=i.edgeSwipeThreshold;return!o||!(t<=a||t>=r.innerWidth-a)||"prevent"===o&&(n.preventDefault(),!0)}function ca(e){const n=this,t=Do();let r=e;r.originalEvent&&(r=r.originalEvent);const i=n.touchEventsData;if("pointerdown"===r.type){if(null!==i.pointerId&&i.pointerId!==r.pointerId)return;i.pointerId=r.pointerId}else"touchstart"===r.type&&1===r.targetTouches.length&&(i.touchId=r.targetTouches[0].identifier);if("touchstart"===r.type)return void da(n,r,r.targetTouches[0].pageX);const{params:o,touches:a,enabled:s}=n;if(!s)return;if(!o.simulateTouch&&"mouse"===r.pointerType)return;if(n.animating&&o.preventInteractionOnTransition)return;!n.animating&&o.cssMode&&o.loop&&n.loopFix();let l=r.target;if("wrapper"===o.touchEventsTarget&&!function(e,n){const t=Io();let r=n.contains(e);return!r&&t.HTMLSlotElement&&n instanceof HTMLSlotElement&&(r=[...n.assignedElements()].includes(e),r||(r=function(e,n){const t=[n];for(;t.length>0;){const n=t.shift();if(e===n)return!0;t.push(...n.children,...n.shadowRoot?n.shadowRoot.children:[],...n.assignedElements?n.assignedElements():[])}}(e,n))),r}(l,n.wrapperEl))return;if("which"in r&&3===r.which)return;if("button"in r&&r.button>0)return;if(i.isTouched&&i.isMoved)return;const d=!!o.noSwipingClass&&""!==o.noSwipingClass,c=r.composedPath?r.composedPath():r.path;d&&r.target&&r.target.shadowRoot&&c&&(l=c[0]);const u=o.noSwipingSelector?o.noSwipingSelector:`.${o.noSwipingClass}`,m=!(!r.target||!r.target.shadowRoot);if(o.noSwiping&&(m?function(e,n){return void 0===n&&(n=this),function n(t){if(!t||t===Do()||t===Io())return null;t.assignedSlot&&(t=t.assignedSlot);const r=t.closest(e);return r||t.getRootNode?r||n(t.getRootNode().host):null}(n)}(u,l):l.closest(u)))return void(n.allowClick=!0);if(o.swipeHandler&&!l.closest(o.swipeHandler))return;a.currentX=r.pageX,a.currentY=r.pageY;const p=a.currentX,f=a.currentY;if(!da(n,r,p))return;Object.assign(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),a.startX=p,a.startY=f,i.touchStartTime=ko(),n.allowClick=!0,n.updateSize(),n.swipeDirection=void 0,o.threshold>0&&(i.allowThresholdMove=!1);let h=!0;l.matches(i.focusableElements)&&(h=!1,"SELECT"===l.nodeName&&(i.isTouched=!1)),t.activeElement&&t.activeElement.matches(i.focusableElements)&&t.activeElement!==l&&("mouse"===r.pointerType||"mouse"!==r.pointerType&&!l.matches(i.focusableElements))&&t.activeElement.blur();const g=h&&n.allowTouchMove&&o.touchStartPreventDefault;!o.touchStartForcePreventDefault&&!g||l.isContentEditable||r.preventDefault(),o.freeMode&&o.freeMode.enabled&&n.freeMode&&n.animating&&!o.cssMode&&n.freeMode.onTouchStart(),n.emit("touchStart",r)}function ua(e){const n=Do(),t=this,r=t.touchEventsData,{params:i,touches:o,rtlTranslate:a,enabled:s}=t;if(!s)return;if(!i.simulateTouch&&"mouse"===e.pointerType)return;let l,d=e;if(d.originalEvent&&(d=d.originalEvent),"pointermove"===d.type){if(null!==r.touchId)return;if(d.pointerId!==r.pointerId)return}if("touchmove"===d.type){if(l=[...d.changedTouches].find((e=>e.identifier===r.touchId)),!l||l.identifier!==r.touchId)return}else l=d;if(!r.isTouched)return void(r.startMoving&&r.isScrolling&&t.emit("touchMoveOpposite",d));const c=l.pageX,u=l.pageY;if(d.preventedByNestedSwiper)return o.startX=c,void(o.startY=u);if(!t.allowTouchMove)return d.target.matches(r.focusableElements)||(t.allowClick=!1),void(r.isTouched&&(Object.assign(o,{startX:c,startY:u,currentX:c,currentY:u}),r.touchStartTime=ko()));if(i.touchReleaseOnEdges&&!i.loop)if(t.isVertical()){if(u<o.startY&&t.translate<=t.maxTranslate()||u>o.startY&&t.translate>=t.minTranslate())return r.isTouched=!1,void(r.isMoved=!1)}else{if(a&&(c>o.startX&&-t.translate<=t.maxTranslate()||c<o.startX&&-t.translate>=t.minTranslate()))return;if(!a&&(c<o.startX&&t.translate<=t.maxTranslate()||c>o.startX&&t.translate>=t.minTranslate()))return}if(n.activeElement&&n.activeElement.matches(r.focusableElements)&&n.activeElement!==d.target&&"mouse"!==d.pointerType&&n.activeElement.blur(),n.activeElement&&d.target===n.activeElement&&d.target.matches(r.focusableElements))return r.isMoved=!0,void(t.allowClick=!1);r.allowTouchCallbacks&&t.emit("touchMove",d),o.previousX=o.currentX,o.previousY=o.currentY,o.currentX=c,o.currentY=u;const m=o.currentX-o.startX,p=o.currentY-o.startY;if(t.params.threshold&&Math.sqrt(m**2+p**2)<t.params.threshold)return;if(void 0===r.isScrolling){let e;t.isHorizontal()&&o.currentY===o.startY||t.isVertical()&&o.currentX===o.startX?r.isScrolling=!1:m*m+p*p>=25&&(e=180*Math.atan2(Math.abs(p),Math.abs(m))/Math.PI,r.isScrolling=t.isHorizontal()?e>i.touchAngle:90-e>i.touchAngle)}if(r.isScrolling&&t.emit("touchMoveOpposite",d),void 0===r.startMoving&&(o.currentX===o.startX&&o.currentY===o.startY||(r.startMoving=!0)),r.isScrolling||"touchmove"===d.type&&r.preventTouchMoveFromPointerMove)return void(r.isTouched=!1);if(!r.startMoving)return;t.allowClick=!1,!i.cssMode&&d.cancelable&&d.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&d.stopPropagation();let f=t.isHorizontal()?m:p,h=t.isHorizontal()?o.currentX-o.previousX:o.currentY-o.previousY;i.oneWayMovement&&(f=Math.abs(f)*(a?1:-1),h=Math.abs(h)*(a?1:-1)),o.diff=f,f*=i.touchRatio,a&&(f=-f,h=-h);const g=t.touchesDirection;t.swipeDirection=f>0?"prev":"next",t.touchesDirection=h>0?"prev":"next";const C=t.params.loop&&!i.cssMode,A="next"===t.touchesDirection&&t.allowSlideNext||"prev"===t.touchesDirection&&t.allowSlidePrev;if(!r.isMoved){if(C&&A&&t.loopFix({direction:t.swipeDirection}),r.startTranslate=t.getTranslate(),t.setTransition(0),t.animating){const e=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0,detail:{bySwiperTouchMove:!0}});t.wrapperEl.dispatchEvent(e)}r.allowMomentumBounce=!1,!i.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",d)}if((new Date).getTime(),!1!==i._loopSwapReset&&r.isMoved&&r.allowThresholdMove&&g!==t.touchesDirection&&C&&A&&Math.abs(f)>=1)return Object.assign(o,{startX:c,startY:u,currentX:c,currentY:u,startTranslate:r.currentTranslate}),r.loopSwapReset=!0,void(r.startTranslate=r.currentTranslate);t.emit("sliderMove",d),r.isMoved=!0,r.currentTranslate=f+r.startTranslate;let v=!0,b=i.resistanceRatio;if(i.touchReleaseOnEdges&&(b=0),f>0?(C&&A&&r.allowThresholdMove&&r.currentTranslate>(i.centeredSlides?t.minTranslate()-t.slidesSizesGrid[t.activeIndex+1]-("auto"!==i.slidesPerView&&t.slides.length-i.slidesPerView>=2?t.slidesSizesGrid[t.activeIndex+1]+t.params.spaceBetween:0)-t.params.spaceBetween:t.minTranslate())&&t.loopFix({direction:"prev",setTranslate:!0,activeSlideIndex:0}),r.currentTranslate>t.minTranslate()&&(v=!1,i.resistance&&(r.currentTranslate=t.minTranslate()-1+(-t.minTranslate()+r.startTranslate+f)**b))):f<0&&(C&&A&&r.allowThresholdMove&&r.currentTranslate<(i.centeredSlides?t.maxTranslate()+t.slidesSizesGrid[t.slidesSizesGrid.length-1]+t.params.spaceBetween+("auto"!==i.slidesPerView&&t.slides.length-i.slidesPerView>=2?t.slidesSizesGrid[t.slidesSizesGrid.length-1]+t.params.spaceBetween:0):t.maxTranslate())&&t.loopFix({direction:"next",setTranslate:!0,activeSlideIndex:t.slides.length-("auto"===i.slidesPerView?t.slidesPerViewDynamic():Math.ceil(parseFloat(i.slidesPerView,10)))}),r.currentTranslate<t.maxTranslate()&&(v=!1,i.resistance&&(r.currentTranslate=t.maxTranslate()+1-(t.maxTranslate()-r.startTranslate-f)**b))),v&&(d.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&r.currentTranslate<r.startTranslate&&(r.currentTranslate=r.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&r.currentTranslate>r.startTranslate&&(r.currentTranslate=r.startTranslate),t.allowSlidePrev||t.allowSlideNext||(r.currentTranslate=r.startTranslate),i.threshold>0){if(!(Math.abs(f)>i.threshold||r.allowThresholdMove))return void(r.currentTranslate=r.startTranslate);if(!r.allowThresholdMove)return r.allowThresholdMove=!0,o.startX=o.currentX,o.startY=o.currentY,r.currentTranslate=r.startTranslate,void(o.diff=t.isHorizontal()?o.currentX-o.startX:o.currentY-o.startY)}i.followFinger&&!i.cssMode&&((i.freeMode&&i.freeMode.enabled&&t.freeMode||i.watchSlidesProgress)&&(t.updateActiveIndex(),t.updateSlidesClasses()),i.freeMode&&i.freeMode.enabled&&t.freeMode&&t.freeMode.onTouchMove(),t.updateProgress(r.currentTranslate),t.setTranslate(r.currentTranslate))}function ma(e){const n=this,t=n.touchEventsData;let r,i=e;if(i.originalEvent&&(i=i.originalEvent),"touchend"===i.type||"touchcancel"===i.type){if(r=[...i.changedTouches].find((e=>e.identifier===t.touchId)),!r||r.identifier!==t.touchId)return}else{if(null!==t.touchId)return;if(i.pointerId!==t.pointerId)return;r=i}if(["pointercancel","pointerout","pointerleave","contextmenu"].includes(i.type)&&(!["pointercancel","contextmenu"].includes(i.type)||!n.browser.isSafari&&!n.browser.isWebView))return;t.pointerId=null,t.touchId=null;const{params:o,touches:a,rtlTranslate:s,slidesGrid:l,enabled:d}=n;if(!d)return;if(!o.simulateTouch&&"mouse"===i.pointerType)return;if(t.allowTouchCallbacks&&n.emit("touchEnd",i),t.allowTouchCallbacks=!1,!t.isTouched)return t.isMoved&&o.grabCursor&&n.setGrabCursor(!1),t.isMoved=!1,void(t.startMoving=!1);o.grabCursor&&t.isMoved&&t.isTouched&&(!0===n.allowSlideNext||!0===n.allowSlidePrev)&&n.setGrabCursor(!1);const c=ko(),u=c-t.touchStartTime;if(n.allowClick){const e=i.path||i.composedPath&&i.composedPath();n.updateClickedSlide(e&&e[0]||i.target,e),n.emit("tap click",i),u<300&&c-t.lastClickTime<300&&n.emit("doubleTap doubleClick",i)}if(t.lastClickTime=ko(),Lo((()=>{n.destroyed||(n.allowClick=!0)})),!t.isTouched||!t.isMoved||!n.swipeDirection||0===a.diff&&!t.loopSwapReset||t.currentTranslate===t.startTranslate&&!t.loopSwapReset)return t.isTouched=!1,t.isMoved=!1,void(t.startMoving=!1);let m;if(t.isTouched=!1,t.isMoved=!1,t.startMoving=!1,m=o.followFinger?s?n.translate:-n.translate:-t.currentTranslate,o.cssMode)return;if(o.freeMode&&o.freeMode.enabled)return void n.freeMode.onTouchEnd({currentPos:m});const p=m>=-n.maxTranslate()&&!n.params.loop;let f=0,h=n.slidesSizesGrid[0];for(let e=0;e<l.length;e+=e<o.slidesPerGroupSkip?1:o.slidesPerGroup){const n=e<o.slidesPerGroupSkip-1?1:o.slidesPerGroup;void 0!==l[e+n]?(p||m>=l[e]&&m<l[e+n])&&(f=e,h=l[e+n]-l[e]):(p||m>=l[e])&&(f=e,h=l[l.length-1]-l[l.length-2])}let g=null,C=null;o.rewind&&(n.isBeginning?C=o.virtual&&o.virtual.enabled&&n.virtual?n.virtual.slides.length-1:n.slides.length-1:n.isEnd&&(g=0));const A=(m-l[f])/h,v=f<o.slidesPerGroupSkip-1?1:o.slidesPerGroup;if(u>o.longSwipesMs){if(!o.longSwipes)return void n.slideTo(n.activeIndex);"next"===n.swipeDirection&&(A>=o.longSwipesRatio?n.slideTo(o.rewind&&n.isEnd?g:f+v):n.slideTo(f)),"prev"===n.swipeDirection&&(A>1-o.longSwipesRatio?n.slideTo(f+v):null!==C&&A<0&&Math.abs(A)>o.longSwipesRatio?n.slideTo(C):n.slideTo(f))}else{if(!o.shortSwipes)return void n.slideTo(n.activeIndex);!n.navigation||i.target!==n.navigation.nextEl&&i.target!==n.navigation.prevEl?("next"===n.swipeDirection&&n.slideTo(null!==g?g:f+v),"prev"===n.swipeDirection&&n.slideTo(null!==C?C:f)):i.target===n.navigation.nextEl?n.slideTo(f+v):n.slideTo(f)}}function pa(){const e=this,{params:n,el:t}=e;if(t&&0===t.offsetWidth)return;n.breakpoints&&e.setBreakpoint();const{allowSlideNext:r,allowSlidePrev:i,snapGrid:o}=e,a=e.virtual&&e.params.virtual.enabled;e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),e.updateSlidesClasses();const s=a&&n.loop;!("auto"===n.slidesPerView||n.slidesPerView>1)||!e.isEnd||e.isBeginning||e.params.centeredSlides||s?e.params.loop&&!a?e.slideToLoop(e.realIndex,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0):e.slideTo(e.slides.length-1,0,!1,!0),e.autoplay&&e.autoplay.running&&e.autoplay.paused&&(clearTimeout(e.autoplay.resizeTimeout),e.autoplay.resizeTimeout=setTimeout((()=>{e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.resume()}),500)),e.allowSlidePrev=i,e.allowSlideNext=r,e.params.watchOverflow&&o!==e.snapGrid&&e.checkOverflow()}function fa(e){const n=this;n.enabled&&(n.allowClick||(n.params.preventClicks&&e.preventDefault(),n.params.preventClicksPropagation&&n.animating&&(e.stopPropagation(),e.stopImmediatePropagation())))}function ha(){const e=this,{wrapperEl:n,rtlTranslate:t,enabled:r}=e;if(!r)return;let i;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=-n.scrollLeft:e.translate=-n.scrollTop,0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();const o=e.maxTranslate()-e.minTranslate();i=0===o?0:(e.translate-e.minTranslate())/o,i!==e.progress&&e.updateProgress(t?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}function ga(e){const n=this;Ko(n,e.target),n.params.cssMode||"auto"!==n.params.slidesPerView&&!n.params.autoHeight||n.update()}function Ca(){const e=this;e.documentTouchHandlerProceeded||(e.documentTouchHandlerProceeded=!0,e.params.touchReleaseOnEdges&&(e.el.style.touchAction="auto"))}const Aa=(e,n)=>{const t=Do(),{params:r,el:i,wrapperEl:o,device:a}=e,s=!!r.nested,l="on"===n?"addEventListener":"removeEventListener",d=n;i&&"string"!=typeof i&&(t[l]("touchstart",e.onDocumentTouchStart,{passive:!1,capture:s}),i[l]("touchstart",e.onTouchStart,{passive:!1}),i[l]("pointerdown",e.onTouchStart,{passive:!1}),t[l]("touchmove",e.onTouchMove,{passive:!1,capture:s}),t[l]("pointermove",e.onTouchMove,{passive:!1,capture:s}),t[l]("touchend",e.onTouchEnd,{passive:!0}),t[l]("pointerup",e.onTouchEnd,{passive:!0}),t[l]("pointercancel",e.onTouchEnd,{passive:!0}),t[l]("touchcancel",e.onTouchEnd,{passive:!0}),t[l]("pointerout",e.onTouchEnd,{passive:!0}),t[l]("pointerleave",e.onTouchEnd,{passive:!0}),t[l]("contextmenu",e.onTouchEnd,{passive:!0}),(r.preventClicks||r.preventClicksPropagation)&&i[l]("click",e.onClick,!0),r.cssMode&&o[l]("scroll",e.onScroll),r.updateOnWindowResize?e[d](a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",pa,!0):e[d]("observerUpdate",pa,!0),i[l]("load",e.onLoad,{capture:!0}))};var va={attachEvents:function(){const e=this,{params:n}=e;e.onTouchStart=ca.bind(e),e.onTouchMove=ua.bind(e),e.onTouchEnd=ma.bind(e),e.onDocumentTouchStart=Ca.bind(e),n.cssMode&&(e.onScroll=ha.bind(e)),e.onClick=fa.bind(e),e.onLoad=ga.bind(e),Aa(e,"on")},detachEvents:function(){Aa(this,"off")}};const ba=(e,n)=>e.grid&&n.grid&&n.grid.rows>1;var ya={setBreakpoint:function(){const e=this,{realIndex:n,initialized:t,params:r,el:i}=e,o=r.breakpoints;if(!o||o&&0===Object.keys(o).length)return;const a=Do(),s="window"!==r.breakpointsBase&&r.breakpointsBase?"container":r.breakpointsBase,l=["window","container"].includes(r.breakpointsBase)||!r.breakpointsBase?e.el:a.querySelector(r.breakpointsBase),d=e.getBreakpoint(o,s,l);if(!d||e.currentBreakpoint===d)return;const c=(d in o?o[d]:void 0)||e.originalParams,u=ba(e,r),m=ba(e,c),p=e.params.grabCursor,f=c.grabCursor,h=r.enabled;u&&!m?(i.classList.remove(`${r.containerModifierClass}grid`,`${r.containerModifierClass}grid-column`),e.emitContainerClasses()):!u&&m&&(i.classList.add(`${r.containerModifierClass}grid`),(c.grid.fill&&"column"===c.grid.fill||!c.grid.fill&&"column"===r.grid.fill)&&i.classList.add(`${r.containerModifierClass}grid-column`),e.emitContainerClasses()),p&&!f?e.unsetGrabCursor():!p&&f&&e.setGrabCursor(),["navigation","pagination","scrollbar"].forEach((n=>{if(void 0===c[n])return;const t=r[n]&&r[n].enabled,i=c[n]&&c[n].enabled;t&&!i&&e[n].disable(),!t&&i&&e[n].enable()}));const g=c.direction&&c.direction!==r.direction,C=r.loop&&(c.slidesPerView!==r.slidesPerView||g),A=r.loop;g&&t&&e.changeDirection(),jo(e.params,c);const v=e.params.enabled,b=e.params.loop;Object.assign(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),h&&!v?e.disable():!h&&v&&e.enable(),e.currentBreakpoint=d,e.emit("_beforeBreakpoint",c),t&&(C?(e.loopDestroy(),e.loopCreate(n),e.updateSlides()):!A&&b?(e.loopCreate(n),e.updateSlides()):A&&!b&&e.loopDestroy()),e.emit("breakpoint",c)},getBreakpoint:function(e,n,t){if(void 0===n&&(n="window"),!e||"container"===n&&!t)return;let r=!1;const i=Io(),o="window"===n?i.innerHeight:t.clientHeight,a=Object.keys(e).map((e=>{if("string"==typeof e&&0===e.indexOf("@")){const n=parseFloat(e.substr(1));return{value:o*n,point:e}}return{value:e,point:e}}));a.sort(((e,n)=>parseInt(e.value,10)-parseInt(n.value,10)));for(let e=0;e<a.length;e+=1){const{point:o,value:s}=a[e];"window"===n?i.matchMedia(`(min-width: ${s}px)`).matches&&(r=o):s<=t.clientWidth&&(r=o)}return r||"max"}},Sa={addClasses:function(){const e=this,{classNames:n,params:t,rtl:r,el:i,device:o}=e,a=function(e,n){const t=[];return e.forEach((e=>{"object"==typeof e?Object.keys(e).forEach((r=>{e[r]&&t.push(n+r)})):"string"==typeof e&&t.push(n+e)})),t}(["initialized",t.direction,{"free-mode":e.params.freeMode&&t.freeMode.enabled},{autoheight:t.autoHeight},{rtl:r},{grid:t.grid&&t.grid.rows>1},{"grid-column":t.grid&&t.grid.rows>1&&"column"===t.grid.fill},{android:o.android},{ios:o.ios},{"css-mode":t.cssMode},{centered:t.cssMode&&t.centeredSlides},{"watch-progress":t.watchSlidesProgress}],t.containerModifierClass);n.push(...a),i.classList.add(...n),e.emitContainerClasses()},removeClasses:function(){const{el:e,classNames:n}=this;e&&"string"!=typeof e&&(e.classList.remove(...n),this.emitContainerClasses())}},wa={init:!0,direction:"horizontal",oneWayMovement:!1,swiperElementNodeName:"SWIPER-CONTAINER",touchEventsTarget:"wrapper",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,resizeObserver:!0,nested:!1,createElements:!1,eventsPrefix:"swiper",enabled:!0,focusableElements:"input, select, option, textarea, button, video, label",width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsBase:"window",spaceBetween:0,slidesPerView:1,slidesPerGroup:1,slidesPerGroupSkip:0,slidesPerGroupAuto:!1,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:5,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,loop:!1,loopAddBlankSlides:!0,loopAdditionalSlides:0,loopPreventsSliding:!0,rewind:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,maxBackfaceHiddenSlides:10,containerModifierClass:"swiper-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-blank",slideActiveClass:"swiper-slide-active",slideVisibleClass:"swiper-slide-visible",slideFullyVisibleClass:"swiper-slide-fully-visible",slideNextClass:"swiper-slide-next",slidePrevClass:"swiper-slide-prev",wrapperClass:"swiper-wrapper",lazyPreloaderClass:"swiper-lazy-preloader",lazyPreloadPrevNext:0,runCallbacksOnInit:!0,_emitClasses:!1};function Pa(e,n){return function(t){void 0===t&&(t={});const r=Object.keys(t)[0],i=t[r];"object"==typeof i&&null!==i?(!0===e[r]&&(e[r]={enabled:!0}),"navigation"===r&&e[r]&&e[r].enabled&&!e[r].prevEl&&!e[r].nextEl&&(e[r].auto=!0),["pagination","scrollbar"].indexOf(r)>=0&&e[r]&&e[r].enabled&&!e[r].el&&(e[r].auto=!0),r in e&&"enabled"in i?("object"!=typeof e[r]||"enabled"in e[r]||(e[r].enabled=!0),e[r]||(e[r]={enabled:!1}),jo(n,t)):jo(n,t)):jo(n,t)}}const Ea={eventsEmitter:$o,update:ta,translate:ra,transition:oa,slide:aa,loop:sa,grabCursor:la,events:va,breakpoints:ya,checkOverflow:{checkOverflow:function(){const e=this,{isLocked:n,params:t}=e,{slidesOffsetBefore:r}=t;if(r){const n=e.slides.length-1,t=e.slidesGrid[n]+e.slidesSizesGrid[n]+2*r;e.isLocked=e.size>t}else e.isLocked=1===e.snapGrid.length;!0===t.allowSlideNext&&(e.allowSlideNext=!e.isLocked),!0===t.allowSlidePrev&&(e.allowSlidePrev=!e.isLocked),n&&n!==e.isLocked&&(e.isEnd=!1),n!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock")}},classes:Sa},xa={};class _a{constructor(){let e,n;for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];1===r.length&&r[0].constructor&&"Object"===Object.prototype.toString.call(r[0]).slice(8,-1)?n=r[0]:[e,n]=r,n||(n={}),n=jo({},n),e&&!n.el&&(n.el=e);const o=Do();if(n.el&&"string"==typeof n.el&&o.querySelectorAll(n.el).length>1){const e=[];return o.querySelectorAll(n.el).forEach((t=>{const r=jo({},n,{el:t});e.push(new _a(r))})),e}const a=this;a.__swiper__=!0,a.support=Yo(),a.device=Qo({userAgent:n.userAgent}),a.browser=Zo(),a.eventsListeners={},a.eventsAnyListeners=[],a.modules=[...a.__modules__],n.modules&&Array.isArray(n.modules)&&a.modules.push(...n.modules);const s={};a.modules.forEach((e=>{e({params:n,swiper:a,extendParams:Pa(n,s),on:a.on.bind(a),once:a.once.bind(a),off:a.off.bind(a),emit:a.emit.bind(a)})}));const l=jo({},wa,s);return a.params=jo({},l,xa,n),a.originalParams=jo({},a.params),a.passedParams=jo({},n),a.params&&a.params.on&&Object.keys(a.params.on).forEach((e=>{a.on(e,a.params.on[e])})),a.params&&a.params.onAny&&a.onAny(a.params.onAny),Object.assign(a,{enabled:a.params.enabled,el:e,classNames:[],slides:[],slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:()=>"horizontal"===a.params.direction,isVertical:()=>"vertical"===a.params.direction,activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,cssOverflowAdjustment(){return Math.trunc(this.translate/2**23)*2**23},allowSlideNext:a.params.allowSlideNext,allowSlidePrev:a.params.allowSlidePrev,touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,focusableElements:a.params.focusableElements,lastClickTime:0,clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,startMoving:void 0,pointerId:null,touchId:null},allowClick:!0,allowTouchMove:a.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),a.emit("_swiper"),a.params.init&&a.init(),a}getDirectionLabel(e){return this.isHorizontal()?e:{width:"height","margin-top":"margin-left","margin-bottom ":"margin-right","margin-left":"margin-top","margin-right":"margin-bottom","padding-left":"padding-top","padding-right":"padding-bottom",marginRight:"marginBottom"}[e]}getSlideIndex(e){const{slidesEl:n,params:t}=this,r=zo(To(n,`.${t.slideClass}, swiper-slide`)[0]);return zo(e)-r}getSlideIndexByData(e){return this.getSlideIndex(this.slides.find((n=>1*n.getAttribute("data-swiper-slide-index")===e)))}recalcSlides(){const{slidesEl:e,params:n}=this;this.slides=To(e,`.${n.slideClass}, swiper-slide`)}enable(){const e=this;e.enabled||(e.enabled=!0,e.params.grabCursor&&e.setGrabCursor(),e.emit("enable"))}disable(){const e=this;e.enabled&&(e.enabled=!1,e.params.grabCursor&&e.unsetGrabCursor(),e.emit("disable"))}setProgress(e,n){const t=this;e=Math.min(Math.max(e,0),1);const r=t.minTranslate(),i=(t.maxTranslate()-r)*e+r;t.translateTo(i,void 0===n?0:n),t.updateActiveIndex(),t.updateSlidesClasses()}emitContainerClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const n=e.el.className.split(" ").filter((n=>0===n.indexOf("swiper")||0===n.indexOf(e.params.containerModifierClass)));e.emit("_containerClasses",n.join(" "))}getSlideClasses(e){const n=this;return n.destroyed?"":e.className.split(" ").filter((e=>0===e.indexOf("swiper-slide")||0===e.indexOf(n.params.slideClass))).join(" ")}emitSlidesClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const n=[];e.slides.forEach((t=>{const r=e.getSlideClasses(t);n.push({slideEl:t,classNames:r}),e.emit("_slideClass",t,r)})),e.emit("_slideClasses",n)}slidesPerViewDynamic(e,n){void 0===e&&(e="current"),void 0===n&&(n=!1);const{params:t,slides:r,slidesGrid:i,slidesSizesGrid:o,size:a,activeIndex:s}=this;let l=1;if("number"==typeof t.slidesPerView)return t.slidesPerView;if(t.centeredSlides){let e,n=r[s]?Math.ceil(r[s].swiperSlideSize):0;for(let t=s+1;t<r.length;t+=1)r[t]&&!e&&(n+=Math.ceil(r[t].swiperSlideSize),l+=1,n>a&&(e=!0));for(let t=s-1;t>=0;t-=1)r[t]&&!e&&(n+=r[t].swiperSlideSize,l+=1,n>a&&(e=!0))}else if("current"===e)for(let e=s+1;e<r.length;e+=1)(n?i[e]+o[e]-i[s]<a:i[e]-i[s]<a)&&(l+=1);else for(let e=s-1;e>=0;e-=1)i[s]-i[e]<a&&(l+=1);return l}update(){const e=this;if(!e||e.destroyed)return;const{snapGrid:n,params:t}=e;function r(){const n=e.rtlTranslate?-1*e.translate:e.translate,t=Math.min(Math.max(n,e.maxTranslate()),e.minTranslate());e.setTranslate(t),e.updateActiveIndex(),e.updateSlidesClasses()}let i;if(t.breakpoints&&e.setBreakpoint(),[...e.el.querySelectorAll('[loading="lazy"]')].forEach((n=>{n.complete&&Ko(e,n)})),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),t.freeMode&&t.freeMode.enabled&&!t.cssMode)r(),t.autoHeight&&e.updateAutoHeight();else{if(("auto"===t.slidesPerView||t.slidesPerView>1)&&e.isEnd&&!t.centeredSlides){const n=e.virtual&&t.virtual.enabled?e.virtual.slides:e.slides;i=e.slideTo(n.length-1,0,!1,!0)}else i=e.slideTo(e.activeIndex,0,!1,!0);i||r()}t.watchOverflow&&n!==e.snapGrid&&e.checkOverflow(),e.emit("update")}changeDirection(e,n){void 0===n&&(n=!0);const t=this,r=t.params.direction;return e||(e="horizontal"===r?"vertical":"horizontal"),e===r||"horizontal"!==e&&"vertical"!==e||(t.el.classList.remove(`${t.params.containerModifierClass}${r}`),t.el.classList.add(`${t.params.containerModifierClass}${e}`),t.emitContainerClasses(),t.params.direction=e,t.slides.forEach((n=>{"vertical"===e?n.style.width="":n.style.height=""})),t.emit("changeDirection"),n&&t.update()),t}changeLanguageDirection(e){const n=this;n.rtl&&"rtl"===e||!n.rtl&&"ltr"===e||(n.rtl="rtl"===e,n.rtlTranslate="horizontal"===n.params.direction&&n.rtl,n.rtl?(n.el.classList.add(`${n.params.containerModifierClass}rtl`),n.el.dir="rtl"):(n.el.classList.remove(`${n.params.containerModifierClass}rtl`),n.el.dir="ltr"),n.update())}mount(e){const n=this;if(n.mounted)return!0;let t=e||n.params.el;if("string"==typeof t&&(t=document.querySelector(t)),!t)return!1;t.swiper=n,t.parentNode&&t.parentNode.host&&t.parentNode.host.nodeName===n.params.swiperElementNodeName.toUpperCase()&&(n.isElement=!0);const r=()=>`.${(n.params.wrapperClass||"").trim().split(" ").join(".")}`;let i=t&&t.shadowRoot&&t.shadowRoot.querySelector?t.shadowRoot.querySelector(r()):To(t,r())[0];return!i&&n.params.createElements&&(i=Wo("div",n.params.wrapperClass),t.append(i),To(t,`.${n.params.slideClass}`).forEach((e=>{i.append(e)}))),Object.assign(n,{el:t,wrapperEl:i,slidesEl:n.isElement&&!t.parentNode.host.slideSlots?t.parentNode.host:i,hostEl:n.isElement?t.parentNode.host:t,mounted:!0,rtl:"rtl"===t.dir.toLowerCase()||"rtl"===Bo(t,"direction"),rtlTranslate:"horizontal"===n.params.direction&&("rtl"===t.dir.toLowerCase()||"rtl"===Bo(t,"direction")),wrongRTL:"-webkit-box"===Bo(i,"display")}),!0}init(e){const n=this;if(n.initialized)return n;if(!1===n.mount(e))return n;n.emit("beforeInit"),n.params.breakpoints&&n.setBreakpoint(),n.addClasses(),n.updateSize(),n.updateSlides(),n.params.watchOverflow&&n.checkOverflow(),n.params.grabCursor&&n.enabled&&n.setGrabCursor(),n.params.loop&&n.virtual&&n.params.virtual.enabled?n.slideTo(n.params.initialSlide+n.virtual.slidesBefore,0,n.params.runCallbacksOnInit,!1,!0):n.slideTo(n.params.initialSlide,0,n.params.runCallbacksOnInit,!1,!0),n.params.loop&&n.loopCreate(void 0,!0),n.attachEvents();const t=[...n.el.querySelectorAll('[loading="lazy"]')];return n.isElement&&t.push(...n.hostEl.querySelectorAll('[loading="lazy"]')),t.forEach((e=>{e.complete?Ko(n,e):e.addEventListener("load",(e=>{Ko(n,e.target)}))})),na(n),n.initialized=!0,na(n),n.emit("init"),n.emit("afterInit"),n}destroy(e,n){void 0===e&&(e=!0),void 0===n&&(n=!0);const t=this,{params:r,el:i,wrapperEl:o,slides:a}=t;return void 0===t.params||t.destroyed||(t.emit("beforeDestroy"),t.initialized=!1,t.detachEvents(),r.loop&&t.loopDestroy(),n&&(t.removeClasses(),i&&"string"!=typeof i&&i.removeAttribute("style"),o&&o.removeAttribute("style"),a&&a.length&&a.forEach((e=>{e.classList.remove(r.slideVisibleClass,r.slideFullyVisibleClass,r.slideActiveClass,r.slideNextClass,r.slidePrevClass),e.removeAttribute("style"),e.removeAttribute("data-swiper-slide-index")}))),t.emit("destroy"),Object.keys(t.eventsListeners).forEach((e=>{t.off(e)})),!1!==e&&(t.el&&"string"!=typeof t.el&&(t.el.swiper=null),function(e){const n=e;Object.keys(n).forEach((e=>{try{n[e]=null}catch(e){}try{delete n[e]}catch(e){}}))}(t)),t.destroyed=!0),null}static extendDefaults(e){jo(xa,e)}static get extendedDefaults(){return xa}static get defaults(){return wa}static installModule(e){_a.prototype.__modules__||(_a.prototype.__modules__=[]);const n=_a.prototype.__modules__;"function"==typeof e&&n.indexOf(e)<0&&n.push(e)}static use(e){return Array.isArray(e)?(e.forEach((e=>_a.installModule(e))),_a):(_a.installModule(e),_a)}}Object.keys(Ea).forEach((e=>{Object.keys(Ea[e]).forEach((n=>{_a.prototype[n]=Ea[e][n]}))})),_a.use([function(e){let{swiper:n,on:t,emit:r}=e;const i=Io();let o=null,a=null;const s=()=>{n&&!n.destroyed&&n.initialized&&(r("beforeResize"),r("resize"))},l=()=>{n&&!n.destroyed&&n.initialized&&r("orientationchange")};t("init",(()=>{n.params.resizeObserver&&void 0!==i.ResizeObserver?n&&!n.destroyed&&n.initialized&&(o=new ResizeObserver((e=>{a=i.requestAnimationFrame((()=>{const{width:t,height:r}=n;let i=t,o=r;e.forEach((e=>{let{contentBoxSize:t,contentRect:r,target:a}=e;a&&a!==n.el||(i=r?r.width:(t[0]||t).inlineSize,o=r?r.height:(t[0]||t).blockSize)})),i===t&&o===r||s()}))})),o.observe(n.el)):(i.addEventListener("resize",s),i.addEventListener("orientationchange",l))})),t("destroy",(()=>{a&&i.cancelAnimationFrame(a),o&&o.unobserve&&n.el&&(o.unobserve(n.el),o=null),i.removeEventListener("resize",s),i.removeEventListener("orientationchange",l)}))},function(e){let{swiper:n,extendParams:t,on:r,emit:i}=e;const o=[],a=Io(),s=function(e,t){void 0===t&&(t={});const r=new(a.MutationObserver||a.WebkitMutationObserver)((e=>{if(n.__preventObserver__)return;if(1===e.length)return void i("observerUpdate",e[0]);const t=function(){i("observerUpdate",e[0])};a.requestAnimationFrame?a.requestAnimationFrame(t):a.setTimeout(t,0)}));r.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:n.isElement||(void 0===t.childList||t).childList,characterData:void 0===t.characterData||t.characterData}),o.push(r)};t({observer:!1,observeParents:!1,observeSlideChildren:!1}),r("init",(()=>{if(n.params.observer){if(n.params.observeParents){const e=function(e,n){const t=[];let r=e.parentElement;for(;r;)t.push(r),r=r.parentElement;return t}(n.hostEl);for(let n=0;n<e.length;n+=1)s(e[n])}s(n.hostEl,{childList:n.params.observeSlideChildren}),s(n.wrapperEl,{attributes:!1})}})),r("destroy",(()=>{o.forEach((e=>{e.disconnect()})),o.splice(0,o.length)}))}]);const Da=["eventsPrefix","injectStyles","injectStylesUrls","modules","init","_direction","oneWayMovement","swiperElementNodeName","touchEventsTarget","initialSlide","_speed","cssMode","updateOnWindowResize","resizeObserver","nested","focusableElements","_enabled","_width","_height","preventInteractionOnTransition","userAgent","url","_edgeSwipeDetection","_edgeSwipeThreshold","_freeMode","_autoHeight","setWrapperSize","virtualTranslate","_effect","breakpoints","breakpointsBase","_spaceBetween","_slidesPerView","maxBackfaceHiddenSlides","_grid","_slidesPerGroup","_slidesPerGroupSkip","_slidesPerGroupAuto","_centeredSlides","_centeredSlidesBounds","_slidesOffsetBefore","_slidesOffsetAfter","normalizeSlideIndex","_centerInsufficientSlides","_watchOverflow","roundLengths","touchRatio","touchAngle","simulateTouch","_shortSwipes","_longSwipes","longSwipesRatio","longSwipesMs","_followFinger","allowTouchMove","_threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","_resistance","_resistanceRatio","_watchSlidesProgress","_grabCursor","preventClicks","preventClicksPropagation","_slideToClickedSlide","_loop","loopAdditionalSlides","loopAddBlankSlides","loopPreventsSliding","_rewind","_allowSlidePrev","_allowSlideNext","_swipeHandler","_noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideActiveClass","slideVisibleClass","slideFullyVisibleClass","slideNextClass","slidePrevClass","slideBlankClass","wrapperClass","lazyPreloaderClass","lazyPreloadPrevNext","runCallbacksOnInit","observer","observeParents","observeSlideChildren","a11y","_autoplay","_controller","coverflowEffect","cubeEffect","fadeEffect","flipEffect","creativeEffect","cardsEffect","hashNavigation","history","keyboard","mousewheel","_navigation","_pagination","parallax","_scrollbar","_thumbs","virtual","zoom","control"];function Oa(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)&&!e.__swiper__}function Ia(e,n){const t=["__proto__","constructor","prototype"];Object.keys(n).filter((e=>t.indexOf(e)<0)).forEach((t=>{void 0===e[t]?e[t]=n[t]:Oa(n[t])&&Oa(e[t])&&Object.keys(n[t]).length>0?n[t].__swiper__?e[t]=n[t]:Ia(e[t],n[t]):e[t]=n[t]}))}function La(e){return void 0===e&&(e={}),e.navigation&&void 0===e.navigation.nextEl&&void 0===e.navigation.prevEl}function ka(e){return void 0===e&&(e={}),e.pagination&&void 0===e.pagination.el}function Fa(e){return void 0===e&&(e={}),e.scrollbar&&void 0===e.scrollbar.el}function Ma(e){void 0===e&&(e="");const n=e.split(" ").map((e=>e.trim())).filter((e=>!!e)),t=[];return n.forEach((e=>{t.indexOf(e)<0&&t.push(e)})),t.join(" ")}function ja(e){return void 0===e&&(e=""),e?e.includes("swiper-wrapper")?e:`swiper-wrapper ${e}`:"swiper-wrapper"}function Ua(){return Ua=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Ua.apply(this,arguments)}function Ra(e){return e.type&&e.type.displayName&&e.type.displayName.includes("SwiperSlide")}function Ta(n){const t=[];return e.Children.toArray(n).forEach((e=>{Ra(e)?t.push(e):e.props&&e.props.children&&Ta(e.props.children).forEach((e=>t.push(e)))})),t}function Na(n){const t=[],r={"container-start":[],"container-end":[],"wrapper-start":[],"wrapper-end":[]};return e.Children.toArray(n).forEach((e=>{if(Ra(e))t.push(e);else if(e.props&&e.props.slot&&r[e.props.slot])r[e.props.slot].push(e);else if(e.props&&e.props.children){const n=Ta(e.props.children);n.length>0?n.forEach((e=>t.push(e))):r["container-end"].push(e)}else r["container-end"].push(e)})),{slides:t,slots:r}}function Wa(n,t){return"undefined"==typeof window?(0,e.useEffect)(n,t):(0,e.useLayoutEffect)(n,t)}const Ba=(0,e.createContext)(null),za=(0,e.createContext)(null),Va=(0,e.forwardRef)((function(n,t){let{className:r,tag:i="div",wrapperTag:o="div",children:a,onSwiper:s,...l}=void 0===n?{}:n,d=!1;const[c,u]=(0,e.useState)("swiper"),[m,p]=(0,e.useState)(null),[f,h]=(0,e.useState)(!1),g=(0,e.useRef)(!1),C=(0,e.useRef)(null),A=(0,e.useRef)(null),v=(0,e.useRef)(null),b=(0,e.useRef)(null),y=(0,e.useRef)(null),S=(0,e.useRef)(null),w=(0,e.useRef)(null),P=(0,e.useRef)(null),{params:E,passedParams:x,rest:_,events:D}=function(e,n){void 0===e&&(e={}),void 0===n&&(n=!0);const t={on:{}},r={},i={};Ia(t,wa),t._emitClasses=!0,t.init=!1;const o={},a=Da.map((e=>e.replace(/_/,""))),s=Object.assign({},e);return Object.keys(s).forEach((s=>{void 0!==e[s]&&(a.indexOf(s)>=0?Oa(e[s])?(t[s]={},i[s]={},Ia(t[s],e[s]),Ia(i[s],e[s])):(t[s]=e[s],i[s]=e[s]):0===s.search(/on[A-Z]/)&&"function"==typeof e[s]?n?r[`${s[2].toLowerCase()}${s.substr(3)}`]=e[s]:t.on[`${s[2].toLowerCase()}${s.substr(3)}`]=e[s]:o[s]=e[s])})),["navigation","pagination","scrollbar"].forEach((e=>{!0===t[e]&&(t[e]={}),!1===t[e]&&delete t[e]})),{params:t,passedParams:i,rest:o,events:r}}(l),{slides:O,slots:I}=Na(a),L=()=>{h(!f)};Object.assign(E.on,{_containerClasses(e,n){u(n)}});const k=()=>{Object.assign(E.on,D),d=!0;const e={...E};if(delete e.wrapperClass,A.current=new _a(e),A.current.virtual&&A.current.params.virtual.enabled){A.current.virtual.slides=O;const e={cache:!1,slides:O,renderExternal:p,renderExternalUpdate:!1};Ia(A.current.params.virtual,e),Ia(A.current.originalParams.virtual,e)}};return C.current||k(),A.current&&A.current.on("_beforeBreakpoint",L),(0,e.useEffect)((()=>()=>{A.current&&A.current.off("_beforeBreakpoint",L)})),(0,e.useEffect)((()=>{!g.current&&A.current&&(A.current.emitSlidesClasses(),g.current=!0)})),Wa((()=>{if(t&&(t.current=C.current),C.current)return A.current.destroyed&&k(),function(e,n){let{el:t,nextEl:r,prevEl:i,paginationEl:o,scrollbarEl:a,swiper:s}=e;La(n)&&r&&i&&(s.params.navigation.nextEl=r,s.originalParams.navigation.nextEl=r,s.params.navigation.prevEl=i,s.originalParams.navigation.prevEl=i),ka(n)&&o&&(s.params.pagination.el=o,s.originalParams.pagination.el=o),Fa(n)&&a&&(s.params.scrollbar.el=a,s.originalParams.scrollbar.el=a),s.init(t)}({el:C.current,nextEl:y.current,prevEl:S.current,paginationEl:w.current,scrollbarEl:P.current,swiper:A.current},E),s&&!A.current.destroyed&&s(A.current),()=>{A.current&&!A.current.destroyed&&A.current.destroy(!0,!1)}}),[]),Wa((()=>{!d&&D&&A.current&&Object.keys(D).forEach((e=>{A.current.on(e,D[e])}));const e=function(e,n,t,r,i){const o=[];if(!n)return o;const a=e=>{o.indexOf(e)<0&&o.push(e)};if(t&&r){const e=r.map(i),n=t.map(i);e.join("")!==n.join("")&&a("children"),r.length!==t.length&&a("children")}return Da.filter((e=>"_"===e[0])).map((e=>e.replace(/_/,""))).forEach((t=>{if(t in e&&t in n)if(Oa(e[t])&&Oa(n[t])){const r=Object.keys(e[t]),i=Object.keys(n[t]);r.length!==i.length?a(t):(r.forEach((r=>{e[t][r]!==n[t][r]&&a(t)})),i.forEach((r=>{e[t][r]!==n[t][r]&&a(t)})))}else e[t]!==n[t]&&a(t)})),o}(x,v.current,O,b.current,(e=>e.key));return v.current=x,b.current=O,e.length&&A.current&&!A.current.destroyed&&function(e){let{swiper:n,slides:t,passedParams:r,changedParams:i,nextEl:o,prevEl:a,scrollbarEl:s,paginationEl:l}=e;const d=i.filter((e=>"children"!==e&&"direction"!==e&&"wrapperClass"!==e)),{params:c,pagination:u,navigation:m,scrollbar:p,virtual:f,thumbs:h}=n;let g,C,A,v,b,y,S,w;i.includes("thumbs")&&r.thumbs&&r.thumbs.swiper&&!r.thumbs.swiper.destroyed&&c.thumbs&&(!c.thumbs.swiper||c.thumbs.swiper.destroyed)&&(g=!0),i.includes("controller")&&r.controller&&r.controller.control&&c.controller&&!c.controller.control&&(C=!0),i.includes("pagination")&&r.pagination&&(r.pagination.el||l)&&(c.pagination||!1===c.pagination)&&u&&!u.el&&(A=!0),i.includes("scrollbar")&&r.scrollbar&&(r.scrollbar.el||s)&&(c.scrollbar||!1===c.scrollbar)&&p&&!p.el&&(v=!0),i.includes("navigation")&&r.navigation&&(r.navigation.prevEl||a)&&(r.navigation.nextEl||o)&&(c.navigation||!1===c.navigation)&&m&&!m.prevEl&&!m.nextEl&&(b=!0);const P=e=>{n[e]&&(n[e].destroy(),"navigation"===e?(n.isElement&&(n[e].prevEl.remove(),n[e].nextEl.remove()),c[e].prevEl=void 0,c[e].nextEl=void 0,n[e].prevEl=void 0,n[e].nextEl=void 0):(n.isElement&&n[e].el.remove(),c[e].el=void 0,n[e].el=void 0))};i.includes("loop")&&n.isElement&&(c.loop&&!r.loop?y=!0:!c.loop&&r.loop?S=!0:w=!0),d.forEach((e=>{if(Oa(c[e])&&Oa(r[e]))Object.assign(c[e],r[e]),"navigation"!==e&&"pagination"!==e&&"scrollbar"!==e||!("enabled"in r[e])||r[e].enabled||P(e);else{const n=r[e];!0!==n&&!1!==n||"navigation"!==e&&"pagination"!==e&&"scrollbar"!==e?c[e]=r[e]:!1===n&&P(e)}})),d.includes("controller")&&!C&&n.controller&&n.controller.control&&c.controller&&c.controller.control&&(n.controller.control=c.controller.control),i.includes("children")&&t&&f&&c.virtual.enabled?(f.slides=t,f.update(!0)):i.includes("virtual")&&f&&c.virtual.enabled&&(t&&(f.slides=t),f.update(!0)),i.includes("children")&&t&&c.loop&&(w=!0),g&&h.init()&&h.update(!0),C&&(n.controller.control=c.controller.control),A&&(!n.isElement||l&&"string"!=typeof l||(l=document.createElement("div"),l.classList.add("swiper-pagination"),l.part.add("pagination"),n.el.appendChild(l)),l&&(c.pagination.el=l),u.init(),u.render(),u.update()),v&&(!n.isElement||s&&"string"!=typeof s||(s=document.createElement("div"),s.classList.add("swiper-scrollbar"),s.part.add("scrollbar"),n.el.appendChild(s)),s&&(c.scrollbar.el=s),p.init(),p.updateSize(),p.setTranslate()),b&&(n.isElement&&(o&&"string"!=typeof o||(o=document.createElement("div"),o.classList.add("swiper-button-next"),o.innerHTML=n.hostEl.constructor.nextButtonSvg,o.part.add("button-next"),n.el.appendChild(o)),a&&"string"!=typeof a||(a=document.createElement("div"),a.classList.add("swiper-button-prev"),a.innerHTML=n.hostEl.constructor.prevButtonSvg,a.part.add("button-prev"),n.el.appendChild(a))),o&&(c.navigation.nextEl=o),a&&(c.navigation.prevEl=a),m.init(),m.update()),i.includes("allowSlideNext")&&(n.allowSlideNext=r.allowSlideNext),i.includes("allowSlidePrev")&&(n.allowSlidePrev=r.allowSlidePrev),i.includes("direction")&&n.changeDirection(r.direction,!1),(y||w)&&n.loopDestroy(),(S||w)&&n.loopCreate(),n.update()}({swiper:A.current,slides:O,passedParams:x,changedParams:e,nextEl:y.current,prevEl:S.current,scrollbarEl:P.current,paginationEl:w.current}),()=>{D&&A.current&&Object.keys(D).forEach((e=>{A.current.off(e,D[e])}))}})),Wa((()=>{(e=>{!e||e.destroyed||!e.params.virtual||e.params.virtual&&!e.params.virtual.enabled||(e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.parallax&&e.params.parallax&&e.params.parallax.enabled&&e.parallax.setTranslate())})(A.current)}),[m]),e.createElement(i,Ua({ref:C,className:Ma(`${c}${r?` ${r}`:""}`)},_),e.createElement(za.Provider,{value:A.current},I["container-start"],e.createElement(o,{className:ja(E.wrapperClass)},I["wrapper-start"],E.virtual?function(n,t,r){if(!r)return null;const i=e=>{let n=e;return e<0?n=t.length+e:n>=t.length&&(n-=t.length),n},o=n.isHorizontal()?{[n.rtlTranslate?"right":"left"]:`${r.offset}px`}:{top:`${r.offset}px`},{from:a,to:s}=r,l=n.params.loop?-t.length:0,d=n.params.loop?2*t.length:t.length,c=[];for(let e=l;e<d;e+=1)e>=a&&e<=s&&c.push(t[i(e)]);return c.map(((t,r)=>e.cloneElement(t,{swiper:n,style:o,key:t.props.virtualIndex||t.key||`slide-${r}`})))}(A.current,O,m):O.map(((n,t)=>e.cloneElement(n,{swiper:A.current,swiperSlideIndex:t}))),I["wrapper-end"]),La(E)&&e.createElement(e.Fragment,null,e.createElement("div",{ref:S,className:"swiper-button-prev"}),e.createElement("div",{ref:y,className:"swiper-button-next"})),Fa(E)&&e.createElement("div",{ref:P,className:"swiper-scrollbar"}),ka(E)&&e.createElement("div",{ref:w,className:"swiper-pagination"}),I["container-end"]))}));Va.displayName="Swiper";const Ga=(0,e.forwardRef)((function(n,t){let{tag:r="div",children:i,className:o="",swiper:a,zoom:s,lazy:l,virtualIndex:d,swiperSlideIndex:c,...u}=void 0===n?{}:n;const m=(0,e.useRef)(null),[p,f]=(0,e.useState)("swiper-slide"),[h,g]=(0,e.useState)(!1);function C(e,n,t){n===m.current&&f(t)}Wa((()=>{if(void 0!==c&&(m.current.swiperSlideIndex=c),t&&(t.current=m.current),m.current&&a){if(!a.destroyed)return a.on("_slideClass",C),()=>{a&&a.off("_slideClass",C)};"swiper-slide"!==p&&f("swiper-slide")}})),Wa((()=>{a&&m.current&&!a.destroyed&&f(a.getSlideClasses(m.current))}),[a]);const A={isActive:p.indexOf("swiper-slide-active")>=0,isVisible:p.indexOf("swiper-slide-visible")>=0,isPrev:p.indexOf("swiper-slide-prev")>=0,isNext:p.indexOf("swiper-slide-next")>=0},v=()=>"function"==typeof i?i(A):i;return e.createElement(r,Ua({ref:m,className:Ma(`${p}${o?` ${o}`:""}`),"data-swiper-slide-index":d,onLoad:()=>{g(!0)}},u),s&&e.createElement(Ba.Provider,{value:A},e.createElement("div",{className:"swiper-zoom-container","data-swiper-zoom":"number"==typeof s?s:void 0},v(),l&&!h&&e.createElement("div",{className:"swiper-lazy-preloader"}))),!s&&e.createElement(Ba.Provider,{value:A},v(),l&&!h&&e.createElement("div",{className:"swiper-lazy-preloader"})))}));Ga.displayName="SwiperSlide";var Ha=i(379),Ja=i.n(Ha),Ya=i(795),Qa=i.n(Ya),Za=i(569),$a=i.n(Za),Xa=i(565),qa=i.n(Xa),Ka=i(216),es=i.n(Ka),ns=i(589),ts=i.n(ns),rs=i(709),is={};function os(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}is.styleTagTransform=ts(),is.setAttributes=qa(),is.insert=$a().bind(null,"head"),is.domAPI=Qa(),is.insertStyleElement=es(),Ja()(rs.Z,is),rs.Z&&rs.Z.locals&&rs.Z.locals;const as=function(){var n,t,r=(n=(0,e.useState)(null),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return os(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?os(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0],o=r[1];return(0,$t.jsx)(Po,{children:(0,$t.jsxs)(Va,{spaceBetween:0,slidesPerView:1.5,centeredSlides:!0,loop:!0,onSlideChange:function(e){return function(e){var n=e.slides[e.activeIndex].querySelector("[id]"),t=null==n?void 0:n.id;o(t)}(e)},onSwiper:function(e){return console.log(e)},children:[(0,$t.jsx)(Ga,{children:(0,$t.jsx)(Sr,{id:"homem1",ativado:"homem1"===i,children:(0,$t.jsx)(wr,{})})}),(0,$t.jsx)(Ga,{children:(0,$t.jsx)(Sr,{id:"robo1",ativado:"robo1"===i,children:(0,$t.jsx)(Er,{})})}),(0,$t.jsx)(Ga,{children:(0,$t.jsx)(Sr,{id:"mulher1",ativado:"mulher1"===i,children:(0,$t.jsx)(Pr,{})})})]})})},ss=function(){var e=jt();return(0,$t.jsxs)(So,{children:[(0,$t.jsx)(sr,{}),(0,$t.jsx)(yo,{children:"Selecione o seu avatar"}),(0,$t.jsx)(as,{}),(0,$t.jsx)(Xt,{onClick:function(){var n=document.querySelector(".swiper-slide-active [id]"),t=null==n?void 0:n.id;localStorage.setItem("avatar",t),e("/cronograma")},children:"SELECIONAR"})]})};var ls,ds=Wn.article(ls||(ls=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    width: 100%;\n    gap: 2rem;\n    \n    .perfil {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        gap: 2rem;\n    }\n"])));function cs(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const us=function(){var n,t,r=(n=(0,e.useState)(localStorage.getItem("avatar")||"homem3"),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,d=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){d=!0,i=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(d)throw i}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return cs(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?cs(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[0];return r[1],(0,$t.jsxs)(ds,{children:[(0,$t.jsxs)("div",{className:"perfil",children:[(0,$t.jsx)(Sr,{ativado:!0,children:_r(i)}),(0,$t.jsxs)("div",{children:[(0,$t.jsx)("div",{children:"Pontuação"}),(0,$t.jsx)("div",{children:"1000"})]})]}),(0,$t.jsx)("div",{children:"Michel Lutegar"})]})},ms=function(){var e=jt();return(0,$t.jsxs)(Ir,{children:[(0,$t.jsx)(Yr,{titulo:"Perfil"}),(0,$t.jsx)(us,{}),(0,$t.jsx)(Xt,{children:"RANKING GERAL"}),(0,$t.jsx)(Xt,{onClick:function(){localStorage.removeItem("name"),localStorage.removeItem("avatar"),e("/")},children:"LOGOUT"})]})};var ps=document.getElementById("root");(0,t.s)(ps).render((0,$t.jsx)(e.StrictMode,{children:(0,$t.jsx)(hr,{children:(0,$t.jsx)(fi,{children:(0,$t.jsxs)(Yt,{children:[(0,$t.jsx)(Ht,{path:"/",element:(0,$t.jsx)(ur,{})}),(0,$t.jsx)(Ht,{path:"/avatar",element:(0,$t.jsx)(ss,{})}),(0,$t.jsx)(Ht,{path:"/cronograma",element:(0,$t.jsx)(Vi,{})}),(0,$t.jsx)(Ht,{path:"/palestrante",element:(0,$t.jsx)(Wi,{})}),(0,$t.jsx)(Ht,{path:"/ranking",element:(0,$t.jsx)(Ao,{})}),(0,$t.jsx)(Ht,{path:"/perfil",element:(0,$t.jsx)(ms,{})})]})})})}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,