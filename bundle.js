/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,n,r={448:(e,n,r)=>{"use strict";var t=r(294),i=r(840);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,s={};function l(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(s[e]=n,e=0;e<n.length;e++)a.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function g(e,n,r,t,i,o,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=t,this.attributeNamespace=i,this.mustUseProperty=r,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=a}var C={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){C[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];C[n]=new g(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){C[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){C[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){C[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){C[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){C[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){C[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){C[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var h=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,n,r,t){var i=C.hasOwnProperty(n)?C[n]:null;(null!==i?0!==i.type:t||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,r,t){if(null==n||function(e,n,r,t){if(null!==r&&0===r.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!t&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,r,t))return!0;if(t)return!1;if(null!==r)switch(r.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,r,i,t)&&(r=null),t||null===i?function(e){return!!d.call(f,e)||!d.call(p,e)&&(m.test(e)?f[e]=!0:(p[e]=!0,!1))}(n)&&(null===r?e.removeAttribute(n):e.setAttribute(n,""+r)):i.mustUseProperty?e[i.propertyName]=null===r?3!==i.type&&"":r:(n=i.attributeName,t=i.attributeNamespace,null===r?e.removeAttribute(n):(r=3===(i=i.type)||4===i&&!0===r?"":""+r,t?e.setAttributeNS(t,n,r):e.setAttribute(n,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(h,b);C[n]=new g(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(h,b);C[n]=new g(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(h,b);C[n]=new g(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){C[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),C.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){C[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=Symbol.for("react.element"),P=Symbol.for("react.portal"),A=Symbol.for("react.fragment"),_=Symbol.for("react.strict_mode"),D=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),O=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),U=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var R=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var L=Symbol.iterator;function N(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=L&&e[L]||e["@@iterator"])?e:null}var k,j=Object.assign;function W(e){if(void 0===k)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);k=n&&n[1]||""}return"\n"+k+e}var M=!1;function T(e,n){if(!e||M)return"";M=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var t=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){t=e}e.call(n.prototype)}else{try{throw Error()}catch(e){t=e}e()}}catch(n){if(n&&t&&"string"==typeof n.stack){for(var i=n.stack.split("\n"),o=t.stack.split("\n"),a=i.length-1,s=o.length-1;1<=a&&0<=s&&i[a]!==o[s];)s--;for(;1<=a&&0<=s;a--,s--)if(i[a]!==o[s]){if(1!==a||1!==s)do{if(a--,0>--s||i[a]!==o[s]){var l="\n"+i[a].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=a&&0<=s);break}}}finally{M=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?W(e):""}function B(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return T(e.type,!1);case 11:return T(e.type.render,!1);case 1:return T(e.type,!0);default:return""}}function z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case A:return"Fragment";case P:return"Portal";case D:return"Profiler";case _:return"StrictMode";case w:return"Suspense";case I:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case x:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case U:return null!==(n=e.displayName||null)?n:z(e.type)||"Memo";case F:n=e._payload,e=e._init;try{return z(e(n))}catch(e){}}return null}function V(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return z(n);case 8:return n===_?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function J(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function G(e){e._valueTracker||(e._valueTracker=function(e){var n=H(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),t=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var i=r.get,o=r.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return i.call(this)},set:function(e){t=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:r.enumerable}),{getValue:function(){return t},setValue:function(e){t=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Q(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var r=n.getValue(),t="";return e&&(t=H(e)?e.checked?"true":"false":e.value),(e=t)!==r&&(n.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function X(e,n){var r=n.checked;return j({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function q(e,n){var r=null==n.defaultValue?"":n.defaultValue,t=null!=n.checked?n.checked:n.defaultChecked;r=J(null!=n.value?n.value:r),e._wrapperState={initialChecked:t,initialValue:r,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function K(e,n){null!=(n=n.checked)&&v(e,"checked",n,!1)}function Y(e,n){K(e,n);var r=J(n.value),t=n.type;if(null!=r)"number"===t?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===t||"reset"===t)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,r):n.hasOwnProperty("defaultValue")&&ee(e,n.type,J(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function Z(e,n,r){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var t=n.type;if(!("submit"!==t&&"reset"!==t||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,r||n===e.value||(e.value=n),e.defaultValue=n}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function ee(e,n,r){"number"===n&&$(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var ne=Array.isArray;function re(e,n,r,t){if(e=e.options,n){n={};for(var i=0;i<r.length;i++)n["$"+r[i]]=!0;for(r=0;r<e.length;r++)i=n.hasOwnProperty("$"+e[r].value),e[r].selected!==i&&(e[r].selected=i),i&&t&&(e[r].defaultSelected=!0)}else{for(r=""+J(r),n=null,i=0;i<e.length;i++){if(e[i].value===r)return e[i].selected=!0,void(t&&(e[i].defaultSelected=!0));null!==n||e[i].disabled||(n=e[i])}null!==n&&(n.selected=!0)}}function te(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return j({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,n){var r=n.value;if(null==r){if(r=n.children,n=n.defaultValue,null!=r){if(null!=n)throw Error(o(92));if(ne(r)){if(1<r.length)throw Error(o(93));r=r[0]}n=r}null==n&&(n=""),r=n}e._wrapperState={initialValue:J(r)}}function oe(e,n){var r=J(n.value),t=J(n.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==n.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=t&&(e.defaultValue=""+t)}function ae(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,t){MSApp.execUnsafeLocalFunction((function(){return ue(e,n)}))}:ue);function me(e,n){if(n){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function ge(e,n,r){return null==n||"boolean"==typeof n||""===n?"":r||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function Ce(e,n){for(var r in e=e.style,n)if(n.hasOwnProperty(r)){var t=0===r.indexOf("--"),i=ge(r,n[r],t);"float"===r&&(r="cssFloat"),t?e.setProperty(r,i):e[r]=i}}Object.keys(pe).forEach((function(e){fe.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var he=j({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,n){if(n){if(he[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function ve(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Pe=null,Ae=null,_e=null;function De(e){if(e=vi(e)){if("function"!=typeof Pe)throw Error(o(280));var n=e.stateNode;n&&(n=Si(n),Pe(e.stateNode,e.type,n))}}function Ee(e){Ae?_e?_e.push(e):_e=[e]:Ae=e}function Oe(){if(Ae){var e=Ae,n=_e;if(_e=Ae=null,De(e),n)for(e=0;e<n.length;e++)De(n[e])}}function xe(e,n){return e(n)}function we(){}var Ie=!1;function Ue(e,n,r){if(Ie)return e(n,r);Ie=!0;try{return xe(e,n,r)}finally{Ie=!1,(null!==Ae||null!==_e)&&(we(),Oe())}}function Fe(e,n){var r=e.stateNode;if(null===r)return null;var t=Si(r);if(null===t)return null;r=t[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(t=!t.disabled)||(t=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!t;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(o(231,n,typeof r));return r}var Re=!1;if(u)try{var Le={};Object.defineProperty(Le,"passive",{get:function(){Re=!0}}),window.addEventListener("test",Le,Le),window.removeEventListener("test",Le,Le)}catch(ue){Re=!1}function Ne(e,n,r,t,i,o,a,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(r,c)}catch(e){this.onError(e)}}var ke=!1,je=null,We=!1,Me=null,Te={onError:function(e){ke=!0,je=e}};function Be(e,n,r,t,i,o,a,s,l){ke=!1,je=null,Ne.apply(Te,arguments)}function ze(e){var n=e,r=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(r=n.return),e=n.return}while(e)}return 3===n.tag?r:null}function Ve(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Je(e){if(ze(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=ze(e)))throw Error(o(188));return n!==e?null:e}for(var r=e,t=n;;){var i=r.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(t=i.return)){r=t;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===r)return Je(i),e;if(a===t)return Je(i),n;a=a.sibling}throw Error(o(188))}if(r.return!==t.return)r=i,t=a;else{for(var s=!1,l=i.child;l;){if(l===r){s=!0,r=i,t=a;break}if(l===t){s=!0,t=i,r=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===r){s=!0,r=a,t=i;break}if(l===t){s=!0,t=a,r=i;break}l=l.sibling}if(!s)throw Error(o(189))}}if(r.alternate!==t)throw Error(o(190))}if(3!==r.tag)throw Error(o(188));return r.stateNode.current===r?e:n}(e))?Ge(e):null}function Ge(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=Ge(e);if(null!==n)return n;e=e.sibling}return null}var Qe=i.unstable_scheduleCallback,$e=i.unstable_cancelCallback,Xe=i.unstable_shouldYield,qe=i.unstable_requestPaint,Ke=i.unstable_now,Ye=i.unstable_getCurrentPriorityLevel,Ze=i.unstable_ImmediatePriority,en=i.unstable_UserBlockingPriority,nn=i.unstable_NormalPriority,rn=i.unstable_LowPriority,tn=i.unstable_IdlePriority,on=null,an=null,sn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ln(e)/cn|0)|0},ln=Math.log,cn=Math.LN2,un=64,dn=4194304;function mn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var r=e.pendingLanes;if(0===r)return 0;var t=0,i=e.suspendedLanes,o=e.pingedLanes,a=268435455&r;if(0!==a){var s=a&~i;0!==s?t=mn(s):0!=(o&=a)&&(t=mn(o))}else 0!=(a=r&~i)?t=mn(a):0!==o&&(t=mn(o));if(0===t)return 0;if(0!==n&&n!==t&&0==(n&i)&&((i=t&-t)>=(o=n&-n)||16===i&&0!=(4194240&o)))return n;if(0!=(4&t)&&(t|=16&r),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=t;0<n;)i=1<<(r=31-sn(n)),t|=e[r],n&=~i;return t}function fn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function gn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Cn(){var e=un;return 0==(4194240&(un<<=1))&&(un=64),e}function hn(e){for(var n=[],r=0;31>r;r++)n.push(e);return n}function bn(e,n,r){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=r}function vn(e,n){var r=e.entangledLanes|=n;for(e=e.entanglements;r;){var t=31-sn(r),i=1<<t;i&n|e[t]&n&&(e[t]|=n),r&=~i}}var yn=0;function Sn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Pn,An,_n,Dn,En,On=!1,xn=[],wn=null,In=null,Un=null,Fn=new Map,Rn=new Map,Ln=[],Nn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function kn(e,n){switch(e){case"focusin":case"focusout":wn=null;break;case"dragenter":case"dragleave":In=null;break;case"mouseover":case"mouseout":Un=null;break;case"pointerover":case"pointerout":Fn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rn.delete(n.pointerId)}}function jn(e,n,r,t,i,o){return null===e||e.nativeEvent!==o?(e={blockedOn:n,domEventName:r,eventSystemFlags:t,nativeEvent:o,targetContainers:[i]},null!==n&&null!==(n=vi(n))&&An(n),e):(e.eventSystemFlags|=t,n=e.targetContainers,null!==i&&-1===n.indexOf(i)&&n.push(i),e)}function Wn(e){var n=bi(e.target);if(null!==n){var r=ze(n);if(null!==r)if(13===(n=r.tag)){if(null!==(n=Ve(r)))return e.blockedOn=n,void En(e.priority,(function(){_n(r)}))}else if(3===n&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Mn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var r=qn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==r)return null!==(n=vi(r))&&An(n),e.blockedOn=r,!1;var t=new(r=e.nativeEvent).constructor(r.type,r);ye=t,r.target.dispatchEvent(t),ye=null,n.shift()}return!0}function Tn(e,n,r){Mn(e)&&r.delete(n)}function Bn(){On=!1,null!==wn&&Mn(wn)&&(wn=null),null!==In&&Mn(In)&&(In=null),null!==Un&&Mn(Un)&&(Un=null),Fn.forEach(Tn),Rn.forEach(Tn)}function zn(e,n){e.blockedOn===n&&(e.blockedOn=null,On||(On=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Bn)))}function Vn(e){function n(n){return zn(n,e)}if(0<xn.length){zn(xn[0],e);for(var r=1;r<xn.length;r++){var t=xn[r];t.blockedOn===e&&(t.blockedOn=null)}}for(null!==wn&&zn(wn,e),null!==In&&zn(In,e),null!==Un&&zn(Un,e),Fn.forEach(n),Rn.forEach(n),r=0;r<Ln.length;r++)(t=Ln[r]).blockedOn===e&&(t.blockedOn=null);for(;0<Ln.length&&null===(r=Ln[0]).blockedOn;)Wn(r),null===r.blockedOn&&Ln.shift()}var Jn=y.ReactCurrentBatchConfig,Hn=!0;function Gn(e,n,r,t){var i=yn,o=Jn.transition;Jn.transition=null;try{yn=1,$n(e,n,r,t)}finally{yn=i,Jn.transition=o}}function Qn(e,n,r,t){var i=yn,o=Jn.transition;Jn.transition=null;try{yn=4,$n(e,n,r,t)}finally{yn=i,Jn.transition=o}}function $n(e,n,r,t){if(Hn){var i=qn(e,n,r,t);if(null===i)Jt(e,n,t,Xn,r),kn(e,t);else if(function(e,n,r,t,i){switch(n){case"focusin":return wn=jn(wn,e,n,r,t,i),!0;case"dragenter":return In=jn(In,e,n,r,t,i),!0;case"mouseover":return Un=jn(Un,e,n,r,t,i),!0;case"pointerover":var o=i.pointerId;return Fn.set(o,jn(Fn.get(o)||null,e,n,r,t,i)),!0;case"gotpointercapture":return o=i.pointerId,Rn.set(o,jn(Rn.get(o)||null,e,n,r,t,i)),!0}return!1}(i,e,n,r,t))t.stopPropagation();else if(kn(e,t),4&n&&-1<Nn.indexOf(e)){for(;null!==i;){var o=vi(i);if(null!==o&&Pn(o),null===(o=qn(e,n,r,t))&&Jt(e,n,t,Xn,r),o===i)break;i=o}null!==i&&t.stopPropagation()}else Jt(e,n,t,null,r)}}var Xn=null;function qn(e,n,r,t){if(Xn=null,null!==(e=bi(e=Se(t))))if(null===(n=ze(e)))e=null;else if(13===(r=n.tag)){if(null!==(e=Ve(n)))return e;e=null}else if(3===r){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Xn=e,null}function Kn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ye()){case Ze:return 1;case en:return 4;case nn:case rn:return 16;case tn:return 536870912;default:return 16}default:return 16}}var Yn=null,Zn=null,er=null;function nr(){if(er)return er;var e,n,r=Zn,t=r.length,i="value"in Yn?Yn.value:Yn.textContent,o=i.length;for(e=0;e<t&&r[e]===i[e];e++);var a=t-e;for(n=1;n<=a&&r[t-n]===i[o-n];n++);return er=i.slice(e,1<n?1-n:void 0)}function rr(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function tr(){return!0}function ir(){return!1}function or(e){function n(n,r,t,i,o){for(var a in this._reactName=n,this._targetInst=t,this.type=r,this.nativeEvent=i,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(a)&&(n=e[a],this[a]=n?n(i):i[a]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?tr:ir,this.isPropagationStopped=ir,this}return j(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=tr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=tr)},persist:function(){},isPersistent:tr}),n}var ar,sr,lr,cr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ur=or(cr),dr=j({},cr,{view:0,detail:0}),mr=or(dr),pr=j({},dr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Dr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lr&&(lr&&"mousemove"===e.type?(ar=e.screenX-lr.screenX,sr=e.screenY-lr.screenY):sr=ar=0,lr=e),ar)},movementY:function(e){return"movementY"in e?e.movementY:sr}}),fr=or(pr),gr=or(j({},pr,{dataTransfer:0})),Cr=or(j({},dr,{relatedTarget:0})),hr=or(j({},cr,{animationName:0,elapsedTime:0,pseudoElement:0})),br=j({},cr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vr=or(br),yr=or(j({},cr,{data:0})),Sr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Pr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ar={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Ar[e])&&!!n[e]}function Dr(){return _r}var Er=j({},dr,{key:function(e){if(e.key){var n=Sr[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=rr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Pr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Dr,charCode:function(e){return"keypress"===e.type?rr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Or=or(Er),xr=or(j({},pr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),wr=or(j({},dr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Dr})),Ir=or(j({},cr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ur=j({},pr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fr=or(Ur),Rr=[9,13,27,32],Lr=u&&"CompositionEvent"in window,Nr=null;u&&"documentMode"in document&&(Nr=document.documentMode);var kr=u&&"TextEvent"in window&&!Nr,jr=u&&(!Lr||Nr&&8<Nr&&11>=Nr),Wr=String.fromCharCode(32),Mr=!1;function Tr(e,n){switch(e){case"keyup":return-1!==Rr.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Br(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zr=!1,Vr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Jr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Vr[e.type]:"textarea"===n}function Hr(e,n,r,t){Ee(t),0<(n=Gt(n,"onChange")).length&&(r=new ur("onChange","change",null,r,t),e.push({event:r,listeners:n}))}var Gr=null,Qr=null;function $r(e){Wt(e,0)}function Xr(e){if(Q(yi(e)))return e}function qr(e,n){if("change"===e)return n}var Kr=!1;if(u){var Yr;if(u){var Zr="oninput"in document;if(!Zr){var et=document.createElement("div");et.setAttribute("oninput","return;"),Zr="function"==typeof et.oninput}Yr=Zr}else Yr=!1;Kr=Yr&&(!document.documentMode||9<document.documentMode)}function nt(){Gr&&(Gr.detachEvent("onpropertychange",rt),Qr=Gr=null)}function rt(e){if("value"===e.propertyName&&Xr(Qr)){var n=[];Hr(n,Qr,e,Se(e)),Ue($r,n)}}function tt(e,n,r){"focusin"===e?(nt(),Qr=r,(Gr=n).attachEvent("onpropertychange",rt)):"focusout"===e&&nt()}function it(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xr(Qr)}function ot(e,n){if("click"===e)return Xr(n)}function at(e,n){if("input"===e||"change"===e)return Xr(n)}var st="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lt(e,n){if(st(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var r=Object.keys(e),t=Object.keys(n);if(r.length!==t.length)return!1;for(t=0;t<r.length;t++){var i=r[t];if(!d.call(n,i)||!st(e[i],n[i]))return!1}return!0}function ct(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ut(e,n){var r,t=ct(e);for(e=0;t;){if(3===t.nodeType){if(r=e+t.textContent.length,e<=n&&r>=n)return{node:t,offset:n-e};e=r}e:{for(;t;){if(t.nextSibling){t=t.nextSibling;break e}t=t.parentNode}t=void 0}t=ct(t)}}function dt(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?dt(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function mt(){for(var e=window,n=$();n instanceof e.HTMLIFrameElement;){try{var r="string"==typeof n.contentWindow.location.href}catch(e){r=!1}if(!r)break;n=$((e=n.contentWindow).document)}return n}function pt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function ft(e){var n=mt(),r=e.focusedElem,t=e.selectionRange;if(n!==r&&r&&r.ownerDocument&&dt(r.ownerDocument.documentElement,r)){if(null!==t&&pt(r))if(n=t.start,void 0===(e=t.end)&&(e=n),"selectionStart"in r)r.selectionStart=n,r.selectionEnd=Math.min(e,r.value.length);else if((e=(n=r.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var i=r.textContent.length,o=Math.min(t.start,i);t=void 0===t.end?o:Math.min(t.end,i),!e.extend&&o>t&&(i=t,t=o,o=i),i=ut(r,o);var a=ut(r,t);i&&a&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((n=n.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),o>t?(e.addRange(n),e.extend(a.node,a.offset)):(n.setEnd(a.node,a.offset),e.addRange(n)))}for(n=[],e=r;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<n.length;r++)(e=n[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gt=u&&"documentMode"in document&&11>=document.documentMode,Ct=null,ht=null,bt=null,vt=!1;function yt(e,n,r){var t=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;vt||null==Ct||Ct!==$(t)||(t="selectionStart"in(t=Ct)&&pt(t)?{start:t.selectionStart,end:t.selectionEnd}:{anchorNode:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset},bt&&lt(bt,t)||(bt=t,0<(t=Gt(ht,"onSelect")).length&&(n=new ur("onSelect","select",null,n,r),e.push({event:n,listeners:t}),n.target=Ct)))}function St(e,n){var r={};return r[e.toLowerCase()]=n.toLowerCase(),r["Webkit"+e]="webkit"+n,r["Moz"+e]="moz"+n,r}var Pt={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},At={},_t={};function Dt(e){if(At[e])return At[e];if(!Pt[e])return e;var n,r=Pt[e];for(n in r)if(r.hasOwnProperty(n)&&n in _t)return At[e]=r[n];return e}u&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete Pt.animationend.animation,delete Pt.animationiteration.animation,delete Pt.animationstart.animation),"TransitionEvent"in window||delete Pt.transitionend.transition);var Et=Dt("animationend"),Ot=Dt("animationiteration"),xt=Dt("animationstart"),wt=Dt("transitionend"),It=new Map,Ut="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ft(e,n){It.set(e,n),l(n,[e])}for(var Rt=0;Rt<Ut.length;Rt++){var Lt=Ut[Rt];Ft(Lt.toLowerCase(),"on"+(Lt[0].toUpperCase()+Lt.slice(1)))}Ft(Et,"onAnimationEnd"),Ft(Ot,"onAnimationIteration"),Ft(xt,"onAnimationStart"),Ft("dblclick","onDoubleClick"),Ft("focusin","onFocus"),Ft("focusout","onBlur"),Ft(wt,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Nt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kt=new Set("cancel close invalid load scroll toggle".split(" ").concat(Nt));function jt(e,n,r){var t=e.type||"unknown-event";e.currentTarget=r,function(e,n,r,t,i,a,s,l,c){if(Be.apply(this,arguments),ke){if(!ke)throw Error(o(198));var u=je;ke=!1,je=null,We||(We=!0,Me=u)}}(t,n,void 0,e),e.currentTarget=null}function Wt(e,n){n=0!=(4&n);for(var r=0;r<e.length;r++){var t=e[r],i=t.event;t=t.listeners;e:{var o=void 0;if(n)for(var a=t.length-1;0<=a;a--){var s=t[a],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==o&&i.isPropagationStopped())break e;jt(i,s,c),o=l}else for(a=0;a<t.length;a++){if(l=(s=t[a]).instance,c=s.currentTarget,s=s.listener,l!==o&&i.isPropagationStopped())break e;jt(i,s,c),o=l}}}if(We)throw e=Me,We=!1,Me=null,e}function Mt(e,n){var r=n[gi];void 0===r&&(r=n[gi]=new Set);var t=e+"__bubble";r.has(t)||(Vt(n,e,2,!1),r.add(t))}function Tt(e,n,r){var t=0;n&&(t|=4),Vt(r,e,t,n)}var Bt="_reactListening"+Math.random().toString(36).slice(2);function zt(e){if(!e[Bt]){e[Bt]=!0,a.forEach((function(n){"selectionchange"!==n&&(kt.has(n)||Tt(n,!1,e),Tt(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Bt]||(n[Bt]=!0,Tt("selectionchange",!1,n))}}function Vt(e,n,r,t){switch(Kn(n)){case 1:var i=Gn;break;case 4:i=Qn;break;default:i=$n}r=i.bind(null,n,r,e),i=void 0,!Re||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(i=!0),t?void 0!==i?e.addEventListener(n,r,{capture:!0,passive:i}):e.addEventListener(n,r,!0):void 0!==i?e.addEventListener(n,r,{passive:i}):e.addEventListener(n,r,!1)}function Jt(e,n,r,t,i){var o=t;if(0==(1&n)&&0==(2&n)&&null!==t)e:for(;;){if(null===t)return;var a=t.tag;if(3===a||4===a){var s=t.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===a)for(a=t.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;a=a.return}for(;null!==s;){if(null===(a=bi(s)))return;if(5===(l=a.tag)||6===l){t=o=a;continue e}s=s.parentNode}}t=t.return}Ue((function(){var t=o,i=Se(r),a=[];e:{var s=It.get(e);if(void 0!==s){var l=ur,c=e;switch(e){case"keypress":if(0===rr(r))break e;case"keydown":case"keyup":l=Or;break;case"focusin":c="focus",l=Cr;break;case"focusout":c="blur",l=Cr;break;case"beforeblur":case"afterblur":l=Cr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=gr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=wr;break;case Et:case Ot:case xt:l=hr;break;case wt:l=Ir;break;case"scroll":l=mr;break;case"wheel":l=Fr;break;case"copy":case"cut":case"paste":l=vr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=xr}var u=0!=(4&n),d=!u&&"scroll"===e,m=u?null!==s?s+"Capture":null:s;u=[];for(var p,f=t;null!==f;){var g=(p=f).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==m&&null!=(g=Fe(f,m))&&u.push(Ht(f,g,p))),d)break;f=f.return}0<u.length&&(s=new l(s,c,null,r,i),a.push({event:s,listeners:u}))}}if(0==(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||r===ye||!(c=r.relatedTarget||r.fromElement)||!bi(c)&&!c[fi])&&(l||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=t,null!==(c=(c=r.relatedTarget||r.toElement)?bi(c):null)&&(c!==(d=ze(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=t),l!==c)){if(u=fr,g="onMouseLeave",m="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=xr,g="onPointerLeave",m="onPointerEnter",f="pointer"),d=null==l?s:yi(l),p=null==c?s:yi(c),(s=new u(g,f+"leave",l,r,i)).target=d,s.relatedTarget=p,g=null,bi(i)===t&&((u=new u(m,f+"enter",c,r,i)).target=p,u.relatedTarget=d,g=u),d=g,l&&c)e:{for(m=c,f=0,p=u=l;p;p=Qt(p))f++;for(p=0,g=m;g;g=Qt(g))p++;for(;0<f-p;)u=Qt(u),f--;for(;0<p-f;)m=Qt(m),p--;for(;f--;){if(u===m||null!==m&&u===m.alternate)break e;u=Qt(u),m=Qt(m)}u=null}else u=null;null!==l&&$t(a,s,l,u,!1),null!==c&&null!==d&&$t(a,d,c,u,!0)}if("select"===(l=(s=t?yi(t):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var C=qr;else if(Jr(s))if(Kr)C=at;else{C=it;var h=tt}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(C=ot);switch(C&&(C=C(e,t))?Hr(a,C,r,i):(h&&h(e,s,t),"focusout"===e&&(h=s._wrapperState)&&h.controlled&&"number"===s.type&&ee(s,"number",s.value)),h=t?yi(t):window,e){case"focusin":(Jr(h)||"true"===h.contentEditable)&&(Ct=h,ht=t,bt=null);break;case"focusout":bt=ht=Ct=null;break;case"mousedown":vt=!0;break;case"contextmenu":case"mouseup":case"dragend":vt=!1,yt(a,r,i);break;case"selectionchange":if(gt)break;case"keydown":case"keyup":yt(a,r,i)}var b;if(Lr)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else zr?Tr(e,r)&&(v="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(v="onCompositionStart");v&&(jr&&"ko"!==r.locale&&(zr||"onCompositionStart"!==v?"onCompositionEnd"===v&&zr&&(b=nr()):(Zn="value"in(Yn=i)?Yn.value:Yn.textContent,zr=!0)),0<(h=Gt(t,v)).length&&(v=new yr(v,e,null,r,i),a.push({event:v,listeners:h}),(b||null!==(b=Br(r)))&&(v.data=b))),(b=kr?function(e,n){switch(e){case"compositionend":return Br(n);case"keypress":return 32!==n.which?null:(Mr=!0,Wr);case"textInput":return(e=n.data)===Wr&&Mr?null:e;default:return null}}(e,r):function(e,n){if(zr)return"compositionend"===e||!Lr&&Tr(e,n)?(e=nr(),er=Zn=Yn=null,zr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return jr&&"ko"!==n.locale?null:n.data}}(e,r))&&0<(t=Gt(t,"onBeforeInput")).length&&(i=new yr("onBeforeInput","beforeinput",null,r,i),a.push({event:i,listeners:t}),i.data=b)}Wt(a,n)}))}function Ht(e,n,r){return{instance:e,listener:n,currentTarget:r}}function Gt(e,n){for(var r=n+"Capture",t=[];null!==e;){var i=e,o=i.stateNode;5===i.tag&&null!==o&&(i=o,null!=(o=Fe(e,r))&&t.unshift(Ht(e,o,i)),null!=(o=Fe(e,n))&&t.push(Ht(e,o,i))),e=e.return}return t}function Qt(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function $t(e,n,r,t,i){for(var o=n._reactName,a=[];null!==r&&r!==t;){var s=r,l=s.alternate,c=s.stateNode;if(null!==l&&l===t)break;5===s.tag&&null!==c&&(s=c,i?null!=(l=Fe(r,o))&&a.unshift(Ht(r,l,s)):i||null!=(l=Fe(r,o))&&a.push(Ht(r,l,s))),r=r.return}0!==a.length&&e.push({event:n,listeners:a})}var Xt=/\r\n?/g,qt=/\u0000|\uFFFD/g;function Kt(e){return("string"==typeof e?e:""+e).replace(Xt,"\n").replace(qt,"")}function Yt(e,n,r){if(n=Kt(n),Kt(e)!==n&&r)throw Error(o(425))}function Zt(){}var ei=null,ni=null;function ri(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ti="function"==typeof setTimeout?setTimeout:void 0,ii="function"==typeof clearTimeout?clearTimeout:void 0,oi="function"==typeof Promise?Promise:void 0,ai="function"==typeof queueMicrotask?queueMicrotask:void 0!==oi?function(e){return oi.resolve(null).then(e).catch(si)}:ti;function si(e){setTimeout((function(){throw e}))}function li(e,n){var r=n,t=0;do{var i=r.nextSibling;if(e.removeChild(r),i&&8===i.nodeType)if("/$"===(r=i.data)){if(0===t)return e.removeChild(i),void Vn(n);t--}else"$"!==r&&"$?"!==r&&"$!"!==r||t++;r=i}while(r);Vn(n)}function ci(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ui(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===n)return e;n--}else"/$"===r&&n++}e=e.previousSibling}return null}var di=Math.random().toString(36).slice(2),mi="__reactFiber$"+di,pi="__reactProps$"+di,fi="__reactContainer$"+di,gi="__reactEvents$"+di,Ci="__reactListeners$"+di,hi="__reactHandles$"+di;function bi(e){var n=e[mi];if(n)return n;for(var r=e.parentNode;r;){if(n=r[fi]||r[mi]){if(r=n.alternate,null!==n.child||null!==r&&null!==r.child)for(e=ui(e);null!==e;){if(r=e[mi])return r;e=ui(e)}return n}r=(e=r).parentNode}return null}function vi(e){return!(e=e[mi]||e[fi])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Si(e){return e[pi]||null}var Pi=[],Ai=-1;function _i(e){return{current:e}}function Di(e){0>Ai||(e.current=Pi[Ai],Pi[Ai]=null,Ai--)}function Ei(e,n){Ai++,Pi[Ai]=e.current,e.current=n}var Oi={},xi=_i(Oi),wi=_i(!1),Ii=Oi;function Ui(e,n){var r=e.type.contextTypes;if(!r)return Oi;var t=e.stateNode;if(t&&t.__reactInternalMemoizedUnmaskedChildContext===n)return t.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in r)o[i]=n[i];return t&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function Fi(e){return null!=e.childContextTypes}function Ri(){Di(wi),Di(xi)}function Li(e,n,r){if(xi.current!==Oi)throw Error(o(168));Ei(xi,n),Ei(wi,r)}function Ni(e,n,r){var t=e.stateNode;if(n=n.childContextTypes,"function"!=typeof t.getChildContext)return r;for(var i in t=t.getChildContext())if(!(i in n))throw Error(o(108,V(e)||"Unknown",i));return j({},r,t)}function ki(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Oi,Ii=xi.current,Ei(xi,e),Ei(wi,wi.current),!0}function ji(e,n,r){var t=e.stateNode;if(!t)throw Error(o(169));r?(e=Ni(e,n,Ii),t.__reactInternalMemoizedMergedChildContext=e,Di(wi),Di(xi),Ei(xi,e)):Di(wi),Ei(wi,r)}var Wi=null,Mi=!1,Ti=!1;function Bi(e){null===Wi?Wi=[e]:Wi.push(e)}function zi(){if(!Ti&&null!==Wi){Ti=!0;var e=0,n=yn;try{var r=Wi;for(yn=1;e<r.length;e++){var t=r[e];do{t=t(!0)}while(null!==t)}Wi=null,Mi=!1}catch(n){throw null!==Wi&&(Wi=Wi.slice(e+1)),Qe(Ze,zi),n}finally{yn=n,Ti=!1}}return null}var Vi=[],Ji=0,Hi=null,Gi=0,Qi=[],$i=0,Xi=null,qi=1,Ki="";function Yi(e,n){Vi[Ji++]=Gi,Vi[Ji++]=Hi,Hi=e,Gi=n}function Zi(e,n,r){Qi[$i++]=qi,Qi[$i++]=Ki,Qi[$i++]=Xi,Xi=e;var t=qi;e=Ki;var i=32-sn(t)-1;t&=~(1<<i),r+=1;var o=32-sn(n)+i;if(30<o){var a=i-i%5;o=(t&(1<<a)-1).toString(32),t>>=a,i-=a,qi=1<<32-sn(n)+i|r<<i|t,Ki=o+e}else qi=1<<o|r<<i|t,Ki=e}function eo(e){null!==e.return&&(Yi(e,1),Zi(e,1,0))}function no(e){for(;e===Hi;)Hi=Vi[--Ji],Vi[Ji]=null,Gi=Vi[--Ji],Vi[Ji]=null;for(;e===Xi;)Xi=Qi[--$i],Qi[$i]=null,Ki=Qi[--$i],Qi[$i]=null,qi=Qi[--$i],Qi[$i]=null}var ro=null,to=null,io=!1,oo=null;function ao(e,n){var r=Fc(5,null,null,0);r.elementType="DELETED",r.stateNode=n,r.return=e,null===(n=e.deletions)?(e.deletions=[r],e.flags|=16):n.push(r)}function so(e,n){switch(e.tag){case 5:var r=e.type;return null!==(n=1!==n.nodeType||r.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ro=e,to=ci(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ro=e,to=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(r=null!==Xi?{id:qi,overflow:Ki}:null,e.memoizedState={dehydrated:n,treeContext:r,retryLane:1073741824},(r=Fc(18,null,null,0)).stateNode=n,r.return=e,e.child=r,ro=e,to=null,!0);default:return!1}}function lo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(io){var n=to;if(n){var r=n;if(!so(e,n)){if(lo(e))throw Error(o(418));n=ci(r.nextSibling);var t=ro;n&&so(e,n)?ao(t,r):(e.flags=-4097&e.flags|2,io=!1,ro=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,io=!1,ro=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ro=e}function mo(e){if(e!==ro)return!1;if(!io)return uo(e),io=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ri(e.type,e.memoizedProps)),n&&(n=to)){if(lo(e))throw po(),Error(o(418));for(;n;)ao(e,n),n=ci(n.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===n){to=ci(e.nextSibling);break e}n--}else"$"!==r&&"$!"!==r&&"$?"!==r||n++}e=e.nextSibling}to=null}}else to=ro?ci(e.stateNode.nextSibling):null;return!0}function po(){for(var e=to;e;)e=ci(e.nextSibling)}function fo(){to=ro=null,io=!1}function go(e){null===oo?oo=[e]:oo.push(e)}var Co=y.ReactCurrentBatchConfig;function ho(e,n){if(e&&e.defaultProps){for(var r in n=j({},n),e=e.defaultProps)void 0===n[r]&&(n[r]=e[r]);return n}return n}var bo=_i(null),vo=null,yo=null,So=null;function Po(){So=yo=vo=null}function Ao(e){var n=bo.current;Di(bo),e._currentValue=n}function _o(e,n,r){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==t&&(t.childLanes|=n)):null!==t&&(t.childLanes&n)!==n&&(t.childLanes|=n),e===r)break;e=e.return}}function Do(e,n){vo=e,So=yo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(ys=!0),e.firstContext=null)}function Eo(e){var n=e._currentValue;if(So!==e)if(e={context:e,memoizedValue:n,next:null},null===yo){if(null===vo)throw Error(o(308));yo=e,vo.dependencies={lanes:0,firstContext:e}}else yo=yo.next=e;return n}var Oo=null;function xo(e){null===Oo?Oo=[e]:Oo.push(e)}function wo(e,n,r,t){var i=n.interleaved;return null===i?(r.next=r,xo(n)):(r.next=i.next,i.next=r),n.interleaved=r,Io(e,t)}function Io(e,n){e.lanes|=n;var r=e.alternate;for(null!==r&&(r.lanes|=n),r=e,e=e.return;null!==e;)e.childLanes|=n,null!==(r=e.alternate)&&(r.childLanes|=n),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Uo=!1;function Fo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ro(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Lo(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function No(e,n,r){var t=e.updateQueue;if(null===t)return null;if(t=t.shared,0!=(2&wl)){var i=t.pending;return null===i?n.next=n:(n.next=i.next,i.next=n),t.pending=n,Io(e,r)}return null===(i=t.interleaved)?(n.next=n,xo(t)):(n.next=i.next,i.next=n),t.interleaved=n,Io(e,r)}function ko(e,n,r){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&r))){var t=n.lanes;r|=t&=e.pendingLanes,n.lanes=r,vn(e,r)}}function jo(e,n){var r=e.updateQueue,t=e.alternate;if(null!==t&&r===(t=t.updateQueue)){var i=null,o=null;if(null!==(r=r.firstBaseUpdate)){do{var a={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===o?i=o=a:o=o.next=a,r=r.next}while(null!==r);null===o?i=o=n:o=o.next=n}else i=o=n;return r={baseState:t.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:t.shared,effects:t.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=n:e.next=n,r.lastBaseUpdate=n}function Wo(e,n,r,t){var i=e.updateQueue;Uo=!1;var o=i.firstBaseUpdate,a=i.lastBaseUpdate,s=i.shared.pending;if(null!==s){i.shared.pending=null;var l=s,c=l.next;l.next=null,null===a?o=c:a.next=c,a=l;var u=e.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==a&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l)}if(null!==o){var d=i.baseState;for(a=0,u=c=l=null,s=o;;){var m=s.lane,p=s.eventTime;if((t&m)===m){null!==u&&(u=u.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,g=s;switch(m=n,p=r,g.tag){case 1:if("function"==typeof(f=g.payload)){d=f.call(p,d,m);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(m="function"==typeof(f=g.payload)?f.call(p,d,m):f))break e;d=j({},d,m);break e;case 2:Uo=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(m=i.effects)?i.effects=[s]:m.push(s))}else p={eventTime:p,lane:m,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=p,l=d):u=u.next=p,a|=m;if(null===(s=s.next)){if(null===(s=i.shared.pending))break;s=(m=s).next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}if(null===u&&(l=d),i.baseState=l,i.firstBaseUpdate=c,i.lastBaseUpdate=u,null!==(n=i.shared.interleaved)){i=n;do{a|=i.lane,i=i.next}while(i!==n)}else null===o&&(i.shared.lanes=0);jl|=a,e.lanes=a,e.memoizedState=d}}function Mo(e,n,r){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var t=e[n],i=t.callback;if(null!==i){if(t.callback=null,t=r,"function"!=typeof i)throw Error(o(191,i));i.call(t)}}}var To=(new t.Component).refs;function Bo(e,n,r,t){r=null==(r=r(t,n=e.memoizedState))?n:j({},n,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var zo={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,n,r){e=e._reactInternals;var t=nc(),i=rc(e),o=Lo(t,i);o.payload=n,null!=r&&(o.callback=r),null!==(n=No(e,o,i))&&(tc(n,e,i,t),ko(n,e,i))},enqueueReplaceState:function(e,n,r){e=e._reactInternals;var t=nc(),i=rc(e),o=Lo(t,i);o.tag=1,o.payload=n,null!=r&&(o.callback=r),null!==(n=No(e,o,i))&&(tc(n,e,i,t),ko(n,e,i))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var r=nc(),t=rc(e),i=Lo(r,t);i.tag=2,null!=n&&(i.callback=n),null!==(n=No(e,i,t))&&(tc(n,e,t,r),ko(n,e,t))}};function Vo(e,n,r,t,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(t,o,a):!(n.prototype&&n.prototype.isPureReactComponent&&lt(r,t)&&lt(i,o))}function Jo(e,n,r){var t=!1,i=Oi,o=n.contextType;return"object"==typeof o&&null!==o?o=Eo(o):(i=Fi(n)?Ii:xi.current,o=(t=null!=(t=n.contextTypes))?Ui(e,i):Oi),n=new n(r,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=zo,e.stateNode=n,n._reactInternals=e,t&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),n}function Ho(e,n,r,t){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(r,t),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(r,t),n.state!==e&&zo.enqueueReplaceState(n,n.state,null)}function Go(e,n,r,t){var i=e.stateNode;i.props=r,i.state=e.memoizedState,i.refs=To,Fo(e);var o=n.contextType;"object"==typeof o&&null!==o?i.context=Eo(o):(o=Fi(n)?Ii:xi.current,i.context=Ui(e,o)),i.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(Bo(e,n,o,r),i.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(n=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),n!==i.state&&zo.enqueueReplaceState(i,i.state,null),Wo(e,r,i,t),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.flags|=4194308)}function Qo(e,n,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(o(309));var t=r.stateNode}if(!t)throw Error(o(147,e));var i=t,a=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===a?n.ref:(n=function(e){var n=i.refs;n===To&&(n=i.refs={}),null===e?delete n[a]:n[a]=e},n._stringRef=a,n)}if("string"!=typeof e)throw Error(o(284));if(!r._owner)throw Error(o(290,e))}return e}function $o(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Xo(e){return(0,e._init)(e._payload)}function qo(e){function n(n,r){if(e){var t=n.deletions;null===t?(n.deletions=[r],n.flags|=16):t.push(r)}}function r(r,t){if(!e)return null;for(;null!==t;)n(r,t),t=t.sibling;return null}function t(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function i(e,n){return(e=Lc(e,n)).index=0,e.sibling=null,e}function a(n,r,t){return n.index=t,e?null!==(t=n.alternate)?(t=t.index)<r?(n.flags|=2,r):t:(n.flags|=2,r):(n.flags|=1048576,r)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,r,t){return null===n||6!==n.tag?((n=Wc(r,e.mode,t)).return=e,n):((n=i(n,r)).return=e,n)}function c(e,n,r,t){var o=r.type;return o===A?d(e,n,r.props.children,t,r.key):null!==n&&(n.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===F&&Xo(o)===n.type)?((t=i(n,r.props)).ref=Qo(e,n,r),t.return=e,t):((t=Nc(r.type,r.key,r.props,null,e.mode,t)).ref=Qo(e,n,r),t.return=e,t)}function u(e,n,r,t){return null===n||4!==n.tag||n.stateNode.containerInfo!==r.containerInfo||n.stateNode.implementation!==r.implementation?((n=Mc(r,e.mode,t)).return=e,n):((n=i(n,r.children||[])).return=e,n)}function d(e,n,r,t,o){return null===n||7!==n.tag?((n=kc(r,e.mode,t,o)).return=e,n):((n=i(n,r)).return=e,n)}function m(e,n,r){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Wc(""+n,e.mode,r)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return(r=Nc(n.type,n.key,n.props,null,e.mode,r)).ref=Qo(e,null,n),r.return=e,r;case P:return(n=Mc(n,e.mode,r)).return=e,n;case F:return m(e,(0,n._init)(n._payload),r)}if(ne(n)||N(n))return(n=kc(n,e.mode,r,null)).return=e,n;$o(e,n)}return null}function p(e,n,r,t){var i=null!==n?n.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==i?null:l(e,n,""+r,t);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return r.key===i?c(e,n,r,t):null;case P:return r.key===i?u(e,n,r,t):null;case F:return p(e,n,(i=r._init)(r._payload),t)}if(ne(r)||N(r))return null!==i?null:d(e,n,r,t,null);$o(e,r)}return null}function f(e,n,r,t,i){if("string"==typeof t&&""!==t||"number"==typeof t)return l(n,e=e.get(r)||null,""+t,i);if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return c(n,e=e.get(null===t.key?r:t.key)||null,t,i);case P:return u(n,e=e.get(null===t.key?r:t.key)||null,t,i);case F:return f(e,n,r,(0,t._init)(t._payload),i)}if(ne(t)||N(t))return d(n,e=e.get(r)||null,t,i,null);$o(n,t)}return null}function g(i,o,s,l){for(var c=null,u=null,d=o,g=o=0,C=null;null!==d&&g<s.length;g++){d.index>g?(C=d,d=null):C=d.sibling;var h=p(i,d,s[g],l);if(null===h){null===d&&(d=C);break}e&&d&&null===h.alternate&&n(i,d),o=a(h,o,g),null===u?c=h:u.sibling=h,u=h,d=C}if(g===s.length)return r(i,d),io&&Yi(i,g),c;if(null===d){for(;g<s.length;g++)null!==(d=m(i,s[g],l))&&(o=a(d,o,g),null===u?c=d:u.sibling=d,u=d);return io&&Yi(i,g),c}for(d=t(i,d);g<s.length;g++)null!==(C=f(d,i,g,s[g],l))&&(e&&null!==C.alternate&&d.delete(null===C.key?g:C.key),o=a(C,o,g),null===u?c=C:u.sibling=C,u=C);return e&&d.forEach((function(e){return n(i,e)})),io&&Yi(i,g),c}function C(i,s,l,c){var u=N(l);if("function"!=typeof u)throw Error(o(150));if(null==(l=u.call(l)))throw Error(o(151));for(var d=u=null,g=s,C=s=0,h=null,b=l.next();null!==g&&!b.done;C++,b=l.next()){g.index>C?(h=g,g=null):h=g.sibling;var v=p(i,g,b.value,c);if(null===v){null===g&&(g=h);break}e&&g&&null===v.alternate&&n(i,g),s=a(v,s,C),null===d?u=v:d.sibling=v,d=v,g=h}if(b.done)return r(i,g),io&&Yi(i,C),u;if(null===g){for(;!b.done;C++,b=l.next())null!==(b=m(i,b.value,c))&&(s=a(b,s,C),null===d?u=b:d.sibling=b,d=b);return io&&Yi(i,C),u}for(g=t(i,g);!b.done;C++,b=l.next())null!==(b=f(g,i,C,b.value,c))&&(e&&null!==b.alternate&&g.delete(null===b.key?C:b.key),s=a(b,s,C),null===d?u=b:d.sibling=b,d=b);return e&&g.forEach((function(e){return n(i,e)})),io&&Yi(i,C),u}return function e(t,o,a,l){if("object"==typeof a&&null!==a&&a.type===A&&null===a.key&&(a=a.props.children),"object"==typeof a&&null!==a){switch(a.$$typeof){case S:e:{for(var c=a.key,u=o;null!==u;){if(u.key===c){if((c=a.type)===A){if(7===u.tag){r(t,u.sibling),(o=i(u,a.props.children)).return=t,t=o;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===F&&Xo(c)===u.type){r(t,u.sibling),(o=i(u,a.props)).ref=Qo(t,u,a),o.return=t,t=o;break e}r(t,u);break}n(t,u),u=u.sibling}a.type===A?((o=kc(a.props.children,t.mode,l,a.key)).return=t,t=o):((l=Nc(a.type,a.key,a.props,null,t.mode,l)).ref=Qo(t,o,a),l.return=t,t=l)}return s(t);case P:e:{for(u=a.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===a.containerInfo&&o.stateNode.implementation===a.implementation){r(t,o.sibling),(o=i(o,a.children||[])).return=t,t=o;break e}r(t,o);break}n(t,o),o=o.sibling}(o=Mc(a,t.mode,l)).return=t,t=o}return s(t);case F:return e(t,o,(u=a._init)(a._payload),l)}if(ne(a))return g(t,o,a,l);if(N(a))return C(t,o,a,l);$o(t,a)}return"string"==typeof a&&""!==a||"number"==typeof a?(a=""+a,null!==o&&6===o.tag?(r(t,o.sibling),(o=i(o,a)).return=t,t=o):(r(t,o),(o=Wc(a,t.mode,l)).return=t,t=o),s(t)):r(t,o)}}var Ko=qo(!0),Yo=qo(!1),Zo={},ea=_i(Zo),na=_i(Zo),ra=_i(Zo);function ta(e){if(e===Zo)throw Error(o(174));return e}function ia(e,n){switch(Ei(ra,n),Ei(na,e),Ei(ea,Zo),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Di(ea),Ei(ea,n)}function oa(){Di(ea),Di(na),Di(ra)}function aa(e){ta(ra.current);var n=ta(ea.current),r=le(n,e.type);n!==r&&(Ei(na,e),Ei(ea,r))}function sa(e){na.current===e&&(Di(ea),Di(na))}var la=_i(0);function ca(e){for(var n=e;null!==n;){if(13===n.tag){var r=n.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ua=[];function da(){for(var e=0;e<ua.length;e++)ua[e]._workInProgressVersionPrimary=null;ua.length=0}var ma=y.ReactCurrentDispatcher,pa=y.ReactCurrentBatchConfig,fa=0,ga=null,Ca=null,ha=null,ba=!1,va=!1,ya=0,Sa=0;function Pa(){throw Error(o(321))}function Aa(e,n){if(null===n)return!1;for(var r=0;r<n.length&&r<e.length;r++)if(!st(e[r],n[r]))return!1;return!0}function _a(e,n,r,t,i,a){if(fa=a,ga=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ma.current=null===e||null===e.memoizedState?ss:ls,e=r(t,i),va){a=0;do{if(va=!1,ya=0,25<=a)throw Error(o(301));a+=1,ha=Ca=null,n.updateQueue=null,ma.current=cs,e=r(t,i)}while(va)}if(ma.current=as,n=null!==Ca&&null!==Ca.next,fa=0,ha=Ca=ga=null,ba=!1,n)throw Error(o(300));return e}function Da(){var e=0!==ya;return ya=0,e}function Ea(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ha?ga.memoizedState=ha=e:ha=ha.next=e,ha}function Oa(){if(null===Ca){var e=ga.alternate;e=null!==e?e.memoizedState:null}else e=Ca.next;var n=null===ha?ga.memoizedState:ha.next;if(null!==n)ha=n,Ca=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Ca=e).memoizedState,baseState:Ca.baseState,baseQueue:Ca.baseQueue,queue:Ca.queue,next:null},null===ha?ga.memoizedState=ha=e:ha=ha.next=e}return ha}function xa(e,n){return"function"==typeof n?n(e):n}function wa(e){var n=Oa(),r=n.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=e;var t=Ca,i=t.baseQueue,a=r.pending;if(null!==a){if(null!==i){var s=i.next;i.next=a.next,a.next=s}t.baseQueue=i=a,r.pending=null}if(null!==i){a=i.next,t=t.baseState;var l=s=null,c=null,u=a;do{var d=u.lane;if((fa&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),t=u.hasEagerState?u.eagerState:e(t,u.action);else{var m={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=m,s=t):c=c.next=m,ga.lanes|=d,jl|=d}u=u.next}while(null!==u&&u!==a);null===c?s=t:c.next=l,st(t,n.memoizedState)||(ys=!0),n.memoizedState=t,n.baseState=s,n.baseQueue=c,r.lastRenderedState=t}if(null!==(e=r.interleaved)){i=e;do{a=i.lane,ga.lanes|=a,jl|=a,i=i.next}while(i!==e)}else null===i&&(r.lanes=0);return[n.memoizedState,r.dispatch]}function Ia(e){var n=Oa(),r=n.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=e;var t=r.dispatch,i=r.pending,a=n.memoizedState;if(null!==i){r.pending=null;var s=i=i.next;do{a=e(a,s.action),s=s.next}while(s!==i);st(a,n.memoizedState)||(ys=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),r.lastRenderedState=a}return[a,t]}function Ua(){}function Fa(e,n){var r=ga,t=Oa(),i=n(),a=!st(t.memoizedState,i);if(a&&(t.memoizedState=i,ys=!0),t=t.queue,Ja(Na.bind(null,r,t,e),[e]),t.getSnapshot!==n||a||null!==ha&&1&ha.memoizedState.tag){if(r.flags|=2048,Ma(9,La.bind(null,r,t,i,n),void 0,null),null===Il)throw Error(o(349));0!=(30&fa)||Ra(r,n,i)}return i}function Ra(e,n,r){e.flags|=16384,e={getSnapshot:n,value:r},null===(n=ga.updateQueue)?(n={lastEffect:null,stores:null},ga.updateQueue=n,n.stores=[e]):null===(r=n.stores)?n.stores=[e]:r.push(e)}function La(e,n,r,t){n.value=r,n.getSnapshot=t,ka(n)&&ja(e)}function Na(e,n,r){return r((function(){ka(n)&&ja(e)}))}function ka(e){var n=e.getSnapshot;e=e.value;try{var r=n();return!st(e,r)}catch(e){return!0}}function ja(e){var n=Io(e,1);null!==n&&tc(n,e,1,-1)}function Wa(e){var n=Ea();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xa,lastRenderedState:e},n.queue=e,e=e.dispatch=rs.bind(null,ga,e),[n.memoizedState,e]}function Ma(e,n,r,t){return e={tag:e,create:n,destroy:r,deps:t,next:null},null===(n=ga.updateQueue)?(n={lastEffect:null,stores:null},ga.updateQueue=n,n.lastEffect=e.next=e):null===(r=n.lastEffect)?n.lastEffect=e.next=e:(t=r.next,r.next=e,e.next=t,n.lastEffect=e),e}function Ta(){return Oa().memoizedState}function Ba(e,n,r,t){var i=Ea();ga.flags|=e,i.memoizedState=Ma(1|n,r,void 0,void 0===t?null:t)}function za(e,n,r,t){var i=Oa();t=void 0===t?null:t;var o=void 0;if(null!==Ca){var a=Ca.memoizedState;if(o=a.destroy,null!==t&&Aa(t,a.deps))return void(i.memoizedState=Ma(n,r,o,t))}ga.flags|=e,i.memoizedState=Ma(1|n,r,o,t)}function Va(e,n){return Ba(8390656,8,e,n)}function Ja(e,n){return za(2048,8,e,n)}function Ha(e,n){return za(4,2,e,n)}function Ga(e,n){return za(4,4,e,n)}function Qa(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function $a(e,n,r){return r=null!=r?r.concat([e]):null,za(4,4,Qa.bind(null,n,e),r)}function Xa(){}function qa(e,n){var r=Oa();n=void 0===n?null:n;var t=r.memoizedState;return null!==t&&null!==n&&Aa(n,t[1])?t[0]:(r.memoizedState=[e,n],e)}function Ka(e,n){var r=Oa();n=void 0===n?null:n;var t=r.memoizedState;return null!==t&&null!==n&&Aa(n,t[1])?t[0]:(e=e(),r.memoizedState=[e,n],e)}function Ya(e,n,r){return 0==(21&fa)?(e.baseState&&(e.baseState=!1,ys=!0),e.memoizedState=r):(st(r,n)||(r=Cn(),ga.lanes|=r,jl|=r,e.baseState=!0),n)}function Za(e,n){var r=yn;yn=0!==r&&4>r?r:4,e(!0);var t=pa.transition;pa.transition={};try{e(!1),n()}finally{yn=r,pa.transition=t}}function es(){return Oa().memoizedState}function ns(e,n,r){var t=rc(e);r={lane:t,action:r,hasEagerState:!1,eagerState:null,next:null},ts(e)?is(n,r):null!==(r=wo(e,n,r,t))&&(tc(r,e,t,nc()),os(r,n,t))}function rs(e,n,r){var t=rc(e),i={lane:t,action:r,hasEagerState:!1,eagerState:null,next:null};if(ts(e))is(n,i);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var a=n.lastRenderedState,s=o(a,r);if(i.hasEagerState=!0,i.eagerState=s,st(s,a)){var l=n.interleaved;return null===l?(i.next=i,xo(n)):(i.next=l.next,l.next=i),void(n.interleaved=i)}}catch(e){}null!==(r=wo(e,n,i,t))&&(tc(r,e,t,i=nc()),os(r,n,t))}}function ts(e){var n=e.alternate;return e===ga||null!==n&&n===ga}function is(e,n){va=ba=!0;var r=e.pending;null===r?n.next=n:(n.next=r.next,r.next=n),e.pending=n}function os(e,n,r){if(0!=(4194240&r)){var t=n.lanes;r|=t&=e.pendingLanes,n.lanes=r,vn(e,r)}}var as={readContext:Eo,useCallback:Pa,useContext:Pa,useEffect:Pa,useImperativeHandle:Pa,useInsertionEffect:Pa,useLayoutEffect:Pa,useMemo:Pa,useReducer:Pa,useRef:Pa,useState:Pa,useDebugValue:Pa,useDeferredValue:Pa,useTransition:Pa,useMutableSource:Pa,useSyncExternalStore:Pa,useId:Pa,unstable_isNewReconciler:!1},ss={readContext:Eo,useCallback:function(e,n){return Ea().memoizedState=[e,void 0===n?null:n],e},useContext:Eo,useEffect:Va,useImperativeHandle:function(e,n,r){return r=null!=r?r.concat([e]):null,Ba(4194308,4,Qa.bind(null,n,e),r)},useLayoutEffect:function(e,n){return Ba(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ba(4,2,e,n)},useMemo:function(e,n){var r=Ea();return n=void 0===n?null:n,e=e(),r.memoizedState=[e,n],e},useReducer:function(e,n,r){var t=Ea();return n=void 0!==r?r(n):n,t.memoizedState=t.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},t.queue=e,e=e.dispatch=ns.bind(null,ga,e),[t.memoizedState,e]},useRef:function(e){return e={current:e},Ea().memoizedState=e},useState:Wa,useDebugValue:Xa,useDeferredValue:function(e){return Ea().memoizedState=e},useTransition:function(){var e=Wa(!1),n=e[0];return e=Za.bind(null,e[1]),Ea().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,r){var t=ga,i=Ea();if(io){if(void 0===r)throw Error(o(407));r=r()}else{if(r=n(),null===Il)throw Error(o(349));0!=(30&fa)||Ra(t,n,r)}i.memoizedState=r;var a={value:r,getSnapshot:n};return i.queue=a,Va(Na.bind(null,t,a,e),[e]),t.flags|=2048,Ma(9,La.bind(null,t,a,r,n),void 0,null),r},useId:function(){var e=Ea(),n=Il.identifierPrefix;if(io){var r=Ki;n=":"+n+"R"+(r=(qi&~(1<<32-sn(qi)-1)).toString(32)+r),0<(r=ya++)&&(n+="H"+r.toString(32)),n+=":"}else n=":"+n+"r"+(r=Sa++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ls={readContext:Eo,useCallback:qa,useContext:Eo,useEffect:Ja,useImperativeHandle:$a,useInsertionEffect:Ha,useLayoutEffect:Ga,useMemo:Ka,useReducer:wa,useRef:Ta,useState:function(){return wa(xa)},useDebugValue:Xa,useDeferredValue:function(e){return Ya(Oa(),Ca.memoizedState,e)},useTransition:function(){return[wa(xa)[0],Oa().memoizedState]},useMutableSource:Ua,useSyncExternalStore:Fa,useId:es,unstable_isNewReconciler:!1},cs={readContext:Eo,useCallback:qa,useContext:Eo,useEffect:Ja,useImperativeHandle:$a,useInsertionEffect:Ha,useLayoutEffect:Ga,useMemo:Ka,useReducer:Ia,useRef:Ta,useState:function(){return Ia(xa)},useDebugValue:Xa,useDeferredValue:function(e){var n=Oa();return null===Ca?n.memoizedState=e:Ya(n,Ca.memoizedState,e)},useTransition:function(){return[Ia(xa)[0],Oa().memoizedState]},useMutableSource:Ua,useSyncExternalStore:Fa,useId:es,unstable_isNewReconciler:!1};function us(e,n){try{var r="",t=n;do{r+=B(t),t=t.return}while(t);var i=r}catch(e){i="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:i,digest:null}}function ds(e,n,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=n?n:null}}function ms(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var ps="function"==typeof WeakMap?WeakMap:Map;function fs(e,n,r){(r=Lo(-1,r)).tag=3,r.payload={element:null};var t=n.value;return r.callback=function(){Hl||(Hl=!0,Gl=t),ms(0,n)},r}function gs(e,n,r){(r=Lo(-1,r)).tag=3;var t=e.type.getDerivedStateFromError;if("function"==typeof t){var i=n.value;r.payload=function(){return t(i)},r.callback=function(){ms(0,n)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(r.callback=function(){ms(0,n),"function"!=typeof t&&(null===Ql?Ql=new Set([this]):Ql.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),r}function Cs(e,n,r){var t=e.pingCache;if(null===t){t=e.pingCache=new ps;var i=new Set;t.set(n,i)}else void 0===(i=t.get(n))&&(i=new Set,t.set(n,i));i.has(r)||(i.add(r),e=Ec.bind(null,e,n,r),n.then(e,e))}function hs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function bs(e,n,r,t,i){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((n=Lo(-1,1)).tag=2,No(r,n,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var vs=y.ReactCurrentOwner,ys=!1;function Ss(e,n,r,t){n.child=null===e?Yo(n,null,r,t):Ko(n,e.child,r,t)}function Ps(e,n,r,t,i){r=r.render;var o=n.ref;return Do(n,i),t=_a(e,n,r,t,o,i),r=Da(),null===e||ys?(io&&r&&eo(n),n.flags|=1,Ss(e,n,t,i),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~i,Hs(e,n,i))}function As(e,n,r,t,i){if(null===e){var o=r.type;return"function"!=typeof o||Rc(o)||void 0!==o.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Nc(r.type,null,t,n,n.mode,i)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,_s(e,n,o,t,i))}if(o=e.child,0==(e.lanes&i)){var a=o.memoizedProps;if((r=null!==(r=r.compare)?r:lt)(a,t)&&e.ref===n.ref)return Hs(e,n,i)}return n.flags|=1,(e=Lc(o,t)).ref=n.ref,e.return=n,n.child=e}function _s(e,n,r,t,i){if(null!==e){var o=e.memoizedProps;if(lt(o,t)&&e.ref===n.ref){if(ys=!1,n.pendingProps=t=o,0==(e.lanes&i))return n.lanes=e.lanes,Hs(e,n,i);0!=(131072&e.flags)&&(ys=!0)}}return Os(e,n,r,t,i)}function Ds(e,n,r){var t=n.pendingProps,i=t.children,o=null!==e?e.memoizedState:null;if("hidden"===t.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ei(Ll,Rl),Rl|=r;else{if(0==(1073741824&r))return e=null!==o?o.baseLanes|r:r,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Ei(Ll,Rl),Rl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},t=null!==o?o.baseLanes:r,Ei(Ll,Rl),Rl|=t}else null!==o?(t=o.baseLanes|r,n.memoizedState=null):t=r,Ei(Ll,Rl),Rl|=t;return Ss(e,n,i,r),n.child}function Es(e,n){var r=n.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(n.flags|=512,n.flags|=2097152)}function Os(e,n,r,t,i){var o=Fi(r)?Ii:xi.current;return o=Ui(n,o),Do(n,i),r=_a(e,n,r,t,o,i),t=Da(),null===e||ys?(io&&t&&eo(n),n.flags|=1,Ss(e,n,r,i),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~i,Hs(e,n,i))}function xs(e,n,r,t,i){if(Fi(r)){var o=!0;ki(n)}else o=!1;if(Do(n,i),null===n.stateNode)Js(e,n),Jo(n,r,t),Go(n,r,t,i),t=!0;else if(null===e){var a=n.stateNode,s=n.memoizedProps;a.props=s;var l=a.context,c=r.contextType;c="object"==typeof c&&null!==c?Eo(c):Ui(n,c=Fi(r)?Ii:xi.current);var u=r.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==t||l!==c)&&Ho(n,a,t,c),Uo=!1;var m=n.memoizedState;a.state=m,Wo(n,t,a,i),l=n.memoizedState,s!==t||m!==l||wi.current||Uo?("function"==typeof u&&(Bo(n,r,u,t),l=n.memoizedState),(s=Uo||Vo(n,r,s,t,m,l,c))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.flags|=4194308)):("function"==typeof a.componentDidMount&&(n.flags|=4194308),n.memoizedProps=t,n.memoizedState=l),a.props=t,a.state=l,a.context=c,t=s):("function"==typeof a.componentDidMount&&(n.flags|=4194308),t=!1)}else{a=n.stateNode,Ro(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:ho(n.type,s),a.props=c,d=n.pendingProps,m=a.context,l="object"==typeof(l=r.contextType)&&null!==l?Eo(l):Ui(n,l=Fi(r)?Ii:xi.current);var p=r.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==d||m!==l)&&Ho(n,a,t,l),Uo=!1,m=n.memoizedState,a.state=m,Wo(n,t,a,i);var f=n.memoizedState;s!==d||m!==f||wi.current||Uo?("function"==typeof p&&(Bo(n,r,p,t),f=n.memoizedState),(c=Uo||Vo(n,r,c,t,m,f,l)||!1)?(u||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(t,f,l),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(t,f,l)),"function"==typeof a.componentDidUpdate&&(n.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=1024),n.memoizedProps=t,n.memoizedState=f),a.props=t,a.state=f,a.context=l,t=c):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&m===e.memoizedState||(n.flags|=1024),t=!1)}return ws(e,n,r,t,o,i)}function ws(e,n,r,t,i,o){Es(e,n);var a=0!=(128&n.flags);if(!t&&!a)return i&&ji(n,r,!1),Hs(e,n,o);t=n.stateNode,vs.current=n;var s=a&&"function"!=typeof r.getDerivedStateFromError?null:t.render();return n.flags|=1,null!==e&&a?(n.child=Ko(n,e.child,null,o),n.child=Ko(n,null,s,o)):Ss(e,n,s,o),n.memoizedState=t.state,i&&ji(n,r,!0),n.child}function Is(e){var n=e.stateNode;n.pendingContext?Li(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Li(0,n.context,!1),ia(e,n.containerInfo)}function Us(e,n,r,t,i){return fo(),go(i),n.flags|=256,Ss(e,n,r,t),n.child}var Fs,Rs,Ls,Ns,ks={dehydrated:null,treeContext:null,retryLane:0};function js(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ws(e,n,r){var t,i=n.pendingProps,a=la.current,s=!1,l=0!=(128&n.flags);if((t=l)||(t=(null===e||null!==e.memoizedState)&&0!=(2&a)),t?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),Ei(la,1&a),null===e)return co(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(l=i.children,e=i.fallback,s?(i=n.mode,s=n.child,l={mode:"hidden",children:l},0==(1&i)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=jc(l,i,0,null),e=kc(e,i,r,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=js(r),n.memoizedState=ks,e):Ms(n,l));if(null!==(a=e.memoizedState)&&null!==(t=a.dehydrated))return function(e,n,r,t,i,a,s){if(r)return 256&n.flags?(n.flags&=-257,Ts(e,n,s,t=ds(Error(o(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(a=t.fallback,i=n.mode,t=jc({mode:"visible",children:t.children},i,0,null),(a=kc(a,i,s,null)).flags|=2,t.return=n,a.return=n,t.sibling=a,n.child=t,0!=(1&n.mode)&&Ko(n,e.child,null,s),n.child.memoizedState=js(s),n.memoizedState=ks,a);if(0==(1&n.mode))return Ts(e,n,s,null);if("$!"===i.data){if(t=i.nextSibling&&i.nextSibling.dataset)var l=t.dgst;return t=l,Ts(e,n,s,t=ds(a=Error(o(419)),t,void 0))}if(l=0!=(s&e.childLanes),ys||l){if(null!==(t=Il)){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}0!==(i=0!=(i&(t.suspendedLanes|s))?0:i)&&i!==a.retryLane&&(a.retryLane=i,Io(e,i),tc(t,e,i,-1))}return Cc(),Ts(e,n,s,t=ds(Error(o(421))))}return"$?"===i.data?(n.flags|=128,n.child=e.child,n=xc.bind(null,e),i._reactRetry=n,null):(e=a.treeContext,to=ci(i.nextSibling),ro=n,io=!0,oo=null,null!==e&&(Qi[$i++]=qi,Qi[$i++]=Ki,Qi[$i++]=Xi,qi=e.id,Ki=e.overflow,Xi=n),(n=Ms(n,t.children)).flags|=4096,n)}(e,n,l,i,t,a,r);if(s){s=i.fallback,l=n.mode,t=(a=e.child).sibling;var c={mode:"hidden",children:i.children};return 0==(1&l)&&n.child!==a?((i=n.child).childLanes=0,i.pendingProps=c,n.deletions=null):(i=Lc(a,c)).subtreeFlags=14680064&a.subtreeFlags,null!==t?s=Lc(t,s):(s=kc(s,l,r,null)).flags|=2,s.return=n,i.return=n,i.sibling=s,n.child=i,i=s,s=n.child,l=null===(l=e.child.memoizedState)?js(r):{baseLanes:l.baseLanes|r,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~r,n.memoizedState=ks,i}return e=(s=e.child).sibling,i=Lc(s,{mode:"visible",children:i.children}),0==(1&n.mode)&&(i.lanes=r),i.return=n,i.sibling=null,null!==e&&(null===(r=n.deletions)?(n.deletions=[e],n.flags|=16):r.push(e)),n.child=i,n.memoizedState=null,i}function Ms(e,n){return(n=jc({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ts(e,n,r,t){return null!==t&&go(t),Ko(n,e.child,null,r),(e=Ms(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Bs(e,n,r){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),_o(e.return,n,r)}function zs(e,n,r,t,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:t,tail:r,tailMode:i}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=t,o.tail=r,o.tailMode=i)}function Vs(e,n,r){var t=n.pendingProps,i=t.revealOrder,o=t.tail;if(Ss(e,n,t.children,r),0!=(2&(t=la.current)))t=1&t|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bs(e,r,n);else if(19===e.tag)Bs(e,r,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}t&=1}if(Ei(la,t),0==(1&n.mode))n.memoizedState=null;else switch(i){case"forwards":for(r=n.child,i=null;null!==r;)null!==(e=r.alternate)&&null===ca(e)&&(i=r),r=r.sibling;null===(r=i)?(i=n.child,n.child=null):(i=r.sibling,r.sibling=null),zs(n,!1,i,r,o);break;case"backwards":for(r=null,i=n.child,n.child=null;null!==i;){if(null!==(e=i.alternate)&&null===ca(e)){n.child=i;break}e=i.sibling,i.sibling=r,r=i,i=e}zs(n,!0,r,null,o);break;case"together":zs(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Js(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Hs(e,n,r){if(null!==e&&(n.dependencies=e.dependencies),jl|=n.lanes,0==(r&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(r=Lc(e=n.child,e.pendingProps),n.child=r,r.return=n;null!==e.sibling;)e=e.sibling,(r=r.sibling=Lc(e,e.pendingProps)).return=n;r.sibling=null}return n.child}function Gs(e,n){if(!io)switch(e.tailMode){case"hidden":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var t=null;null!==r;)null!==r.alternate&&(t=r),r=r.sibling;null===t?n||null===e.tail?e.tail=null:e.tail.sibling=null:t.sibling=null}}function Qs(e){var n=null!==e.alternate&&e.alternate.child===e.child,r=0,t=0;if(n)for(var i=e.child;null!==i;)r|=i.lanes|i.childLanes,t|=14680064&i.subtreeFlags,t|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)r|=i.lanes|i.childLanes,t|=i.subtreeFlags,t|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=t,e.childLanes=r,n}function $s(e,n,r){var t=n.pendingProps;switch(no(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qs(n),null;case 1:case 17:return Fi(n.type)&&Ri(),Qs(n),null;case 3:return t=n.stateNode,oa(),Di(wi),Di(xi),da(),t.pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==e&&null!==e.child||(mo(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==oo&&(sc(oo),oo=null))),Rs(e,n),Qs(n),null;case 5:sa(n);var i=ta(ra.current);if(r=n.type,null!==e&&null!=n.stateNode)Ls(e,n,r,t,i),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!t){if(null===n.stateNode)throw Error(o(166));return Qs(n),null}if(e=ta(ea.current),mo(n)){t=n.stateNode,r=n.type;var a=n.memoizedProps;switch(t[mi]=n,t[pi]=a,e=0!=(1&n.mode),r){case"dialog":Mt("cancel",t),Mt("close",t);break;case"iframe":case"object":case"embed":Mt("load",t);break;case"video":case"audio":for(i=0;i<Nt.length;i++)Mt(Nt[i],t);break;case"source":Mt("error",t);break;case"img":case"image":case"link":Mt("error",t),Mt("load",t);break;case"details":Mt("toggle",t);break;case"input":q(t,a),Mt("invalid",t);break;case"select":t._wrapperState={wasMultiple:!!a.multiple},Mt("invalid",t);break;case"textarea":ie(t,a),Mt("invalid",t)}for(var l in be(r,a),i=null,a)if(a.hasOwnProperty(l)){var c=a[l];"children"===l?"string"==typeof c?t.textContent!==c&&(!0!==a.suppressHydrationWarning&&Yt(t.textContent,c,e),i=["children",c]):"number"==typeof c&&t.textContent!==""+c&&(!0!==a.suppressHydrationWarning&&Yt(t.textContent,c,e),i=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Mt("scroll",t)}switch(r){case"input":G(t),Z(t,a,!0);break;case"textarea":G(t),ae(t);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(t.onclick=Zt)}t=i,n.updateQueue=t,null!==t&&(n.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof t.is?e=l.createElement(r,{is:t.is}):(e=l.createElement(r),"select"===r&&(l=e,t.multiple?l.multiple=!0:t.size&&(l.size=t.size))):e=l.createElementNS(e,r),e[mi]=n,e[pi]=t,Fs(e,n,!1,!1),n.stateNode=e;e:{switch(l=ve(r,t),r){case"dialog":Mt("cancel",e),Mt("close",e),i=t;break;case"iframe":case"object":case"embed":Mt("load",e),i=t;break;case"video":case"audio":for(i=0;i<Nt.length;i++)Mt(Nt[i],e);i=t;break;case"source":Mt("error",e),i=t;break;case"img":case"image":case"link":Mt("error",e),Mt("load",e),i=t;break;case"details":Mt("toggle",e),i=t;break;case"input":q(e,t),i=X(e,t),Mt("invalid",e);break;case"option":default:i=t;break;case"select":e._wrapperState={wasMultiple:!!t.multiple},i=j({},t,{value:void 0}),Mt("invalid",e);break;case"textarea":ie(e,t),i=te(e,t),Mt("invalid",e)}for(a in be(r,i),c=i)if(c.hasOwnProperty(a)){var u=c[a];"style"===a?Ce(e,u):"dangerouslySetInnerHTML"===a?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===a?"string"==typeof u?("textarea"!==r||""!==u)&&me(e,u):"number"==typeof u&&me(e,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(s.hasOwnProperty(a)?null!=u&&"onScroll"===a&&Mt("scroll",e):null!=u&&v(e,a,u,l))}switch(r){case"input":G(e),Z(e,t,!1);break;case"textarea":G(e),ae(e);break;case"option":null!=t.value&&e.setAttribute("value",""+J(t.value));break;case"select":e.multiple=!!t.multiple,null!=(a=t.value)?re(e,!!t.multiple,a,!1):null!=t.defaultValue&&re(e,!!t.multiple,t.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Zt)}switch(r){case"button":case"input":case"select":case"textarea":t=!!t.autoFocus;break e;case"img":t=!0;break e;default:t=!1}}t&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Qs(n),null;case 6:if(e&&null!=n.stateNode)Ns(e,n,e.memoizedProps,t);else{if("string"!=typeof t&&null===n.stateNode)throw Error(o(166));if(r=ta(ra.current),ta(ea.current),mo(n)){if(t=n.stateNode,r=n.memoizedProps,t[mi]=n,(a=t.nodeValue!==r)&&null!==(e=ro))switch(e.tag){case 3:Yt(t.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Yt(t.nodeValue,r,0!=(1&e.mode))}a&&(n.flags|=4)}else(t=(9===r.nodeType?r:r.ownerDocument).createTextNode(t))[mi]=n,n.stateNode=t}return Qs(n),null;case 13:if(Di(la),t=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(io&&null!==to&&0!=(1&n.mode)&&0==(128&n.flags))po(),fo(),n.flags|=98560,a=!1;else if(a=mo(n),null!==t&&null!==t.dehydrated){if(null===e){if(!a)throw Error(o(318));if(!(a=null!==(a=n.memoizedState)?a.dehydrated:null))throw Error(o(317));a[mi]=n}else fo(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Qs(n),a=!1}else null!==oo&&(sc(oo),oo=null),a=!0;if(!a)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=r,n):((t=null!==t)!=(null!==e&&null!==e.memoizedState)&&t&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&la.current)?0===Nl&&(Nl=3):Cc())),null!==n.updateQueue&&(n.flags|=4),Qs(n),null);case 4:return oa(),Rs(e,n),null===e&&zt(n.stateNode.containerInfo),Qs(n),null;case 10:return Ao(n.type._context),Qs(n),null;case 19:if(Di(la),null===(a=n.memoizedState))return Qs(n),null;if(t=0!=(128&n.flags),null===(l=a.rendering))if(t)Gs(a,!1);else{if(0!==Nl||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(l=ca(e))){for(n.flags|=128,Gs(a,!1),null!==(t=l.updateQueue)&&(n.updateQueue=t,n.flags|=4),n.subtreeFlags=0,t=r,r=n.child;null!==r;)e=t,(a=r).flags&=14680066,null===(l=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return Ei(la,1&la.current|2),n.child}e=e.sibling}null!==a.tail&&Ke()>Vl&&(n.flags|=128,t=!0,Gs(a,!1),n.lanes=4194304)}else{if(!t)if(null!==(e=ca(l))){if(n.flags|=128,t=!0,null!==(r=e.updateQueue)&&(n.updateQueue=r,n.flags|=4),Gs(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!io)return Qs(n),null}else 2*Ke()-a.renderingStartTime>Vl&&1073741824!==r&&(n.flags|=128,t=!0,Gs(a,!1),n.lanes=4194304);a.isBackwards?(l.sibling=n.child,n.child=l):(null!==(r=a.last)?r.sibling=l:n.child=l,a.last=l)}return null!==a.tail?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.renderingStartTime=Ke(),n.sibling=null,r=la.current,Ei(la,t?1&r|2:1&r),n):(Qs(n),null);case 22:case 23:return mc(),t=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==t&&(n.flags|=8192),t&&0!=(1&n.mode)?0!=(1073741824&Rl)&&(Qs(n),6&n.subtreeFlags&&(n.flags|=8192)):Qs(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}function Xs(e,n){switch(no(n),n.tag){case 1:return Fi(n.type)&&Ri(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return oa(),Di(wi),Di(xi),da(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return sa(n),null;case 13:if(Di(la),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));fo()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Di(la),null;case 4:return oa(),null;case 10:return Ao(n.type._context),null;case 22:case 23:return mc(),null;default:return null}}Fs=function(e,n){for(var r=n.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===n)break;for(;null===r.sibling;){if(null===r.return||r.return===n)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Rs=function(){},Ls=function(e,n,r,t){var i=e.memoizedProps;if(i!==t){e=n.stateNode,ta(ea.current);var o,a=null;switch(r){case"input":i=X(e,i),t=X(e,t),a=[];break;case"select":i=j({},i,{value:void 0}),t=j({},t,{value:void 0}),a=[];break;case"textarea":i=te(e,i),t=te(e,t),a=[];break;default:"function"!=typeof i.onClick&&"function"==typeof t.onClick&&(e.onclick=Zt)}for(u in be(r,t),r=null,i)if(!t.hasOwnProperty(u)&&i.hasOwnProperty(u)&&null!=i[u])if("style"===u){var l=i[u];for(o in l)l.hasOwnProperty(o)&&(r||(r={}),r[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?a||(a=[]):(a=a||[]).push(u,null));for(u in t){var c=t[u];if(l=null!=i?i[u]:void 0,t.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(r||(r={}),r[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(r||(r={}),r[o]=c[o])}else r||(a||(a=[]),a.push(u,r)),r=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(a=a||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(a=a||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Mt("scroll",e),a||l===c||(a=[])):(a=a||[]).push(u,c))}r&&(a=a||[]).push("style",r);var u=a;(n.updateQueue=u)&&(n.flags|=4)}},Ns=function(e,n,r,t){r!==t&&(n.flags|=4)};var qs=!1,Ks=!1,Ys="function"==typeof WeakSet?WeakSet:Set,Zs=null;function el(e,n){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){Dc(e,n,r)}else r.current=null}function nl(e,n,r){try{r()}catch(r){Dc(e,n,r)}}var rl=!1;function tl(e,n,r){var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var i=t=t.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,void 0!==o&&nl(n,r,o)}i=i.next}while(i!==t)}}function il(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)===e){var t=r.create;r.destroy=t()}r=r.next}while(r!==n)}}function ol(e){var n=e.ref;if(null!==n){var r=e.stateNode;e.tag,e=r,"function"==typeof n?n(e):n.current=e}}function al(e){var n=e.alternate;null!==n&&(e.alternate=null,al(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[mi],delete n[pi],delete n[gi],delete n[Ci],delete n[hi]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cl(e,n,r){var t=e.tag;if(5===t||6===t)e=e.stateNode,n?8===r.nodeType?r.parentNode.insertBefore(e,n):r.insertBefore(e,n):(8===r.nodeType?(n=r.parentNode).insertBefore(e,r):(n=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==n.onclick||(n.onclick=Zt));else if(4!==t&&null!==(e=e.child))for(cl(e,n,r),e=e.sibling;null!==e;)cl(e,n,r),e=e.sibling}function ul(e,n,r){var t=e.tag;if(5===t||6===t)e=e.stateNode,n?r.insertBefore(e,n):r.appendChild(e);else if(4!==t&&null!==(e=e.child))for(ul(e,n,r),e=e.sibling;null!==e;)ul(e,n,r),e=e.sibling}var dl=null,ml=!1;function pl(e,n,r){for(r=r.child;null!==r;)fl(e,n,r),r=r.sibling}function fl(e,n,r){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,r)}catch(e){}switch(r.tag){case 5:Ks||el(r,n);case 6:var t=dl,i=ml;dl=null,pl(e,n,r),ml=i,null!==(dl=t)&&(ml?(e=dl,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):dl.removeChild(r.stateNode));break;case 18:null!==dl&&(ml?(e=dl,r=r.stateNode,8===e.nodeType?li(e.parentNode,r):1===e.nodeType&&li(e,r),Vn(e)):li(dl,r.stateNode));break;case 4:t=dl,i=ml,dl=r.stateNode.containerInfo,ml=!0,pl(e,n,r),dl=t,ml=i;break;case 0:case 11:case 14:case 15:if(!Ks&&null!==(t=r.updateQueue)&&null!==(t=t.lastEffect)){i=t=t.next;do{var o=i,a=o.destroy;o=o.tag,void 0!==a&&(0!=(2&o)||0!=(4&o))&&nl(r,n,a),i=i.next}while(i!==t)}pl(e,n,r);break;case 1:if(!Ks&&(el(r,n),"function"==typeof(t=r.stateNode).componentWillUnmount))try{t.props=r.memoizedProps,t.state=r.memoizedState,t.componentWillUnmount()}catch(e){Dc(r,n,e)}pl(e,n,r);break;case 21:pl(e,n,r);break;case 22:1&r.mode?(Ks=(t=Ks)||null!==r.memoizedState,pl(e,n,r),Ks=t):pl(e,n,r);break;default:pl(e,n,r)}}function gl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Ys),n.forEach((function(n){var t=wc.bind(null,e,n);r.has(n)||(r.add(n),n.then(t,t))}))}}function Cl(e,n){var r=n.deletions;if(null!==r)for(var t=0;t<r.length;t++){var i=r[t];try{var a=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:dl=l.stateNode,ml=!1;break e;case 3:case 4:dl=l.stateNode.containerInfo,ml=!0;break e}l=l.return}if(null===dl)throw Error(o(160));fl(a,s,i),dl=null,ml=!1;var c=i.alternate;null!==c&&(c.return=null),i.return=null}catch(e){Dc(i,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)hl(n,e),n=n.sibling}function hl(e,n){var r=e.alternate,t=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Cl(n,e),bl(e),4&t){try{tl(3,e,e.return),il(3,e)}catch(n){Dc(e,e.return,n)}try{tl(5,e,e.return)}catch(n){Dc(e,e.return,n)}}break;case 1:Cl(n,e),bl(e),512&t&&null!==r&&el(r,r.return);break;case 5:if(Cl(n,e),bl(e),512&t&&null!==r&&el(r,r.return),32&e.flags){var i=e.stateNode;try{me(i,"")}catch(n){Dc(e,e.return,n)}}if(4&t&&null!=(i=e.stateNode)){var a=e.memoizedProps,s=null!==r?r.memoizedProps:a,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===a.type&&null!=a.name&&K(i,a),ve(l,s);var u=ve(l,a);for(s=0;s<c.length;s+=2){var d=c[s],m=c[s+1];"style"===d?Ce(i,m):"dangerouslySetInnerHTML"===d?de(i,m):"children"===d?me(i,m):v(i,d,m,u)}switch(l){case"input":Y(i,a);break;case"textarea":oe(i,a);break;case"select":var p=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!a.multiple;var f=a.value;null!=f?re(i,!!a.multiple,f,!1):p!==!!a.multiple&&(null!=a.defaultValue?re(i,!!a.multiple,a.defaultValue,!0):re(i,!!a.multiple,a.multiple?[]:"",!1))}i[pi]=a}catch(n){Dc(e,e.return,n)}}break;case 6:if(Cl(n,e),bl(e),4&t){if(null===e.stateNode)throw Error(o(162));i=e.stateNode,a=e.memoizedProps;try{i.nodeValue=a}catch(n){Dc(e,e.return,n)}}break;case 3:if(Cl(n,e),bl(e),4&t&&null!==r&&r.memoizedState.isDehydrated)try{Vn(n.containerInfo)}catch(n){Dc(e,e.return,n)}break;case 4:default:Cl(n,e),bl(e);break;case 13:Cl(n,e),bl(e),8192&(i=e.child).flags&&(a=null!==i.memoizedState,i.stateNode.isHidden=a,!a||null!==i.alternate&&null!==i.alternate.memoizedState||(zl=Ke())),4&t&&gl(e);break;case 22:if(d=null!==r&&null!==r.memoizedState,1&e.mode?(Ks=(u=Ks)||d,Cl(n,e),Ks=u):Cl(n,e),bl(e),8192&t){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!=(1&e.mode))for(Zs=e,d=e.child;null!==d;){for(m=Zs=d;null!==Zs;){switch(f=(p=Zs).child,p.tag){case 0:case 11:case 14:case 15:tl(4,p,p.return);break;case 1:el(p,p.return);var g=p.stateNode;if("function"==typeof g.componentWillUnmount){t=p,r=p.return;try{n=t,g.props=n.memoizedProps,g.state=n.memoizedState,g.componentWillUnmount()}catch(e){Dc(t,r,e)}}break;case 5:el(p,p.return);break;case 22:if(null!==p.memoizedState){Pl(m);continue}}null!==f?(f.return=p,Zs=f):Pl(m)}d=d.sibling}e:for(d=null,m=e;;){if(5===m.tag){if(null===d){d=m;try{i=m.stateNode,u?"function"==typeof(a=i.style).setProperty?a.setProperty("display","none","important"):a.display="none":(l=m.stateNode,s=null!=(c=m.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=ge("display",s))}catch(n){Dc(e,e.return,n)}}}else if(6===m.tag){if(null===d)try{m.stateNode.nodeValue=u?"":m.memoizedProps}catch(n){Dc(e,e.return,n)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===e)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===e)break e;for(;null===m.sibling;){if(null===m.return||m.return===e)break e;d===m&&(d=null),m=m.return}d===m&&(d=null),m.sibling.return=m.return,m=m.sibling}}break;case 19:Cl(n,e),bl(e),4&t&&gl(e);case 21:}}function bl(e){var n=e.flags;if(2&n){try{e:{for(var r=e.return;null!==r;){if(sl(r)){var t=r;break e}r=r.return}throw Error(o(160))}switch(t.tag){case 5:var i=t.stateNode;32&t.flags&&(me(i,""),t.flags&=-33),ul(e,ll(e),i);break;case 3:case 4:var a=t.stateNode.containerInfo;cl(e,ll(e),a);break;default:throw Error(o(161))}}catch(n){Dc(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,r){Zs=e,yl(e,n,r)}function yl(e,n,r){for(var t=0!=(1&e.mode);null!==Zs;){var i=Zs,o=i.child;if(22===i.tag&&t){var a=null!==i.memoizedState||qs;if(!a){var s=i.alternate,l=null!==s&&null!==s.memoizedState||Ks;s=qs;var c=Ks;if(qs=a,(Ks=l)&&!c)for(Zs=i;null!==Zs;)l=(a=Zs).child,22===a.tag&&null!==a.memoizedState?Al(i):null!==l?(l.return=a,Zs=l):Al(i);for(;null!==o;)Zs=o,yl(o,n,r),o=o.sibling;Zs=i,qs=s,Ks=c}Sl(e)}else 0!=(8772&i.subtreeFlags)&&null!==o?(o.return=i,Zs=o):Sl(e)}}function Sl(e){for(;null!==Zs;){var n=Zs;if(0!=(8772&n.flags)){var r=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Ks||il(5,n);break;case 1:var t=n.stateNode;if(4&n.flags&&!Ks)if(null===r)t.componentDidMount();else{var i=n.elementType===n.type?r.memoizedProps:ho(n.type,r.memoizedProps);t.componentDidUpdate(i,r.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}var a=n.updateQueue;null!==a&&Mo(n,a,t);break;case 3:var s=n.updateQueue;if(null!==s){if(r=null,null!==n.child)switch(n.child.tag){case 5:case 1:r=n.child.stateNode}Mo(n,s,r)}break;case 5:var l=n.stateNode;if(null===r&&4&n.flags){r=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var m=d.dehydrated;null!==m&&Vn(m)}}}break;default:throw Error(o(163))}Ks||512&n.flags&&ol(n)}catch(e){Dc(n,n.return,e)}}if(n===e){Zs=null;break}if(null!==(r=n.sibling)){r.return=n.return,Zs=r;break}Zs=n.return}}function Pl(e){for(;null!==Zs;){var n=Zs;if(n===e){Zs=null;break}var r=n.sibling;if(null!==r){r.return=n.return,Zs=r;break}Zs=n.return}}function Al(e){for(;null!==Zs;){var n=Zs;try{switch(n.tag){case 0:case 11:case 15:var r=n.return;try{il(4,n)}catch(e){Dc(n,r,e)}break;case 1:var t=n.stateNode;if("function"==typeof t.componentDidMount){var i=n.return;try{t.componentDidMount()}catch(e){Dc(n,i,e)}}var o=n.return;try{ol(n)}catch(e){Dc(n,o,e)}break;case 5:var a=n.return;try{ol(n)}catch(e){Dc(n,a,e)}}}catch(e){Dc(n,n.return,e)}if(n===e){Zs=null;break}var s=n.sibling;if(null!==s){s.return=n.return,Zs=s;break}Zs=n.return}}var _l,Dl=Math.ceil,El=y.ReactCurrentDispatcher,Ol=y.ReactCurrentOwner,xl=y.ReactCurrentBatchConfig,wl=0,Il=null,Ul=null,Fl=0,Rl=0,Ll=_i(0),Nl=0,kl=null,jl=0,Wl=0,Ml=0,Tl=null,Bl=null,zl=0,Vl=1/0,Jl=null,Hl=!1,Gl=null,Ql=null,$l=!1,Xl=null,ql=0,Kl=0,Yl=null,Zl=-1,ec=0;function nc(){return 0!=(6&wl)?Ke():-1!==Zl?Zl:Zl=Ke()}function rc(e){return 0==(1&e.mode)?1:0!=(2&wl)&&0!==Fl?Fl&-Fl:null!==Co.transition?(0===ec&&(ec=Cn()),ec):0!==(e=yn)?e:e=void 0===(e=window.event)?16:Kn(e.type)}function tc(e,n,r,t){if(50<Kl)throw Kl=0,Yl=null,Error(o(185));bn(e,r,t),0!=(2&wl)&&e===Il||(e===Il&&(0==(2&wl)&&(Wl|=r),4===Nl&&lc(e,Fl)),ic(e,t),1===r&&0===wl&&0==(1&n.mode)&&(Vl=Ke()+500,Mi&&zi()))}function ic(e,n){var r=e.callbackNode;!function(e,n){for(var r=e.suspendedLanes,t=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var a=31-sn(o),s=1<<a,l=i[a];-1===l?0!=(s&r)&&0==(s&t)||(i[a]=fn(s,n)):l<=n&&(e.expiredLanes|=s),o&=~s}}(e,n);var t=pn(e,e===Il?Fl:0);if(0===t)null!==r&&$e(r),e.callbackNode=null,e.callbackPriority=0;else if(n=t&-t,e.callbackPriority!==n){if(null!=r&&$e(r),1===n)0===e.tag?function(e){Mi=!0,Bi(e)}(cc.bind(null,e)):Bi(cc.bind(null,e)),ai((function(){0==(6&wl)&&zi()})),r=null;else{switch(Sn(t)){case 1:r=Ze;break;case 4:r=en;break;case 16:default:r=nn;break;case 536870912:r=tn}r=Ic(r,oc.bind(null,e))}e.callbackPriority=n,e.callbackNode=r}}function oc(e,n){if(Zl=-1,ec=0,0!=(6&wl))throw Error(o(327));var r=e.callbackNode;if(Ac()&&e.callbackNode!==r)return null;var t=pn(e,e===Il?Fl:0);if(0===t)return null;if(0!=(30&t)||0!=(t&e.expiredLanes)||n)n=hc(e,t);else{n=t;var i=wl;wl|=2;var a=gc();for(Il===e&&Fl===n||(Jl=null,Vl=Ke()+500,pc(e,n));;)try{vc();break}catch(n){fc(e,n)}Po(),El.current=a,wl=i,null!==Ul?n=0:(Il=null,Fl=0,n=Nl)}if(0!==n){if(2===n&&0!==(i=gn(e))&&(t=i,n=ac(e,i)),1===n)throw r=kl,pc(e,0),lc(e,t),ic(e,Ke()),r;if(6===n)lc(e,t);else{if(i=e.current.alternate,0==(30&t)&&!function(e){for(var n=e;;){if(16384&n.flags){var r=n.updateQueue;if(null!==r&&null!==(r=r.stores))for(var t=0;t<r.length;t++){var i=r[t],o=i.getSnapshot;i=i.value;try{if(!st(o(),i))return!1}catch(e){return!1}}}if(r=n.child,16384&n.subtreeFlags&&null!==r)r.return=n,n=r;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(i)&&(2===(n=hc(e,t))&&0!==(a=gn(e))&&(t=a,n=ac(e,a)),1===n))throw r=kl,pc(e,0),lc(e,t),ic(e,Ke()),r;switch(e.finishedWork=i,e.finishedLanes=t,n){case 0:case 1:throw Error(o(345));case 2:case 5:Pc(e,Bl,Jl);break;case 3:if(lc(e,t),(130023424&t)===t&&10<(n=zl+500-Ke())){if(0!==pn(e,0))break;if(((i=e.suspendedLanes)&t)!==t){nc(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=ti(Pc.bind(null,e,Bl,Jl),n);break}Pc(e,Bl,Jl);break;case 4:if(lc(e,t),(4194240&t)===t)break;for(n=e.eventTimes,i=-1;0<t;){var s=31-sn(t);a=1<<s,(s=n[s])>i&&(i=s),t&=~a}if(t=i,10<(t=(120>(t=Ke()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*Dl(t/1960))-t)){e.timeoutHandle=ti(Pc.bind(null,e,Bl,Jl),t);break}Pc(e,Bl,Jl);break;default:throw Error(o(329))}}}return ic(e,Ke()),e.callbackNode===r?oc.bind(null,e):null}function ac(e,n){var r=Tl;return e.current.memoizedState.isDehydrated&&(pc(e,n).flags|=256),2!==(e=hc(e,n))&&(n=Bl,Bl=r,null!==n&&sc(n)),e}function sc(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function lc(e,n){for(n&=~Ml,n&=~Wl,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var r=31-sn(n),t=1<<r;e[r]=-1,n&=~t}}function cc(e){if(0!=(6&wl))throw Error(o(327));Ac();var n=pn(e,0);if(0==(1&n))return ic(e,Ke()),null;var r=hc(e,n);if(0!==e.tag&&2===r){var t=gn(e);0!==t&&(n=t,r=ac(e,t))}if(1===r)throw r=kl,pc(e,0),lc(e,n),ic(e,Ke()),r;if(6===r)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,Pc(e,Bl,Jl),ic(e,Ke()),null}function uc(e,n){var r=wl;wl|=1;try{return e(n)}finally{0===(wl=r)&&(Vl=Ke()+500,Mi&&zi())}}function dc(e){null!==Xl&&0===Xl.tag&&0==(6&wl)&&Ac();var n=wl;wl|=1;var r=xl.transition,t=yn;try{if(xl.transition=null,yn=1,e)return e()}finally{yn=t,xl.transition=r,0==(6&(wl=n))&&zi()}}function mc(){Rl=Ll.current,Di(Ll)}function pc(e,n){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,ii(r)),null!==Ul)for(r=Ul.return;null!==r;){var t=r;switch(no(t),t.tag){case 1:null!=(t=t.type.childContextTypes)&&Ri();break;case 3:oa(),Di(wi),Di(xi),da();break;case 5:sa(t);break;case 4:oa();break;case 13:case 19:Di(la);break;case 10:Ao(t.type._context);break;case 22:case 23:mc()}r=r.return}if(Il=e,Ul=e=Lc(e.current,null),Fl=Rl=n,Nl=0,kl=null,Ml=Wl=jl=0,Bl=Tl=null,null!==Oo){for(n=0;n<Oo.length;n++)if(null!==(t=(r=Oo[n]).interleaved)){r.interleaved=null;var i=t.next,o=r.pending;if(null!==o){var a=o.next;o.next=i,t.next=a}r.pending=t}Oo=null}return e}function fc(e,n){for(;;){var r=Ul;try{if(Po(),ma.current=as,ba){for(var t=ga.memoizedState;null!==t;){var i=t.queue;null!==i&&(i.pending=null),t=t.next}ba=!1}if(fa=0,ha=Ca=ga=null,va=!1,ya=0,Ol.current=null,null===r||null===r.return){Nl=1,kl=n,Ul=null;break}e:{var a=e,s=r.return,l=r,c=n;if(n=Fl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,m=d.tag;if(0==(1&d.mode)&&(0===m||11===m||15===m)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=hs(s);if(null!==f){f.flags&=-257,bs(f,s,l,0,n),1&f.mode&&Cs(a,u,n),c=u;var g=(n=f).updateQueue;if(null===g){var C=new Set;C.add(c),n.updateQueue=C}else g.add(c);break e}if(0==(1&n)){Cs(a,u,n),Cc();break e}c=Error(o(426))}else if(io&&1&l.mode){var h=hs(s);if(null!==h){0==(65536&h.flags)&&(h.flags|=256),bs(h,s,l,0,n),go(us(c,l));break e}}a=c=us(c,l),4!==Nl&&(Nl=2),null===Tl?Tl=[a]:Tl.push(a),a=s;do{switch(a.tag){case 3:a.flags|=65536,n&=-n,a.lanes|=n,jo(a,fs(0,c,n));break e;case 1:l=c;var b=a.type,v=a.stateNode;if(0==(128&a.flags)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===Ql||!Ql.has(v)))){a.flags|=65536,n&=-n,a.lanes|=n,jo(a,gs(a,l,n));break e}}a=a.return}while(null!==a)}Sc(r)}catch(e){n=e,Ul===r&&null!==r&&(Ul=r=r.return);continue}break}}function gc(){var e=El.current;return El.current=as,null===e?as:e}function Cc(){0!==Nl&&3!==Nl&&2!==Nl||(Nl=4),null===Il||0==(268435455&jl)&&0==(268435455&Wl)||lc(Il,Fl)}function hc(e,n){var r=wl;wl|=2;var t=gc();for(Il===e&&Fl===n||(Jl=null,pc(e,n));;)try{bc();break}catch(n){fc(e,n)}if(Po(),wl=r,El.current=t,null!==Ul)throw Error(o(261));return Il=null,Fl=0,Nl}function bc(){for(;null!==Ul;)yc(Ul)}function vc(){for(;null!==Ul&&!Xe();)yc(Ul)}function yc(e){var n=_l(e.alternate,e,Rl);e.memoizedProps=e.pendingProps,null===n?Sc(e):Ul=n,Ol.current=null}function Sc(e){var n=e;do{var r=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(r=$s(r,n,Rl)))return void(Ul=r)}else{if(null!==(r=Xs(r,n)))return r.flags&=32767,void(Ul=r);if(null===e)return Nl=6,void(Ul=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Ul=n);Ul=n=e}while(null!==n);0===Nl&&(Nl=5)}function Pc(e,n,r){var t=yn,i=xl.transition;try{xl.transition=null,yn=1,function(e,n,r,t){do{Ac()}while(null!==Xl);if(0!=(6&wl))throw Error(o(327));r=e.finishedWork;var i=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var a=r.lanes|r.childLanes;if(function(e,n){var r=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var t=e.eventTimes;for(e=e.expirationTimes;0<r;){var i=31-sn(r),o=1<<i;n[i]=0,t[i]=-1,e[i]=-1,r&=~o}}(e,a),e===Il&&(Ul=Il=null,Fl=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||$l||($l=!0,Ic(nn,(function(){return Ac(),null}))),a=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||a){a=xl.transition,xl.transition=null;var s=yn;yn=1;var l=wl;wl|=4,Ol.current=null,function(e,n){if(ei=Hn,pt(e=mt())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var t=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(t&&0!==t.rangeCount){r=t.anchorNode;var i=t.anchorOffset,a=t.focusNode;t=t.focusOffset;try{r.nodeType,a.nodeType}catch(e){r=null;break e}var s=0,l=-1,c=-1,u=0,d=0,m=e,p=null;n:for(;;){for(var f;m!==r||0!==i&&3!==m.nodeType||(l=s+i),m!==a||0!==t&&3!==m.nodeType||(c=s+t),3===m.nodeType&&(s+=m.nodeValue.length),null!==(f=m.firstChild);)p=m,m=f;for(;;){if(m===e)break n;if(p===r&&++u===i&&(l=s),p===a&&++d===t&&(c=s),null!==(f=m.nextSibling))break;p=(m=p).parentNode}m=f}r=-1===l||-1===c?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(ni={focusedElem:e,selectionRange:r},Hn=!1,Zs=n;null!==Zs;)if(e=(n=Zs).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,Zs=e;else for(;null!==Zs;){n=Zs;try{var g=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var C=g.memoizedProps,h=g.memoizedState,b=n.stateNode,v=b.getSnapshotBeforeUpdate(n.elementType===n.type?C:ho(n.type,C),h);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var y=n.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(o(163))}}catch(e){Dc(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Zs=e;break}Zs=n.return}g=rl,rl=!1}(e,r),hl(r,e),ft(ni),Hn=!!ei,ni=ei=null,e.current=r,vl(r,e,i),qe(),wl=l,yn=s,xl.transition=a}else e.current=r;if($l&&($l=!1,Xl=e,ql=i),0===(a=e.pendingLanes)&&(Ql=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),ic(e,Ke()),null!==n)for(t=e.onRecoverableError,r=0;r<n.length;r++)t((i=n[r]).value,{componentStack:i.stack,digest:i.digest});if(Hl)throw Hl=!1,e=Gl,Gl=null,e;0!=(1&ql)&&0!==e.tag&&Ac(),0!=(1&(a=e.pendingLanes))?e===Yl?Kl++:(Kl=0,Yl=e):Kl=0,zi()}(e,n,r,t)}finally{xl.transition=i,yn=t}return null}function Ac(){if(null!==Xl){var e=Sn(ql),n=xl.transition,r=yn;try{if(xl.transition=null,yn=16>e?16:e,null===Xl)var t=!1;else{if(e=Xl,Xl=null,ql=0,0!=(6&wl))throw Error(o(331));var i=wl;for(wl|=4,Zs=e.current;null!==Zs;){var a=Zs,s=a.child;if(0!=(16&Zs.flags)){var l=a.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Zs=u;null!==Zs;){var d=Zs;switch(d.tag){case 0:case 11:case 15:tl(8,d,a)}var m=d.child;if(null!==m)m.return=d,Zs=m;else for(;null!==Zs;){var p=(d=Zs).sibling,f=d.return;if(al(d),d===u){Zs=null;break}if(null!==p){p.return=f,Zs=p;break}Zs=f}}}var g=a.alternate;if(null!==g){var C=g.child;if(null!==C){g.child=null;do{var h=C.sibling;C.sibling=null,C=h}while(null!==C)}}Zs=a}}if(0!=(2064&a.subtreeFlags)&&null!==s)s.return=a,Zs=s;else e:for(;null!==Zs;){if(0!=(2048&(a=Zs).flags))switch(a.tag){case 0:case 11:case 15:tl(9,a,a.return)}var b=a.sibling;if(null!==b){b.return=a.return,Zs=b;break e}Zs=a.return}}var v=e.current;for(Zs=v;null!==Zs;){var y=(s=Zs).child;if(0!=(2064&s.subtreeFlags)&&null!==y)y.return=s,Zs=y;else e:for(s=v;null!==Zs;){if(0!=(2048&(l=Zs).flags))try{switch(l.tag){case 0:case 11:case 15:il(9,l)}}catch(e){Dc(l,l.return,e)}if(l===s){Zs=null;break e}var S=l.sibling;if(null!==S){S.return=l.return,Zs=S;break e}Zs=l.return}}if(wl=i,zi(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(e){}t=!0}return t}finally{yn=r,xl.transition=n}}return!1}function _c(e,n,r){e=No(e,n=fs(0,n=us(r,n),1),1),n=nc(),null!==e&&(bn(e,1,n),ic(e,n))}function Dc(e,n,r){if(3===e.tag)_c(e,e,r);else for(;null!==n;){if(3===n.tag){_c(n,e,r);break}if(1===n.tag){var t=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof t.componentDidCatch&&(null===Ql||!Ql.has(t))){n=No(n,e=gs(n,e=us(r,e),1),1),e=nc(),null!==n&&(bn(n,1,e),ic(n,e));break}}n=n.return}}function Ec(e,n,r){var t=e.pingCache;null!==t&&t.delete(n),n=nc(),e.pingedLanes|=e.suspendedLanes&r,Il===e&&(Fl&r)===r&&(4===Nl||3===Nl&&(130023424&Fl)===Fl&&500>Ke()-zl?pc(e,0):Ml|=r),ic(e,n)}function Oc(e,n){0===n&&(0==(1&e.mode)?n=1:(n=dn,0==(130023424&(dn<<=1))&&(dn=4194304)));var r=nc();null!==(e=Io(e,n))&&(bn(e,n,r),ic(e,r))}function xc(e){var n=e.memoizedState,r=0;null!==n&&(r=n.retryLane),Oc(e,r)}function wc(e,n){var r=0;switch(e.tag){case 13:var t=e.stateNode,i=e.memoizedState;null!==i&&(r=i.retryLane);break;case 19:t=e.stateNode;break;default:throw Error(o(314))}null!==t&&t.delete(n),Oc(e,r)}function Ic(e,n){return Qe(e,n)}function Uc(e,n,r,t){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=t,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Fc(e,n,r,t){return new Uc(e,n,r,t)}function Rc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lc(e,n){var r=e.alternate;return null===r?((r=Fc(e.tag,n,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=n,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,n=e.dependencies,r.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Nc(e,n,r,t,i,a){var s=2;if(t=e,"function"==typeof e)Rc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case A:return kc(r.children,i,a,n);case _:s=8,i|=8;break;case D:return(e=Fc(12,r,n,2|i)).elementType=D,e.lanes=a,e;case w:return(e=Fc(13,r,n,i)).elementType=w,e.lanes=a,e;case I:return(e=Fc(19,r,n,i)).elementType=I,e.lanes=a,e;case R:return jc(r,i,a,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:s=10;break e;case O:s=9;break e;case x:s=11;break e;case U:s=14;break e;case F:s=16,t=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=Fc(s,r,n,i)).elementType=e,n.type=t,n.lanes=a,n}function kc(e,n,r,t){return(e=Fc(7,e,t,n)).lanes=r,e}function jc(e,n,r,t){return(e=Fc(22,e,t,n)).elementType=R,e.lanes=r,e.stateNode={isHidden:!1},e}function Wc(e,n,r){return(e=Fc(6,e,null,n)).lanes=r,e}function Mc(e,n,r){return(n=Fc(4,null!==e.children?e.children:[],e.key,n)).lanes=r,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Tc(e,n,r,t,i){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=hn(0),this.expirationTimes=hn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=hn(0),this.identifierPrefix=t,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Bc(e,n,r,t,i,o,a,s,l){return e=new Tc(e,n,r,s,l),1===n?(n=1,!0===o&&(n|=8)):n=0,o=Fc(3,null,null,n),e.current=o,o.stateNode=e,o.memoizedState={element:t,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Fo(o),e}function zc(e){if(!e)return Oi;e:{if(ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Fi(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var r=e.type;if(Fi(r))return Ni(e,r,n)}return n}function Vc(e,n,r,t,i,o,a,s,l){return(e=Bc(r,t,!0,e,0,o,0,s,l)).context=zc(null),r=e.current,(o=Lo(t=nc(),i=rc(r))).callback=null!=n?n:null,No(r,o,i),e.current.lanes=i,bn(e,i,t),ic(e,t),e}function Jc(e,n,r,t){var i=n.current,o=nc(),a=rc(i);return r=zc(r),null===n.context?n.context=r:n.pendingContext=r,(n=Lo(o,a)).payload={element:e},null!==(t=void 0===t?null:t)&&(n.callback=t),null!==(e=No(i,n,a))&&(tc(e,i,a,o),ko(e,i,a)),a}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Gc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<n?r:n}}function Qc(e,n){Gc(e,n),(e=e.alternate)&&Gc(e,n)}_l=function(e,n,r){if(null!==e)if(e.memoizedProps!==n.pendingProps||wi.current)ys=!0;else{if(0==(e.lanes&r)&&0==(128&n.flags))return ys=!1,function(e,n,r){switch(n.tag){case 3:Is(n),fo();break;case 5:aa(n);break;case 1:Fi(n.type)&&ki(n);break;case 4:ia(n,n.stateNode.containerInfo);break;case 10:var t=n.type._context,i=n.memoizedProps.value;Ei(bo,t._currentValue),t._currentValue=i;break;case 13:if(null!==(t=n.memoizedState))return null!==t.dehydrated?(Ei(la,1&la.current),n.flags|=128,null):0!=(r&n.child.childLanes)?Ws(e,n,r):(Ei(la,1&la.current),null!==(e=Hs(e,n,r))?e.sibling:null);Ei(la,1&la.current);break;case 19:if(t=0!=(r&n.childLanes),0!=(128&e.flags)){if(t)return Vs(e,n,r);n.flags|=128}if(null!==(i=n.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),Ei(la,la.current),t)break;return null;case 22:case 23:return n.lanes=0,Ds(e,n,r)}return Hs(e,n,r)}(e,n,r);ys=0!=(131072&e.flags)}else ys=!1,io&&0!=(1048576&n.flags)&&Zi(n,Gi,n.index);switch(n.lanes=0,n.tag){case 2:var t=n.type;Js(e,n),e=n.pendingProps;var i=Ui(n,xi.current);Do(n,r),i=_a(null,n,t,e,i,r);var a=Da();return n.flags|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Fi(t)?(a=!0,ki(n)):a=!1,n.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,Fo(n),i.updater=zo,n.stateNode=i,i._reactInternals=n,Go(n,t,e,r),n=ws(null,n,t,!0,a,r)):(n.tag=0,io&&a&&eo(n),Ss(null,n,i,r),n=n.child),n;case 16:t=n.elementType;e:{switch(Js(e,n),e=n.pendingProps,t=(i=t._init)(t._payload),n.type=t,i=n.tag=function(e){if("function"==typeof e)return Rc(e)?1:0;if(null!=e){if((e=e.$$typeof)===x)return 11;if(e===U)return 14}return 2}(t),e=ho(t,e),i){case 0:n=Os(null,n,t,e,r);break e;case 1:n=xs(null,n,t,e,r);break e;case 11:n=Ps(null,n,t,e,r);break e;case 14:n=As(null,n,t,ho(t.type,e),r);break e}throw Error(o(306,t,""))}return n;case 0:return t=n.type,i=n.pendingProps,Os(e,n,t,i=n.elementType===t?i:ho(t,i),r);case 1:return t=n.type,i=n.pendingProps,xs(e,n,t,i=n.elementType===t?i:ho(t,i),r);case 3:e:{if(Is(n),null===e)throw Error(o(387));t=n.pendingProps,i=(a=n.memoizedState).element,Ro(e,n),Wo(n,t,null,r);var s=n.memoizedState;if(t=s.element,a.isDehydrated){if(a={element:t,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=a,n.memoizedState=a,256&n.flags){n=Us(e,n,t,r,i=us(Error(o(423)),n));break e}if(t!==i){n=Us(e,n,t,r,i=us(Error(o(424)),n));break e}for(to=ci(n.stateNode.containerInfo.firstChild),ro=n,io=!0,oo=null,r=Yo(n,null,t,r),n.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(fo(),t===i){n=Hs(e,n,r);break e}Ss(e,n,t,r)}n=n.child}return n;case 5:return aa(n),null===e&&co(n),t=n.type,i=n.pendingProps,a=null!==e?e.memoizedProps:null,s=i.children,ri(t,i)?s=null:null!==a&&ri(t,a)&&(n.flags|=32),Es(e,n),Ss(e,n,s,r),n.child;case 6:return null===e&&co(n),null;case 13:return Ws(e,n,r);case 4:return ia(n,n.stateNode.containerInfo),t=n.pendingProps,null===e?n.child=Ko(n,null,t,r):Ss(e,n,t,r),n.child;case 11:return t=n.type,i=n.pendingProps,Ps(e,n,t,i=n.elementType===t?i:ho(t,i),r);case 7:return Ss(e,n,n.pendingProps,r),n.child;case 8:case 12:return Ss(e,n,n.pendingProps.children,r),n.child;case 10:e:{if(t=n.type._context,i=n.pendingProps,a=n.memoizedProps,s=i.value,Ei(bo,t._currentValue),t._currentValue=s,null!==a)if(st(a.value,s)){if(a.children===i.children&&!wi.current){n=Hs(e,n,r);break e}}else for(null!==(a=n.child)&&(a.return=n);null!==a;){var l=a.dependencies;if(null!==l){s=a.child;for(var c=l.firstContext;null!==c;){if(c.context===t){if(1===a.tag){(c=Lo(-1,r&-r)).tag=2;var u=a.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}a.lanes|=r,null!==(c=a.alternate)&&(c.lanes|=r),_o(a.return,r,n),l.lanes|=r;break}c=c.next}}else if(10===a.tag)s=a.type===n.type?null:a.child;else if(18===a.tag){if(null===(s=a.return))throw Error(o(341));s.lanes|=r,null!==(l=s.alternate)&&(l.lanes|=r),_o(s,r,n),s=a.sibling}else s=a.child;if(null!==s)s.return=a;else for(s=a;null!==s;){if(s===n){s=null;break}if(null!==(a=s.sibling)){a.return=s.return,s=a;break}s=s.return}a=s}Ss(e,n,i.children,r),n=n.child}return n;case 9:return i=n.type,t=n.pendingProps.children,Do(n,r),t=t(i=Eo(i)),n.flags|=1,Ss(e,n,t,r),n.child;case 14:return i=ho(t=n.type,n.pendingProps),As(e,n,t,i=ho(t.type,i),r);case 15:return _s(e,n,n.type,n.pendingProps,r);case 17:return t=n.type,i=n.pendingProps,i=n.elementType===t?i:ho(t,i),Js(e,n),n.tag=1,Fi(t)?(e=!0,ki(n)):e=!1,Do(n,r),Jo(n,t,i),Go(n,t,i,r),ws(null,n,t,!0,e,r);case 19:return Vs(e,n,r);case 22:return Ds(e,n,r)}throw Error(o(156,n.tag))};var $c="function"==typeof reportError?reportError:function(e){console.error(e)};function Xc(e){this._internalRoot=e}function qc(e){this._internalRoot=e}function Kc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zc(){}function eu(e,n,r,t,i){var o=r._reactRootContainer;if(o){var a=o;if("function"==typeof i){var s=i;i=function(){var e=Hc(a);s.call(e)}}Jc(n,a,e,i)}else a=function(e,n,r,t,i){if(i){if("function"==typeof t){var o=t;t=function(){var e=Hc(a);o.call(e)}}var a=Vc(n,t,e,0,null,!1,0,"",Zc);return e._reactRootContainer=a,e[fi]=a.current,zt(8===e.nodeType?e.parentNode:e),dc(),a}for(;i=e.lastChild;)e.removeChild(i);if("function"==typeof t){var s=t;t=function(){var e=Hc(l);s.call(e)}}var l=Bc(e,0,!1,null,0,!1,0,"",Zc);return e._reactRootContainer=l,e[fi]=l.current,zt(8===e.nodeType?e.parentNode:e),dc((function(){Jc(n,l,r,t)})),l}(r,n,e,i,t);return Hc(a)}qc.prototype.render=Xc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Jc(e,n,null,null)},qc.prototype.unmount=Xc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;dc((function(){Jc(null,e,null,null)})),n[fi]=null}},qc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Dn();e={blockedOn:null,target:e,priority:n};for(var r=0;r<Ln.length&&0!==n&&n<Ln[r].priority;r++);Ln.splice(r,0,e),0===r&&Wn(e)}},Pn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var r=mn(n.pendingLanes);0!==r&&(vn(n,1|r),ic(n,Ke()),0==(6&wl)&&(Vl=Ke()+500,zi()))}break;case 13:dc((function(){var n=Io(e,1);if(null!==n){var r=nc();tc(n,e,1,r)}})),Qc(e,1)}},An=function(e){if(13===e.tag){var n=Io(e,134217728);null!==n&&tc(n,e,134217728,nc()),Qc(e,134217728)}},_n=function(e){if(13===e.tag){var n=rc(e),r=Io(e,n);null!==r&&tc(r,e,n,nc()),Qc(e,n)}},Dn=function(){return yn},En=function(e,n){var r=yn;try{return yn=e,n()}finally{yn=r}},Pe=function(e,n,r){switch(n){case"input":if(Y(e,r),n=r.name,"radio"===r.type&&null!=n){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<r.length;n++){var t=r[n];if(t!==e&&t.form===e.form){var i=Si(t);if(!i)throw Error(o(90));Q(t),Y(t,i)}}}break;case"textarea":oe(e,r);break;case"select":null!=(n=r.value)&&re(e,!!r.multiple,n,!1)}},xe=uc,we=dc;var nu={usingClientEntryPoint:!1,Events:[vi,yi,Si,Ee,Oe,uc]},ru={findFiberByHostInstance:bi,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},tu={bundleType:ru.bundleType,version:ru.version,rendererPackageName:ru.rendererPackageName,rendererConfig:ru.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:ru.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var iu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!iu.isDisabled&&iu.supportsFiber)try{on=iu.inject(tu),an=iu}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,n.createPortal=function(e,n){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Kc(n))throw Error(o(200));return function(e,n,r){var t=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:P,key:null==t?null:""+t,children:e,containerInfo:n,implementation:r}}(e,n,null,r)},n.createRoot=function(e,n){if(!Kc(e))throw Error(o(299));var r=!1,t="",i=$c;return null!=n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(t=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),n=Bc(e,1,!1,null,0,r,0,t,i),e[fi]=n.current,zt(8===e.nodeType?e.parentNode:e),new Xc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=He(n))?null:e.stateNode},n.flushSync=function(e){return dc(e)},n.hydrate=function(e,n,r){if(!Yc(n))throw Error(o(200));return eu(null,e,n,!0,r)},n.hydrateRoot=function(e,n,r){if(!Kc(e))throw Error(o(405));var t=null!=r&&r.hydratedSources||null,i=!1,a="",s=$c;if(null!=r&&(!0===r.unstable_strictMode&&(i=!0),void 0!==r.identifierPrefix&&(a=r.identifierPrefix),void 0!==r.onRecoverableError&&(s=r.onRecoverableError)),n=Vc(n,null,e,1,null!=r?r:null,i,0,a,s),e[fi]=n.current,zt(e),t)for(e=0;e<t.length;e++)i=(i=(r=t[e])._getVersion)(r._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[r,i]:n.mutableSourceEagerHydrationData.push(r,i);return new qc(n)},n.render=function(e,n,r){if(!Yc(n))throw Error(o(200));return eu(null,e,n,!1,r)},n.unmountComponentAtNode=function(e){if(!Yc(e))throw Error(o(40));return!!e._reactRootContainer&&(dc((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[fi]=null}))})),!0)},n.unstable_batchedUpdates=uc,n.unstable_renderSubtreeIntoContainer=function(e,n,r,t){if(!Yc(r))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return eu(e,n,r,!1,t)},n.version="18.2.0-next-9e3b772b8-20220608"},745:(e,n,r)=>{"use strict";var t=r(935);n.s=t.createRoot,t.hydrateRoot},935:(e,n,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(448)},251:(e,n,r)=>{"use strict";var t=r(294),i=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,s=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,r){var t,o={},c=null,u=null;for(t in void 0!==r&&(c=""+r),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)a.call(n,t)&&!l.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:i,type:e,key:c,ref:u,props:o,_owner:s.current}}n.Fragment=o,n.jsx=c,n.jsxs=c},408:(e,n)=>{"use strict";var r=Symbol.for("react.element"),t=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),m=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,C={};function h(e,n,r){this.props=e,this.context=n,this.refs=C,this.updater=r||f}function b(){}function v(e,n,r){this.props=e,this.context=n,this.refs=C,this.updater=r||f}h.prototype.isReactComponent={},h.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=h.prototype;var y=v.prototype=new b;y.constructor=v,g(y,h.prototype),y.isPureReactComponent=!0;var S=Array.isArray,P=Object.prototype.hasOwnProperty,A={current:null},_={key:!0,ref:!0,__self:!0,__source:!0};function D(e,n,t){var i,o={},a=null,s=null;if(null!=n)for(i in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(a=""+n.key),n)P.call(n,i)&&!_.hasOwnProperty(i)&&(o[i]=n[i]);var l=arguments.length-2;if(1===l)o.children=t;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===o[i]&&(o[i]=l[i]);return{$$typeof:r,type:e,key:a,ref:s,props:o,_owner:A.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var O=/\/+/g;function x(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function w(e,n,i,o,a){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case r:case t:l=!0}}if(l)return a=a(l=e),e=""===o?"."+x(l,0):o,S(a)?(i="",null!=e&&(i=e.replace(O,"$&/")+"/"),w(a,n,i,"",(function(e){return e}))):null!=a&&(E(a)&&(a=function(e,n){return{$$typeof:r,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,i+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e)),n.push(a)),1;if(l=0,o=""===o?".":o+":",S(e))for(var c=0;c<e.length;c++){var u=o+x(s=e[c],c);l+=w(s,n,i,u,a)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=w(s=s.value,n,i,u=o+x(s,c++),a);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function I(e,n,r){if(null==e)return e;var t=[],i=0;return w(e,t,"","",(function(e){return n.call(r,e,i++)})),t}function U(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},R={transition:null},L={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:R,ReactCurrentOwner:A};n.Children={map:I,forEach:function(e,n,r){I(e,(function(){n.apply(this,arguments)}),r)},count:function(e){var n=0;return I(e,(function(){n++})),n},toArray:function(e){return I(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=h,n.Fragment=i,n.Profiler=a,n.PureComponent=v,n.StrictMode=o,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,n.cloneElement=function(e,n,t){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=g({},e.props),o=e.key,a=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(a=n.ref,s=A.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)P.call(n,c)&&!_.hasOwnProperty(c)&&(i[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)i.children=t;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];i.children=l}return{$$typeof:r,type:e.type,key:o,ref:a,props:i,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=D,n.createFactory=function(e){var n=D.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=E,n.lazy=function(e){return{$$typeof:m,_payload:{_status:-1,_result:e},_init:U}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=R.transition;R.transition={};try{e()}finally{R.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return F.current.useCallback(e,n)},n.useContext=function(e){return F.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return F.current.useDeferredValue(e)},n.useEffect=function(e,n){return F.current.useEffect(e,n)},n.useId=function(){return F.current.useId()},n.useImperativeHandle=function(e,n,r){return F.current.useImperativeHandle(e,n,r)},n.useInsertionEffect=function(e,n){return F.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return F.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return F.current.useMemo(e,n)},n.useReducer=function(e,n,r){return F.current.useReducer(e,n,r)},n.useRef=function(e){return F.current.useRef(e)},n.useState=function(e){return F.current.useState(e)},n.useSyncExternalStore=function(e,n,r){return F.current.useSyncExternalStore(e,n,r)},n.useTransition=function(){return F.current.useTransition()},n.version="18.2.0"},294:(e,n,r)=>{"use strict";e.exports=r(408)},893:(e,n,r)=>{"use strict";e.exports=r(251)},53:(e,n)=>{"use strict";function r(e,n){var r=e.length;e.push(n);e:for(;0<r;){var t=r-1>>>1,i=e[t];if(!(0<o(i,n)))break e;e[t]=n,e[r]=i,r=t}}function t(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var n=e[0],r=e.pop();if(r!==n){e[0]=r;e:for(var t=0,i=e.length,a=i>>>1;t<a;){var s=2*(t+1)-1,l=e[s],c=s+1,u=e[c];if(0>o(l,r))c<i&&0>o(u,l)?(e[t]=u,e[c]=r,t=c):(e[t]=l,e[s]=r,t=s);else{if(!(c<i&&0>o(u,r)))break e;e[t]=u,e[c]=r,t=c}}}return n}function o(e,n){var r=e.sortIndex-n.sortIndex;return 0!==r?r:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;n.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,m=null,p=3,f=!1,g=!1,C=!1,h="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var n=t(u);null!==n;){if(null===n.callback)i(u);else{if(!(n.startTime<=e))break;i(u),n.sortIndex=n.expirationTime,r(c,n)}n=t(u)}}function S(e){if(C=!1,y(e),!g)if(null!==t(c))g=!0,R(P);else{var n=t(u);null!==n&&L(S,n.startTime-e)}}function P(e,r){g=!1,C&&(C=!1,b(E),E=-1),f=!0;var o=p;try{for(y(r),m=t(c);null!==m&&(!(m.expirationTime>r)||e&&!w());){var a=m.callback;if("function"==typeof a){m.callback=null,p=m.priorityLevel;var s=a(m.expirationTime<=r);r=n.unstable_now(),"function"==typeof s?m.callback=s:m===t(c)&&i(c),y(r)}else i(c);m=t(c)}if(null!==m)var l=!0;else{var d=t(u);null!==d&&L(S,d.startTime-r),l=!1}return l}finally{m=null,p=o,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var A,_=!1,D=null,E=-1,O=5,x=-1;function w(){return!(n.unstable_now()-x<O)}function I(){if(null!==D){var e=n.unstable_now();x=e;var r=!0;try{r=D(!0,e)}finally{r?A():(_=!1,D=null)}}else _=!1}if("function"==typeof v)A=function(){v(I)};else if("undefined"!=typeof MessageChannel){var U=new MessageChannel,F=U.port2;U.port1.onmessage=I,A=function(){F.postMessage(null)}}else A=function(){h(I,0)};function R(e){D=e,_||(_=!0,A())}function L(e,r){E=h((function(){e(n.unstable_now())}),r)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){g||f||(g=!0,R(P))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return t(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var r=p;p=n;try{return e()}finally{p=r}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=p;p=e;try{return n()}finally{p=r}},n.unstable_scheduleCallback=function(e,i,o){var a=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?a+o:a,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:i,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>a?(e.sortIndex=o,r(u,e),null===t(c)&&e===t(u)&&(C?(b(E),E=-1):C=!0,L(S,o-a))):(e.sortIndex=s,r(c,e),g||f||(g=!0,R(P))),e},n.unstable_shouldYield=w,n.unstable_wrapCallback=function(e){var n=p;return function(){var r=p;p=n;try{return e.apply(this,arguments)}finally{p=r}}}},840:(e,n,r)=>{"use strict";e.exports=r(53)},774:e=>{e.exports=function(e,n,r,t){var i=r?r.call(t,e,n):void 0;if(void 0!==i)return!!i;if(e===n)return!0;if("object"!=typeof e||!e||"object"!=typeof n||!n)return!1;var o=Object.keys(e),a=Object.keys(n);if(o.length!==a.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(n),l=0;l<o.length;l++){var c=o[l];if(!s(c))return!1;var u=e[c],d=n[c];if(!1===(i=r?r.call(t,u,d,c):void 0)||void 0===i&&u!==d)return!1}return!0}}},t={};function i(e){var n=t[e];if(void 0!==n)return n.exports;var o=t[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return i.d(n,{a:n}),n},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(r,t){if(1&t&&(r=this(r)),8&t)return r;if("object"==typeof r&&r){if(4&t&&r.__esModule)return r;if(16&t&&"function"==typeof r.then)return r}var o=Object.create(null);i.r(o);var a={};e=e||[null,n({}),n([]),n(n)];for(var s=2&t&&r;"object"==typeof s&&!~e.indexOf(s);s=n(s))Object.getOwnPropertyNames(s).forEach((e=>a[e]=()=>r[e]));return a.default=()=>r,i.d(o,a),o},i.d=(e,n)=>{for(var r in n)i.o(n,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nc=void 0,(()=>{"use strict";var e=i(294),n=i.t(e,2),r=i(745),t=function(){return t=Object.assign||function(e){for(var n,r=1,t=arguments.length;r<t;r++)for(var i in n=arguments[r])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},t.apply(this,arguments)};function o(e,n,r){if(r||2===arguments.length)for(var t,i=0,o=n.length;i<o;i++)!t&&i in n||(t||(t=Array.prototype.slice.call(n,0,i)),t[i]=n[i]);return e.concat(t||Array.prototype.slice.call(n))}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var a=i(774),s=i.n(a),l="-ms-",c="-moz-",u="-webkit-",d="comm",m="rule",p="decl",f="@import",g="@keyframes",C="@layer",h=Math.abs,b=String.fromCharCode,v=Object.assign;function y(e){return e.trim()}function S(e,n){return(e=n.exec(e))?e[0]:e}function P(e,n,r){return e.replace(n,r)}function A(e,n){return e.indexOf(n)}function _(e,n){return 0|e.charCodeAt(n)}function D(e,n,r){return e.slice(n,r)}function E(e){return e.length}function O(e){return e.length}function x(e,n){return n.push(e),e}function w(e,n){return e.filter((function(e){return!S(e,n)}))}var I=1,U=1,F=0,R=0,L=0,N="";function k(e,n,r,t,i,o,a,s){return{value:e,root:n,parent:r,type:t,props:i,children:o,line:I,column:U,length:a,return:"",siblings:s}}function j(e,n){return v(k("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},n)}function W(e){for(;e.root;)e=j(e.root,{children:[e]});x(e,e.siblings)}function M(){return L=R>0?_(N,--R):0,U--,10===L&&(U=1,I--),L}function T(){return L=R<F?_(N,R++):0,U++,10===L&&(U=1,I++),L}function B(){return _(N,R)}function z(){return R}function V(e,n){return D(N,e,n)}function J(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function H(e){return y(V(R-1,$(91===e?e+2:40===e?e+1:e)))}function G(e){for(;(L=B())&&L<33;)T();return J(e)>2||J(L)>3?"":" "}function Q(e,n){for(;--n&&T()&&!(L<48||L>102||L>57&&L<65||L>70&&L<97););return V(e,z()+(n<6&&32==B()&&32==T()))}function $(e){for(;T();)switch(L){case e:return R;case 34:case 39:34!==e&&39!==e&&$(L);break;case 40:41===e&&$(e);break;case 92:T()}return R}function X(e,n){for(;T()&&e+L!==57&&(e+L!==84||47!==B()););return"/*"+V(n,R-1)+"*"+b(47===e?e:T())}function q(e){for(;!J(B());)T();return V(e,R)}function K(e,n){for(var r="",t=0;t<e.length;t++)r+=n(e[t],t,e,n)||"";return r}function Y(e,n,r,t){switch(e.type){case C:if(e.children.length)break;case f:case p:return e.return=e.return||e.value;case d:return"";case g:return e.return=e.value+"{"+K(e.children,t)+"}";case m:if(!E(e.value=e.props.join(",")))return""}return E(r=K(e.children,t))?e.return=e.value+"{"+r+"}":""}function Z(e,n,r){switch(function(e,n){return 45^_(e,0)?(((n<<2^_(e,0))<<2^_(e,1))<<2^_(e,2))<<2^_(e,3):0}(e,n)){case 5103:return u+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return u+e+e;case 4789:return c+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return u+e+c+e+l+e+e;case 5936:switch(_(e,n+11)){case 114:return u+e+l+P(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return u+e+l+P(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return u+e+l+P(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return u+e+l+e+e;case 6165:return u+e+l+"flex-"+e+e;case 5187:return u+e+P(e,/(\w+).+(:[^]+)/,u+"box-$1$2"+l+"flex-$1$2")+e;case 5443:return u+e+l+"flex-item-"+P(e,/flex-|-self/g,"")+(S(e,/flex-|baseline/)?"":l+"grid-row-"+P(e,/flex-|-self/g,""))+e;case 4675:return u+e+l+"flex-line-pack"+P(e,/align-content|flex-|-self/g,"")+e;case 5548:return u+e+l+P(e,"shrink","negative")+e;case 5292:return u+e+l+P(e,"basis","preferred-size")+e;case 6060:return u+"box-"+P(e,"-grow","")+u+e+l+P(e,"grow","positive")+e;case 4554:return u+P(e,/([^-])(transform)/g,"$1"+u+"$2")+e;case 6187:return P(P(P(e,/(zoom-|grab)/,u+"$1"),/(image-set)/,u+"$1"),e,"")+e;case 5495:case 3959:return P(e,/(image-set\([^]*)/,u+"$1$`$1");case 4968:return P(P(e,/(.+:)(flex-)?(.*)/,u+"box-pack:$3"+l+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+u+e+e;case 4200:if(!S(e,/flex-|baseline/))return l+"grid-column-align"+D(e,n)+e;break;case 2592:case 3360:return l+P(e,"template-","")+e;case 4384:case 3616:return r&&r.some((function(e,r){return n=r,S(e.props,/grid-\w+-end/)}))?~A(e+(r=r[n].value),"span")?e:l+P(e,"-start","")+e+l+"grid-row-span:"+(~A(r,"span")?S(r,/\d+/):+S(r,/\d+/)-+S(e,/\d+/))+";":l+P(e,"-start","")+e;case 4896:case 4128:return r&&r.some((function(e){return S(e.props,/grid-\w+-start/)}))?e:l+P(P(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return P(e,/(.+)-inline(.+)/,u+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(E(e)-1-n>6)switch(_(e,n+1)){case 109:if(45!==_(e,n+4))break;case 102:return P(e,/(.+:)(.+)-([^]+)/,"$1"+u+"$2-$3$1"+c+(108==_(e,n+3)?"$3":"$2-$3"))+e;case 115:return~A(e,"stretch")?Z(P(e,"stretch","fill-available"),n,r)+e:e}break;case 5152:case 5920:return P(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(n,r,t,i,o,a,s){return l+r+":"+t+s+(i?l+r+"-span:"+(o?a:+a-+t)+s:"")+e}));case 4949:if(121===_(e,n+6))return P(e,":",":"+u)+e;break;case 6444:switch(_(e,45===_(e,14)?18:11)){case 120:return P(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+u+(45===_(e,14)?"inline-":"")+"box$3$1"+u+"$2$3$1"+l+"$2box$3")+e;case 100:return P(e,":",":"+l)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return P(e,"scroll-","scroll-snap-")+e}return e}function ee(e,n,r,t){if(e.length>-1&&!e.return)switch(e.type){case p:return void(e.return=Z(e.value,e.length,r));case g:return K([j(e,{value:P(e.value,"@","@"+u)})],t);case m:if(e.length)return function(e,n){return e.map(n).join("")}(r=e.props,(function(n){switch(S(n,t=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":W(j(e,{props:[P(n,/:(read-\w+)/,":"+c+"$1")]})),W(j(e,{props:[n]})),v(e,{props:w(r,t)});break;case"::placeholder":W(j(e,{props:[P(n,/:(plac\w+)/,":"+u+"input-$1")]})),W(j(e,{props:[P(n,/:(plac\w+)/,":"+c+"$1")]})),W(j(e,{props:[P(n,/:(plac\w+)/,l+"input-$1")]})),W(j(e,{props:[n]})),v(e,{props:w(r,t)})}return""}))}}function ne(e){return function(e){return N="",e}(re("",null,null,null,[""],e=function(e){return I=U=1,F=E(N=e),R=0,[]}(e),0,[0],e))}function re(e,n,r,t,i,o,a,s,l){for(var c=0,u=0,d=a,m=0,p=0,f=0,g=1,C=1,h=1,v=0,y="",S=i,D=o,O=t,w=y;C;)switch(f=v,v=T()){case 40:if(108!=f&&58==_(w,d-1)){-1!=A(w+=P(H(v),"&","&\f"),"&\f")&&(h=-1);break}case 34:case 39:case 91:w+=H(v);break;case 9:case 10:case 13:case 32:w+=G(f);break;case 92:w+=Q(z()-1,7);continue;case 47:switch(B()){case 42:case 47:x(ie(X(T(),z()),n,r,l),l);break;default:w+="/"}break;case 123*g:s[c++]=E(w)*h;case 125*g:case 59:case 0:switch(v){case 0:case 125:C=0;case 59+u:-1==h&&(w=P(w,/\f/g,"")),p>0&&E(w)-d&&x(p>32?oe(w+";",t,r,d-1,l):oe(P(w," ","")+";",t,r,d-2,l),l);break;case 59:w+=";";default:if(x(O=te(w,n,r,c,u,i,s,y,S=[],D=[],d,o),o),123===v)if(0===u)re(w,n,O,O,S,o,d,s,D);else switch(99===m&&110===_(w,3)?100:m){case 100:case 108:case 109:case 115:re(e,O,O,t&&x(te(e,O,O,0,0,i,s,y,i,S=[],d,D),D),i,D,d,s,t?S:D);break;default:re(w,O,O,O,[""],D,0,s,D)}}c=u=p=0,g=h=1,y=w="",d=a;break;case 58:d=1+E(w),p=f;default:if(g<1)if(123==v)--g;else if(125==v&&0==g++&&125==M())continue;switch(w+=b(v),v*g){case 38:h=u>0?1:(w+="\f",-1);break;case 44:s[c++]=(E(w)-1)*h,h=1;break;case 64:45===B()&&(w+=H(T())),m=B(),u=d=E(y=w+=q(z())),v++;break;case 45:45===f&&2==E(w)&&(g=0)}}return o}function te(e,n,r,t,i,o,a,s,l,c,u,d){for(var p=i-1,f=0===i?o:[""],g=O(f),C=0,b=0,v=0;C<t;++C)for(var S=0,A=D(e,p+1,p=h(b=a[C])),_=e;S<g;++S)(_=y(b>0?f[S]+" "+A:P(A,/&\f/g,f[S])))&&(l[v++]=_);return k(e,n,r,0===i?m:s,l,c,u,d)}function ie(e,n,r,t){return k(e,n,r,d,b(L),D(e,2,-2),0,t)}function oe(e,n,r,t,i){return k(e,n,r,p,D(e,0,t),D(e,t+1,-1),t,i)}var ae={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},se="undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&({ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_ATTR||{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_ATTR)||"data-styled",le="undefined"!=typeof window&&"HTMLElement"in window,ce=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY?"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}&&void 0!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&""!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&"false"!=={ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY&&{ALLUSERSPROFILE:"C:\\ProgramData",APPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming",ChocolateyInstall:"C:\\ProgramData\\chocolatey",ChocolateyLastPathUpdate:"133739169618057786",COLOR:"1",CommonProgramFiles:"C:\\Program Files\\Common Files","CommonProgramFiles(x86)":"C:\\Program Files (x86)\\Common Files",CommonProgramW6432:"C:\\Program Files\\Common Files",COMPUTERNAME:"IBT-WS-062679",ComSpec:"C:\\WINDOWS\\system32\\cmd.exe",DriverData:"C:\\Windows\\System32\\Drivers\\DriverData",EDITOR:"C:\\WINDOWS\\notepad.exe",EFC_46896:"1",FPS_BROWSER_APP_PROFILE_STRING:"Internet Explorer",FPS_BROWSER_USER_PROFILE_STRING:"Default",GoLand:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;",HOME:"C:\\Users\\mdorsi.tier2.admin",HOMEDRIVE:"C:",HOMEPATH:"\\Users\\mdorsi.tier2.admin",IDEA_INITIAL_DIRECTORY:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin",IGCCSVC_DB:"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA7DqY1R3HX0aTSSlswK0VlgQAAAACAAAAAAAQZgAAAAEAACAAAABm65ppy4VnMFDUW4UsfN5HPI3yz9rnIpdfVGhrA4zgigAAAAAOgAAAAAIAACAAAABJpvp9a80y9IV5hP6fnCb1uKjNyrXZjdLmSwVxaoJylWAAAADYv8hOqBVUtjT1Cqsh1Xczhe4/q8hfUQ6SA5kSaemR37Yl+0aOG1FimG6uDSlGjhQDyeDwToU/XF4GyH7pVWO2rOVlfzMJbXLy8LJpGAn+JxZN3K0KK3+xDbw+vPjsczBAAAAA2Pth2w7+5O2/1E0Pt9N37mzbN3Q7/+oMWl+T3/m8hiS7sPgeMlEvoaBrgLXIlEi1j3+1o3rII1AJ3+7b3dSClA==",INIT_CWD:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front","IntelliJ IDEA":"C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;",JAVA_HOME:"C:\\java\\jdk-17.0.10",LOCALAPPDATA:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local",LOGONSERVER:"\\\\EDA-DTC-W-DC01",MOSQUITTO_DIR:"C:\\Program Files\\mosquitto",NODE:"C:\\Program Files\\nodejs\\node.exe",NODE_EXE:"C:\\Program Files\\nodejs\\\\node.exe",NPM_CLI_JS:"C:\\Program Files\\nodejs\\\\node_modules\\npm\\bin\\npm-cli.js",npm_command:"run-script",npm_config_cache:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\npm-cache",npm_config_globalconfig:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\etc\\npmrc",npm_config_global_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_init_module:"C:\\Users\\mdorsi.tier2.admin\\.npm-init.js",npm_config_local_prefix:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front",npm_config_node_gyp:"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js",npm_config_noproxy:"",npm_config_npm_version:"10.5.0",npm_config_prefix:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm",npm_config_userconfig:"C:\\Users\\mdorsi.tier2.admin\\.npmrc",npm_config_user_agent:"npm/10.5.0 node/v20.12.2 win32 x64 workspaces/false",npm_execpath:"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js",npm_lifecycle_event:"build",npm_lifecycle_script:"webpack --mode production",npm_node_execpath:"C:\\Program Files\\nodejs\\node.exe",npm_package_json:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\package.json",npm_package_name:"tedxibmec",npm_package_version:"1.0.2",NPM_PREFIX_NPM_CLI_JS:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js",NUMBER_OF_PROCESSORS:"8",OneDrive:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveCommercial:"C:\\Users\\mdorsi.tier2.admin\\OneDrive - Corporativo",OneDriveConsumer:"C:\\Users\\mdorsi.tier2.admin\\OneDrive",OS:"Windows_NT",Path:"C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin;C:\\Users\\mdorsi.tier2.admin\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm\\node_modules\\yarn\\bin;C:\\Program Files\\mosquitto;C:\\Program Files\\Graphviz\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python311\\;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\IntelliJ IDEA 2024.1.4\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\GoLand 2023.2.5\\bin;C:\\go;C:\\go\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;C:\\java\\jdk-17.0.10\\bin;C:\\java\\jdk-17.0.10\\lib;C:\\java\\jdk-17.0.10;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\nodejs\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin;C:\\Program Files\\PostgreSQL\\16\\bin;C:\\Program Files\\vtex\\client\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Roaming\\npm;C:\\Users\\mdorsi.tier2.admin\\.cargo\\;C:\\Users\\mdorsi.tier2.admin\\.cargo\\bin\\rustup.exe;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0;C:\\Users\\mdorsi.tier2.admin\\OneDrive\\pessoal\\Aplicativos\\PdftoImage\\dependences\\poppler-23.08.0\\Library\\bin;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9;C:\\Users\\mdorsi.tier2.admin\\apache-maven-3.9.9\\bin;C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;C:\\Users\\mdorsi.tier2.admin\\.fly\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\Muse Hub\\lib;C:\\Users\\mdorsi.tier2.admin\\tdexibmec-front\\node_modules\\.bin",PATHEXT:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",PhpStorm:"C:\\Program Files\\JetBrains\\PhpStorm 2024.3.1\\bin;",PLMVIS_82_LIBPATH:"C:\\Program Files (x86)\\SAP\\FrontEnd\\SAPgui\\Program",PROCESSOR_ARCHITECTURE:"AMD64",PROCESSOR_IDENTIFIER:"Intel64 Family 6 Model 140 Stepping 1, GenuineIntel",PROCESSOR_LEVEL:"6",PROCESSOR_REVISION:"8c01",ProgramData:"C:\\ProgramData",ProgramFiles:"C:\\Program Files","ProgramFiles(x86)":"C:\\Program Files (x86)",ProgramW6432:"C:\\Program Files",PROMPT:"$P$G",PSExecutionPolicyPreference:"Bypass",PSModulePath:"C:\\Users\\mdorsi.tier2.admin\\OneDrive\\Documentos\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules",PUBLIC:"C:\\Users\\Public",PyCharm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\PyCharm 2023.2.5\\bin;",SESSIONNAME:"Console",SystemDrive:"C:",SystemRoot:"C:\\WINDOWS",TEMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",TERMINAL_EMULATOR:"JetBrains-JediTerm",TERM_SESSION_ID:"1781bdb8-1a5f-4725-a078-a994a8ea9ba6",TMP:"C:\\Users\\MDORSI~1.ADM\\AppData\\Local\\Temp",USERDNSDOMAIN:"EDUC.ACAD",USERDOMAIN:"EDUCACAD",USERDOMAIN_ROAMINGPROFILE:"EDUCACAD",USERNAME:"mdorsi.tier2.admin",USERPROFILE:"C:\\Users\\mdorsi.tier2.admin",VBOX_MSI_INSTALL_PATH:"C:\\Program Files\\Oracle\\VirtualBox\\",WebStorm:"C:\\Users\\mdorsi.tier2.admin\\AppData\\Local\\JetBrains\\WebStorm 2023.3\\bin;",windir:"C:\\WINDOWS",ZES_ENABLE_SYSMAN:"1"}.SC_DISABLE_SPEEDY),ue=(new Set,Object.freeze([])),de=Object.freeze({});var me=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),pe=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,fe=/(^-|-$)/g;function ge(e){return e.replace(pe,"-").replace(fe,"")}var Ce=/(a)(d)/gi,he=function(e){return String.fromCharCode(e+(e>25?39:97))};function be(e){var n,r="";for(n=Math.abs(e);n>52;n=n/52|0)r=he(n%52)+r;return(he(n%52)+r).replace(Ce,"$1-$2")}var ve,ye=function(e,n){for(var r=n.length;r;)e=33*e^n.charCodeAt(--r);return e},Se=function(e){return ye(5381,e)};function Pe(e){return be(Se(e)>>>0)}function Ae(e){return"string"==typeof e&&!0}var _e="function"==typeof Symbol&&Symbol.for,De=_e?Symbol.for("react.memo"):60115,Ee=_e?Symbol.for("react.forward_ref"):60112,Oe={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},xe={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},we={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Ie=((ve={})[Ee]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},ve[De]=we,ve);function Ue(e){return("type"in(n=e)&&n.type.$$typeof)===De?we:"$$typeof"in e?Ie[e.$$typeof]:Oe;var n}var Fe=Object.defineProperty,Re=Object.getOwnPropertyNames,Le=Object.getOwnPropertySymbols,Ne=Object.getOwnPropertyDescriptor,ke=Object.getPrototypeOf,je=Object.prototype;function We(e,n,r){if("string"!=typeof n){if(je){var t=ke(n);t&&t!==je&&We(e,t,r)}var i=Re(n);Le&&(i=i.concat(Le(n)));for(var o=Ue(e),a=Ue(n),s=0;s<i.length;++s){var l=i[s];if(!(l in xe||r&&r[l]||a&&l in a||o&&l in o)){var c=Ne(n,l);try{Fe(e,l,c)}catch(e){}}}}return e}function Me(e){return"function"==typeof e}function Te(e){return"object"==typeof e&&"styledComponentId"in e}function Be(e,n){return e&&n?"".concat(e," ").concat(n):e||n||""}function ze(e,n){if(0===e.length)return"";for(var r=e[0],t=1;t<e.length;t++)r+=n?n+e[t]:e[t];return r}function Ve(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function Je(e,n,r){if(void 0===r&&(r=!1),!r&&!Ve(e)&&!Array.isArray(e))return n;if(Array.isArray(n))for(var t=0;t<n.length;t++)e[t]=Je(e[t],n[t]);else if(Ve(n))for(var t in n)e[t]=Je(e[t],n[t]);return e}function He(e,n){Object.defineProperty(e,"toString",{value:n})}function Ge(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(n.length>0?" Args: ".concat(n.join(", ")):""))}var Qe=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var n=0,r=0;r<e;r++)n+=this.groupSizes[r];return n},e.prototype.insertRules=function(e,n){if(e>=this.groupSizes.length){for(var r=this.groupSizes,t=r.length,i=t;e>=i;)if((i<<=1)<0)throw Ge(16,"".concat(e));this.groupSizes=new Uint32Array(i),this.groupSizes.set(r),this.length=i;for(var o=t;o<i;o++)this.groupSizes[o]=0}for(var a=this.indexOfGroup(e+1),s=(o=0,n.length);o<s;o++)this.tag.insertRule(a,n[o])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var n=this.groupSizes[e],r=this.indexOfGroup(e),t=r+n;this.groupSizes[e]=0;for(var i=r;i<t;i++)this.tag.deleteRule(r)}},e.prototype.getGroup=function(e){var n="";if(e>=this.length||0===this.groupSizes[e])return n;for(var r=this.groupSizes[e],t=this.indexOfGroup(e),i=t+r,o=t;o<i;o++)n+="".concat(this.tag.getRule(o)).concat("/*!sc*/\n");return n},e}(),$e=new Map,Xe=new Map,qe=1,Ke=function(e){if($e.has(e))return $e.get(e);for(;Xe.has(qe);)qe++;var n=qe++;return $e.set(e,n),Xe.set(n,e),n},Ye=function(e,n){qe=n+1,$e.set(e,n),Xe.set(n,e)},Ze="style[".concat(se,"][").concat("data-styled-version",'="').concat("6.1.1",'"]'),en=new RegExp("^".concat(se,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),nn=function(e,n,r){for(var t,i=r.split(","),o=0,a=i.length;o<a;o++)(t=i[o])&&e.registerName(n,t)},rn=function(e,n){for(var r,t=(null!==(r=n.textContent)&&void 0!==r?r:"").split("/*!sc*/\n"),i=[],o=0,a=t.length;o<a;o++){var s=t[o].trim();if(s){var l=s.match(en);if(l){var c=0|parseInt(l[1],10),u=l[2];0!==c&&(Ye(u,c),nn(e,u,l[3]),e.getTag().insertRules(c,i)),i.length=0}else i.push(s)}}};function tn(){return i.nc}var on=function(e){var n=document.head,r=e||n,t=document.createElement("style"),i=function(e){var n=Array.from(e.querySelectorAll("style[".concat(se,"]")));return n[n.length-1]}(r),o=void 0!==i?i.nextSibling:null;t.setAttribute(se,"active"),t.setAttribute("data-styled-version","6.1.1");var a=tn();return a&&t.setAttribute("nonce",a),r.insertBefore(t,o),t},an=function(){function e(e){this.element=on(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var n=document.styleSheets,r=0,t=n.length;r<t;r++){var i=n[r];if(i.ownerNode===e)return i}throw Ge(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,n){try{return this.sheet.insertRule(n,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var n=this.sheet.cssRules[e];return n&&n.cssText?n.cssText:""},e}(),sn=function(){function e(e){this.element=on(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,n){if(e<=this.length&&e>=0){var r=document.createTextNode(n);return this.element.insertBefore(r,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),ln=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,n){return e<=this.length&&(this.rules.splice(e,0,n),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),cn=le,un={isServer:!le,useCSSOMInjection:!ce},dn=function(){function e(e,n,r){void 0===e&&(e=de),void 0===n&&(n={});var i=this;this.options=t(t({},un),e),this.gs=n,this.names=new Map(r),this.server=!!e.isServer,!this.server&&le&&cn&&(cn=!1,function(e){for(var n=document.querySelectorAll(Ze),r=0,t=n.length;r<t;r++){var i=n[r];i&&"active"!==i.getAttribute(se)&&(rn(e,i),i.parentNode&&i.parentNode.removeChild(i))}}(this)),He(this,(function(){return function(e){for(var n=e.getTag(),r=n.length,t="",i=function(r){var i=function(e){return Xe.get(e)}(r);if(void 0===i)return"continue";var o=e.names.get(i),a=n.getGroup(r);if(void 0===o||0===a.length)return"continue";var s="".concat(se,".g").concat(r,'[id="').concat(i,'"]'),l="";void 0!==o&&o.forEach((function(e){e.length>0&&(l+="".concat(e,","))})),t+="".concat(a).concat(s,'{content:"').concat(l,'"}').concat("/*!sc*/\n")},o=0;o<r;o++)i(o);return t}(i)}))}return e.registerId=function(e){return Ke(e)},e.prototype.reconstructWithOptions=function(n,r){return void 0===r&&(r=!0),new e(t(t({},this.options),n),this.gs,r&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var n=e.useCSSOMInjection,r=e.target;return e.isServer?new ln(r):n?new an(r):new sn(r)}(this.options),new Qe(e)));var e},e.prototype.hasNameForId=function(e,n){return this.names.has(e)&&this.names.get(e).has(n)},e.prototype.registerName=function(e,n){if(Ke(e),this.names.has(e))this.names.get(e).add(n);else{var r=new Set;r.add(n),this.names.set(e,r)}},e.prototype.insertRules=function(e,n,r){this.registerName(e,n),this.getTag().insertRules(Ke(e),r)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Ke(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),mn=/&/g,pn=/^\s*\/\/.*$/gm;function fn(e,n){return e.map((function(e){return"rule"===e.type&&(e.value="".concat(n," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(n," ")),e.props=e.props.map((function(e){return"".concat(n," ").concat(e)}))),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=fn(e.children,n)),e}))}function gn(e){var n,r,t,i=void 0===e?de:e,o=i.options,a=void 0===o?de:o,s=i.plugins,l=void 0===s?ue:s,c=function(e,t,i){return i===r||i.startsWith(r)&&i.endsWith(r)&&i.replaceAll(r,"").length>0?".".concat(n):e},u=l.slice();u.push((function(e){e.type===m&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(mn,r).replace(t,c))})),a.prefix&&u.push(ee),u.push(Y);var d=function(e,i,o,s){void 0===i&&(i=""),void 0===o&&(o=""),void 0===s&&(s="&"),n=s,r=i,t=new RegExp("\\".concat(r,"\\b"),"g");var l=e.replace(pn,""),c=ne(o||i?"".concat(o," ").concat(i," { ").concat(l," }"):l);a.namespace&&(c=fn(c,a.namespace));var d,m,p,f=[];return K(c,(d=u.concat((p=function(e){return f.push(e)},function(e){e.root||(e=e.return)&&p(e)})),m=O(d),function(e,n,r,t){for(var i="",o=0;o<m;o++)i+=d[o](e,n,r,t)||"";return i})),f};return d.hash=l.length?l.reduce((function(e,n){return n.name||Ge(15),ye(e,n.name)}),5381).toString():"",d}var Cn=new dn,hn=gn(),bn=e.createContext({shouldForwardProp:void 0,styleSheet:Cn,stylis:hn}),vn=(bn.Consumer,e.createContext(void 0));function yn(){return(0,e.useContext)(bn)}function Sn(n){var r=(0,e.useState)(n.stylisPlugins),t=r[0],i=r[1],o=yn().styleSheet,a=(0,e.useMemo)((function(){var e=o;return n.sheet?e=n.sheet:n.target&&(e=e.reconstructWithOptions({target:n.target},!1)),n.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[n.disableCSSOMInjection,n.sheet,n.target,o]),l=(0,e.useMemo)((function(){return gn({options:{namespace:n.namespace,prefix:n.enableVendorPrefixes},plugins:t})}),[n.enableVendorPrefixes,n.namespace,t]);(0,e.useEffect)((function(){s()(t,n.stylisPlugins)||i(n.stylisPlugins)}),[n.stylisPlugins]);var c=(0,e.useMemo)((function(){return{shouldForwardProp:n.shouldForwardProp,styleSheet:a,stylis:l}}),[n.shouldForwardProp,a,l]);return e.createElement(bn.Provider,{value:c},e.createElement(vn.Provider,{value:l},n.children))}var Pn=function(){function e(e,n){var r=this;this.inject=function(e,n){void 0===n&&(n=hn);var t=r.name+n.hash;e.hasNameForId(r.id,t)||e.insertRules(r.id,t,n(r.rules,t,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=n,He(this,(function(){throw Ge(12,String(r.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=hn),this.name+e.hash},e}(),An=function(e){return e>="A"&&e<="Z"};function _n(e){for(var n="",r=0;r<e.length;r++){var t=e[r];if(1===r&&"-"===t&&"-"===e[0])return e;An(t)?n+="-"+t.toLowerCase():n+=t}return n.startsWith("ms-")?"-"+n:n}var Dn=function(e){return null==e||!1===e||""===e},En=function(e){var n,r,t=[];for(var i in e){var a=e[i];e.hasOwnProperty(i)&&!Dn(a)&&(Array.isArray(a)&&a.isCss||Me(a)?t.push("".concat(_n(i),":"),a,";"):Ve(a)?t.push.apply(t,o(o(["".concat(i," {")],En(a),!1),["}"],!1)):t.push("".concat(_n(i),": ").concat((n=i,null==(r=a)||"boolean"==typeof r||""===r?"":"number"!=typeof r||0===r||n in ae||n.startsWith("--")?String(r).trim():"".concat(r,"px")),";")))}return t};function On(e,n,r,t){return Dn(e)?[]:Te(e)?[".".concat(e.styledComponentId)]:Me(e)?!Me(i=e)||i.prototype&&i.prototype.isReactComponent||!n?[e]:On(e(n),n,r,t):e instanceof Pn?r?(e.inject(r,t),[e.getName(t)]):[e]:Ve(e)?En(e):Array.isArray(e)?Array.prototype.concat.apply(ue,e.map((function(e){return On(e,n,r,t)}))):[e.toString()];var i}function xn(e){for(var n=0;n<e.length;n+=1){var r=e[n];if(Me(r)&&!Te(r))return!1}return!0}var wn=Se("6.1.1"),In=function(){function e(e,n,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&xn(e),this.componentId=n,this.baseHash=ye(wn,n),this.baseStyle=r,dn.registerId(n)}return e.prototype.generateAndInjectStyles=function(e,n,r){var t=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,n,r):"";if(this.isStatic&&!r.hash)if(this.staticRulesId&&n.hasNameForId(this.componentId,this.staticRulesId))t=Be(t,this.staticRulesId);else{var i=ze(On(this.rules,e,n,r)),o=be(ye(this.baseHash,i)>>>0);if(!n.hasNameForId(this.componentId,o)){var a=r(i,".".concat(o),void 0,this.componentId);n.insertRules(this.componentId,o,a)}t=Be(t,o),this.staticRulesId=o}else{for(var s=ye(this.baseHash,r.hash),l="",c=0;c<this.rules.length;c++){var u=this.rules[c];if("string"==typeof u)l+=u;else if(u){var d=ze(On(u,e,n,r));s=ye(s,d+c),l+=d}}if(l){var m=be(s>>>0);n.hasNameForId(this.componentId,m)||n.insertRules(this.componentId,m,r(l,".".concat(m),void 0,this.componentId)),t=Be(t,m)}}return t},e}(),Un=e.createContext(void 0);Un.Consumer;var Fn={};function Rn(n,r,i){var o=Te(n),a=n,s=!Ae(n),l=r.attrs,c=void 0===l?ue:l,u=r.componentId,d=void 0===u?function(e,n){var r="string"!=typeof e?"sc":ge(e);Fn[r]=(Fn[r]||0)+1;var t="".concat(r,"-").concat(Pe("6.1.1"+r+Fn[r]));return n?"".concat(n,"-").concat(t):t}(r.displayName,r.parentComponentId):u,m=r.displayName,p=void 0===m?function(e){return Ae(e)?"styled.".concat(e):"Styled(".concat(function(e){return e.displayName||e.name||"Component"}(e),")")}(n):m,f=r.displayName&&r.componentId?"".concat(ge(r.displayName),"-").concat(r.componentId):r.componentId||d,g=o&&a.attrs?a.attrs.concat(c).filter(Boolean):c,C=r.shouldForwardProp;if(o&&a.shouldForwardProp){var h=a.shouldForwardProp;if(r.shouldForwardProp){var b=r.shouldForwardProp;C=function(e,n){return h(e,n)&&b(e,n)}}else C=h}var v=new In(i,f,o?a.componentStyle:void 0);function y(n,r){return function(n,r,i){var o=n.attrs,a=n.componentStyle,s=n.defaultProps,l=n.foldedComponentIds,c=n.styledComponentId,u=n.target,d=e.useContext(Un),m=yn(),p=n.shouldForwardProp||m.shouldForwardProp,f=function(e,n,r){for(var i,o=t(t({},n),{className:void 0,theme:r}),a=0;a<e.length;a+=1){var s=Me(i=e[a])?i(o):i;for(var l in s)o[l]="className"===l?Be(o[l],s[l]):"style"===l?t(t({},o[l]),s[l]):s[l]}return n.className&&(o.className=Be(o.className,n.className)),o}(o,r,function(e,n,r){return void 0===r&&(r=de),e.theme!==r.theme&&e.theme||n||r.theme}(r,d,s)||de),g=f.as||u,C={};for(var h in f)void 0===f[h]||"$"===h[0]||"as"===h||"theme"===h||("forwardedAs"===h?C.as=f.forwardedAs:p&&!p(h,g)||(C[h]=f[h]));var b=function(e,n){var r=yn();return e.generateAndInjectStyles(n,r.styleSheet,r.stylis)}(a,f),v=Be(l,c);return b&&(v+=" "+b),f.className&&(v+=" "+f.className),C[Ae(g)&&!me.has(g)?"class":"className"]=v,C.ref=i,(0,e.createElement)(g,C)}(S,n,r)}y.displayName=p;var S=e.forwardRef(y);return S.attrs=g,S.componentStyle=v,S.displayName=p,S.shouldForwardProp=C,S.foldedComponentIds=o?Be(a.foldedComponentIds,a.styledComponentId):"",S.styledComponentId=f,S.target=o?a.target:n,Object.defineProperty(S,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=o?function(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];for(var t=0,i=n;t<i.length;t++)Je(e,i[t],!0);return e}({},a.defaultProps,e):e}}),He(S,(function(){return".".concat(S.styledComponentId)})),s&&We(S,n,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),S}function Ln(e,n){for(var r=[e[0]],t=0,i=n.length;t<i;t+=1)r.push(n[t],e[t+1]);return r}new Set;var Nn=function(e){return Object.assign(e,{isCss:!0})};function kn(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];if(Me(e)||Ve(e))return Nn(On(Ln(ue,o([e],n,!0))));var t=e;return 0===n.length&&1===t.length&&"string"==typeof t[0]?On(t):Nn(On(Ln(t,n)))}function jn(e,n,r){if(void 0===r&&(r=de),!n)throw Ge(1,n);var i=function(t){for(var i=[],a=1;a<arguments.length;a++)i[a-1]=arguments[a];return e(n,r,kn.apply(void 0,o([t],i,!1)))};return i.attrs=function(i){return jn(e,n,t(t({},r),{attrs:Array.prototype.concat(r.attrs,i).filter(Boolean)}))},i.withConfig=function(i){return jn(e,n,t(t({},r),i))},i}var Wn,Mn=function(e){return jn(Rn,e)},Tn=Mn;function Bn(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var t=ze(kn.apply(void 0,o([e],n,!1))),i=Pe(t);return new Pn(i,t)}me.forEach((function(e){Tn[e]=Mn(e)})),function(){function e(e,n){this.rules=e,this.componentId=n,this.isStatic=xn(e),dn.registerId(this.componentId+1)}e.prototype.createStyles=function(e,n,r,t){var i=t(ze(On(this.rules,n,r,t)),""),o=this.componentId+e;r.insertRules(o,o,i)},e.prototype.removeStyles=function(e,n){n.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,n,r,t){e>2&&dn.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,n,r,t)}}(),function(){function n(){var n=this;this._emitSheetCSS=function(){var e=n.instance.toString(),r=tn(),t=ze([r&&'nonce="'.concat(r,'"'),"".concat(se,'="true"'),"".concat("data-styled-version",'="').concat("6.1.1",'"')].filter(Boolean)," ");return"<style ".concat(t,">").concat(e,"</style>")},this.getStyleTags=function(){if(n.sealed)throw Ge(2);return n._emitSheetCSS()},this.getStyleElement=function(){var r;if(n.sealed)throw Ge(2);var i=((r={})[se]="",r["data-styled-version"]="6.1.1",r.dangerouslySetInnerHTML={__html:n.instance.toString()},r),o=tn();return o&&(i.nonce=o),[e.createElement("style",t({},i,{key:"sc-0-0"}))]},this.seal=function(){n.sealed=!0},this.instance=new dn({isServer:!0}),this.sealed=!1}n.prototype.collectStyles=function(n){if(this.sealed)throw Ge(2);return e.createElement(Sn,{sheet:this.instance},n)},n.prototype.interleaveWithNodeStream=function(e){throw Ge(3)}}(),"__sc-".concat(se,"__");var zn,Vn,Jn,Hn,Gn=Tn.div(Wn||(zn=["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    \n    position: fixed;\n    bottom: 0;\n    left: 0;\n    \n    transition: transform 0.5s ease-out;\n    z-index: 10;\n    \n    .botao{\n        background: white;\n        border: none;\n        border-radius: 50%;\n        width: 4rem;\n        height: 4rem;\n        transition: 0.5s all ease-out;\n        z-index: 1000;\n        cursor: pointer;\n    }\n    \n    .botao:hover{\n        transform: scale(1.1);\n    }\n    \n    &.visible{\n        transform: translateY(0);\n    }\n\n    &.visible .botao{\n        transform: rotate(180deg);\n    }\n    \n    &.hidden{\n        transform: translateY(16rem);\n    }\n"],Vn||(Vn=zn.slice(0)),Wn=Object.freeze(Object.defineProperties(zn,{raw:{value:Object.freeze(Vn)}})))),Qn=Tn.form(Jn||(Jn=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    border-radius: 6.25rem 6.25rem 0rem 0rem;\n    background: #000;\n    width: 100vw;\n    padding: 2rem 0;\n    flex-shrink: 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    \n    label{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    input{\n        width: 15.375rem;\n        height: 3.375rem;\n        flex-shrink: 0;\n        border: none;\n        border-radius: 0;\n    }\n    \n    input, input::placeholder{\n        color: rgba(0, 0, 0, 0.28);\n        text-align: center;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: italic;\n        font-weight: 400;\n        line-height: normal;\n    }\n"])));function $n(){return $n=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},$n.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(Hn||(Hn={}));const Xn="popstate";function qn(e,n){if(!1===e||null==e)throw new Error(n)}function Kn(e,n){if(!e){"undefined"!=typeof console&&console.warn(n);try{throw new Error(n)}catch(e){}}}function Yn(e,n){return{usr:e.state,key:e.key,idx:n}}function Zn(e,n,r,t){return void 0===r&&(r=null),$n({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof n?nr(n):n,{state:r,key:n&&n.key||t||Math.random().toString(36).substr(2,8)})}function er(e){let{pathname:n="/",search:r="",hash:t=""}=e;return r&&"?"!==r&&(n+="?"===r.charAt(0)?r:"?"+r),t&&"#"!==t&&(n+="#"===t.charAt(0)?t:"#"+t),n}function nr(e){let n={};if(e){let r=e.indexOf("#");r>=0&&(n.hash=e.substr(r),e=e.substr(0,r));let t=e.indexOf("?");t>=0&&(n.search=e.substr(t),e=e.substr(0,t)),e&&(n.pathname=e)}return n}var rr;function tr(e,n,r){void 0===r&&(r="/");let t=hr(("string"==typeof n?nr(n):n).pathname||"/",r);if(null==t)return null;let i=ir(e);!function(e){e.sort(((e,n)=>e.score!==n.score?n.score-e.score:function(e,n){return e.length===n.length&&e.slice(0,-1).every(((e,r)=>e===n[r]))?e[e.length-1]-n[n.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),n.routesMeta.map((e=>e.childrenIndex)))))}(i);let o=null;for(let e=0;null==o&&e<i.length;++e)o=fr(i[e],Cr(t));return o}function ir(e,n,r,t){void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===t&&(t="");let i=(e,i,o)=>{let a={relativePath:void 0===o?e.path||"":o,caseSensitive:!0===e.caseSensitive,childrenIndex:i,route:e};a.relativePath.startsWith("/")&&(qn(a.relativePath.startsWith(t),'Absolute route path "'+a.relativePath+'" nested under path "'+t+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),a.relativePath=a.relativePath.slice(t.length));let s=vr([t,a.relativePath]),l=r.concat(a);e.children&&e.children.length>0&&(qn(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+s+'".'),ir(e.children,n,l,s)),(null!=e.path||e.index)&&n.push({path:s,score:pr(s,e.index),routesMeta:l})};return e.forEach(((e,n)=>{var r;if(""!==e.path&&null!=(r=e.path)&&r.includes("?"))for(let r of or(e.path))i(e,n,r);else i(e,n)})),n}function or(e){let n=e.split("/");if(0===n.length)return[];let[r,...t]=n,i=r.endsWith("?"),o=r.replace(/\?$/,"");if(0===t.length)return i?[o,""]:[o];let a=or(t.join("/")),s=[];return s.push(...a.map((e=>""===e?o:[o,e].join("/")))),i&&s.push(...a),s.map((n=>e.startsWith("/")&&""===n?"/":n))}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(rr||(rr={})),new Set(["lazy","caseSensitive","path","id","index","children"]);const ar=/^:\w+$/,sr=3,lr=2,cr=1,ur=10,dr=-2,mr=e=>"*"===e;function pr(e,n){let r=e.split("/"),t=r.length;return r.some(mr)&&(t+=dr),n&&(t+=lr),r.filter((e=>!mr(e))).reduce(((e,n)=>e+(ar.test(n)?sr:""===n?cr:ur)),t)}function fr(e,n){let{routesMeta:r}=e,t={},i="/",o=[];for(let e=0;e<r.length;++e){let a=r[e],s=e===r.length-1,l="/"===i?n:n.slice(i.length)||"/",c=gr({path:a.relativePath,caseSensitive:a.caseSensitive,end:s},l);if(!c)return null;Object.assign(t,c.params);let u=a.route;o.push({params:t,pathname:vr([i,c.pathname]),pathnameBase:yr(vr([i,c.pathnameBase])),route:u}),"/"!==c.pathnameBase&&(i=vr([i,c.pathnameBase]))}return o}function gr(e,n){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[r,t]=function(e,n,r){void 0===n&&(n=!1),void 0===r&&(r=!0),Kn("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let t=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:(\w+)(\?)?/g,((e,n,r)=>(t.push({paramName:n,isOptional:null!=r}),r?"/?([^\\/]+)?":"/([^\\/]+)")));return e.endsWith("*")?(t.push({paramName:"*"}),i+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):r?i+="\\/*$":""!==e&&"/"!==e&&(i+="(?:(?=\\/|$))"),[new RegExp(i,n?void 0:"i"),t]}(e.path,e.caseSensitive,e.end),i=n.match(r);if(!i)return null;let o=i[0],a=o.replace(/(.)\/+$/,"$1"),s=i.slice(1);return{params:t.reduce(((e,n,r)=>{let{paramName:t,isOptional:i}=n;if("*"===t){let e=s[r]||"";a=o.slice(0,o.length-e.length).replace(/(.)\/+$/,"$1")}const l=s[r];return e[t]=i&&!l?void 0:function(e,n){try{return decodeURIComponent(e)}catch(r){return Kn(!1,'The value for the URL param "'+n+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+r+")."),e}}(l||"",t),e}),{}),pathname:o,pathnameBase:a,pattern:e}}function Cr(e){try{return decodeURI(e)}catch(n){return Kn(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}function hr(e,n){if("/"===n)return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let r=n.endsWith("/")?n.length-1:n.length,t=e.charAt(r);return t&&"/"!==t?null:e.slice(r)||"/"}function br(e,n,r,t){return"Cannot include a '"+e+"' character in a manually specified `to."+n+"` field ["+JSON.stringify(t)+"].  Please separate it out to the `to."+r+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}const vr=e=>e.join("/").replace(/\/\/+/g,"/"),yr=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Sr=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",Pr=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;const Ar=["post","put","patch","delete"],_r=(new Set(Ar),["get",...Ar]);function Dr(){return Dr=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},Dr.apply(this,arguments)}new Set(_r),new Set([301,302,303,307,308]),new Set([307,308]),Symbol("deferred");const Er=e.createContext(null),Or=e.createContext(null),xr=e.createContext(null),wr=e.createContext(null),Ir=e.createContext({outlet:null,matches:[],isDataRoute:!1}),Ur=e.createContext(null);function Fr(){return null!=e.useContext(wr)}function Rr(){return Fr()||qn(!1),e.useContext(wr).location}function Lr(n){e.useContext(xr).static||e.useLayoutEffect(n)}function Nr(){let{isDataRoute:n}=e.useContext(Ir);return n?function(){let{router:n}=function(n){let r=e.useContext(Er);return r||qn(!1),r}(zr.UseNavigateStable),r=Jr(Vr.UseNavigateStable),t=e.useRef(!1);return Lr((()=>{t.current=!0})),e.useCallback((function(e,i){void 0===i&&(i={}),t.current&&("number"==typeof e?n.navigate(e):n.navigate(e,Dr({fromRouteId:r},i)))}),[n,r])}():function(){Fr()||qn(!1);let n=e.useContext(Er),{basename:r,navigator:t}=e.useContext(xr),{matches:i}=e.useContext(Ir),{pathname:o}=Rr(),a=JSON.stringify(function(e){return function(e){return e.filter(((e,n)=>0===n||e.route.path&&e.route.path.length>0))}(e).map(((n,r)=>r===e.length-1?n.pathname:n.pathnameBase))}(i)),s=e.useRef(!1);return Lr((()=>{s.current=!0})),e.useCallback((function(e,i){if(void 0===i&&(i={}),!s.current)return;if("number"==typeof e)return void t.go(e);let l=function(e,n,r,t){let i;void 0===t&&(t=!1),"string"==typeof e?i=nr(e):(i=$n({},e),qn(!i.pathname||!i.pathname.includes("?"),br("?","pathname","search",i)),qn(!i.pathname||!i.pathname.includes("#"),br("#","pathname","hash",i)),qn(!i.search||!i.search.includes("#"),br("#","search","hash",i)));let o,a=""===e||""===i.pathname,s=a?"/":i.pathname;if(null==s)o=r;else if(t){let e=n[n.length-1].replace(/^\//,"").split("/");if(s.startsWith("..")){let n=s.split("/");for(;".."===n[0];)n.shift(),e.pop();i.pathname=n.join("/")}o="/"+e.join("/")}else{let e=n.length-1;if(s.startsWith("..")){let n=s.split("/");for(;".."===n[0];)n.shift(),e-=1;i.pathname=n.join("/")}o=e>=0?n[e]:"/"}let l=function(e,n){void 0===n&&(n="/");let{pathname:r,search:t="",hash:i=""}="string"==typeof e?nr(e):e,o=r?r.startsWith("/")?r:function(e,n){let r=n.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?r.length>1&&r.pop():"."!==e&&r.push(e)})),r.length>1?r.join("/"):"/"}(r,n):n;return{pathname:o,search:Sr(t),hash:Pr(i)}}(i,o),c=s&&"/"!==s&&s.endsWith("/"),u=(a||"."===s)&&r.endsWith("/");return l.pathname.endsWith("/")||!c&&!u||(l.pathname+="/"),l}(e,JSON.parse(a),o,"path"===i.relative);null==n&&"/"!==r&&(l.pathname="/"===l.pathname?r:vr([r,l.pathname])),(i.replace?t.replace:t.push)(l,i.state,i)}),[r,t,a,o,n])}()}function kr(n,r,t){Fr()||qn(!1);let{navigator:i}=e.useContext(xr),{matches:o}=e.useContext(Ir),a=o[o.length-1],s=a?a.params:{},l=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let c,u=Rr();if(r){var d;let e="string"==typeof r?nr(r):r;"/"===l||(null==(d=e.pathname)?void 0:d.startsWith(l))||qn(!1),c=e}else c=u;let m=c.pathname||"/",p=tr(n,{pathname:"/"===l?m:m.slice(l.length)||"/"}),f=function(n,r,t){var i;if(void 0===r&&(r=[]),void 0===t&&(t=null),null==n){var o;if(null==(o=t)||!o.errors)return null;n=t.matches}let a=n,s=null==(i=t)?void 0:i.errors;if(null!=s){let e=a.findIndex((e=>e.route.id&&(null==s?void 0:s[e.route.id])));e>=0||qn(!1),a=a.slice(0,Math.min(a.length,e+1))}return a.reduceRight(((n,i,o)=>{let l=i.route.id?null==s?void 0:s[i.route.id]:null,c=null;t&&(c=i.route.errorElement||Wr);let u=r.concat(a.slice(0,o+1)),d=()=>{let r;return r=l?c:i.route.Component?e.createElement(i.route.Component,null):i.route.element?i.route.element:n,e.createElement(Tr,{match:i,routeContext:{outlet:n,matches:u,isDataRoute:null!=t},children:r})};return t&&(i.route.ErrorBoundary||i.route.errorElement||0===o)?e.createElement(Mr,{location:t.location,revalidation:t.revalidation,component:c,error:l,children:d(),routeContext:{outlet:null,matches:u,isDataRoute:!0}}):d()}),null)}(p&&p.map((e=>Object.assign({},e,{params:Object.assign({},s,e.params),pathname:vr([l,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?l:vr([l,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,t);return r&&f?e.createElement(wr.Provider,{value:{location:Dr({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:Hn.Pop}},f):f}function jr(){let n=function(){var n;let r=e.useContext(Ur),t=function(n){let r=e.useContext(Or);return r||qn(!1),r}(Vr.UseRouteError),i=Jr(Vr.UseRouteError);return r||(null==(n=t.errors)?void 0:n[i])}(),r=function(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}(n)?n.status+" "+n.statusText:n instanceof Error?n.message:JSON.stringify(n),t=n instanceof Error?n.stack:null,i={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return e.createElement(e.Fragment,null,e.createElement("h2",null,"Unexpected Application Error!"),e.createElement("h3",{style:{fontStyle:"italic"}},r),t?e.createElement("pre",{style:i},t):null,null)}const Wr=e.createElement(jr,null);class Mr extends e.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,n){return n.location!==e.location||"idle"!==n.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||n.error,location:n.location,revalidation:e.revalidation||n.revalidation}}componentDidCatch(e,n){console.error("React Router caught the following error during render",e,n)}render(){return this.state.error?e.createElement(Ir.Provider,{value:this.props.routeContext},e.createElement(Ur.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Tr(n){let{routeContext:r,match:t,children:i}=n,o=e.useContext(Er);return o&&o.static&&o.staticContext&&(t.route.errorElement||t.route.ErrorBoundary)&&(o.staticContext._deepestRenderedBoundaryId=t.route.id),e.createElement(Ir.Provider,{value:r},i)}var Br,zr=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(zr||{}),Vr=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Vr||{});function Jr(n){let r=function(n){let r=e.useContext(Ir);return r||qn(!1),r}(),t=r.matches[r.matches.length-1];return t.route.id||qn(!1),t.route.id}function Hr(e){qn(!1)}function Gr(n){let{basename:r="/",children:t=null,location:i,navigationType:o=Hn.Pop,navigator:a,static:s=!1}=n;Fr()&&qn(!1);let l=r.replace(/^\/*/,"/"),c=e.useMemo((()=>({basename:l,navigator:a,static:s})),[l,a,s]);"string"==typeof i&&(i=nr(i));let{pathname:u="/",search:d="",hash:m="",state:p=null,key:f="default"}=i,g=e.useMemo((()=>{let e=hr(u,l);return null==e?null:{location:{pathname:e,search:d,hash:m,state:p,key:f},navigationType:o}}),[l,u,d,m,p,f,o]);return null==g?null:e.createElement(xr.Provider,{value:c},e.createElement(wr.Provider,{children:t,value:g}))}function Qr(e){let{children:n,location:r}=e;return kr($r(n),r)}function $r(n,r){void 0===r&&(r=[]);let t=[];return e.Children.forEach(n,((n,i)=>{if(!e.isValidElement(n))return;let o=[...r,i];if(n.type===e.Fragment)return void t.push.apply(t,$r(n.props.children,o));n.type!==Hr&&qn(!1),n.props.index&&n.props.children&&qn(!1);let a={id:n.props.id||o.join("-"),caseSensitive:n.props.caseSensitive,element:n.props.element,Component:n.props.Component,index:n.props.index,path:n.props.path,loader:n.props.loader,action:n.props.action,errorElement:n.props.errorElement,ErrorBoundary:n.props.ErrorBoundary,hasErrorBoundary:null!=n.props.ErrorBoundary||null!=n.props.errorElement,shouldRevalidate:n.props.shouldRevalidate,handle:n.props.handle,lazy:n.props.lazy};n.props.children&&(a.children=$r(n.props.children,o)),t.push(a)})),t}n.startTransition,new Promise((()=>{})),e.Component;var Xr=Tn.button(Br||(Br=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 13.0625rem;\n    height: 3rem;\n    flex-shrink: 0;\n    background: #CD0909;\n\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.25rem;\n    font-style: italic;\n    font-weight: 400;\n    line-height: normal;\n    border: none;\n\n    transition: background 0.3s ease-in-out;\n    cursor: pointer;\n\n    &:hover {\n        background: #A00000;\n    }\n\n    &:active {\n        background: #fc2f2f;\n    }\n\n    &:disabled {\n        background: #A0A0A0;\n        cursor: not-allowed;\n        color: #FFF;\n    }\n"]))),qr=i(893);const Kr=function(e){var n=e.type,r=e.disabled,t=e.children,i=e.onClick,o=e.className;return(0,qr.jsx)(Xr,{type:n,disabled:r,onClick:i,className:o,children:t})};function Yr(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const Zr=function(n){var r,t,i=n.className,o=(r=(0,e.useState)(""),t=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(r,t)||function(e,n){if(e){if("string"==typeof e)return Yr(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Yr(e,n):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1],l=Nr();return(0,qr.jsxs)(Qn,{className:i,onSubmit:function(e){e.preventDefault(),localStorage.setItem("name",a),localStorage.setItem("pontuacao","0"),localStorage.setItem("toolTipCronograma","false"),l("/cronograma",{state:{name:a}})},children:[(0,qr.jsx)("label",{htmlFor:"name",children:"NOME"}),(0,qr.jsx)("input",{type:"text",id:"name",value:a,onChange:function(e){s(e.target.value)},placeholder:"digite seu nome"}),(0,qr.jsx)(Kr,{type:"submit",disabled:!a.trim(),children:"ENTRE"})]})};var et;Tn.div(et||(et=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n"])));var nt=function(e){var n=e.className,r=e.onClick;return(0,qr.jsx)("svg",{className:n,onClick:r,xmlns:"http://www.w3.org/2000/svg",width:"55",height:"55",viewBox:"0 0 55 55",fill:"none",children:(0,qr.jsx)("path",{d:"M41.9212 35.038C42.8161 34.1431 42.8161 32.692 41.9212 31.7971L30.7099 20.5967C28.9197 18.8083 26.0189 18.809 24.2296 20.5983L13.0226 31.8053C12.1276 32.7002 12.1276 34.1513 13.0226 35.0462C13.9175 35.9413 15.3685 35.9413 16.2635 35.0462L25.8555 25.4542C26.7506 24.5593 28.2015 24.5593 29.0964 25.4542L38.6804 35.038C39.5753 35.9329 41.0263 35.9329 41.9212 35.038Z",fill:"#CD0909"})})};function rt(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const tt=function(){var n,r,t=(n=(0,e.useState)(!1),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(n,r)||function(e,n){if(e){if("string"==typeof e)return rt(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?rt(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=t[0],o=t[1];return(0,qr.jsxs)(Gn,{className:i?"visible":"hidden",children:[(0,qr.jsx)(nt,{className:"botao",onClick:function(){o(!i)}}),(0,qr.jsx)(Zr,{className:"input"})]})};var it,ot=Tn.article(it||(it=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin-top: 4rem;\n    \n  .boas-vindas {\n      color: #FFF;\n      font-family: Inter;\n      font-size: 1.5rem;\n      font-style: italic;\n      font-weight: 400;\n      line-height: normal;\n  }\n    \n    .titulo {\n        display: flex;\n        flex-direction: column;\n        \n        .titulo-principal {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 2rem;\n            font-style: normal;\n            font-weight: 600;\n            line-height: normal;\n            letter-spacing: 0.09rem;\n        }\n        \n        .titulo-secundario {\n            color: #CD0909;\n            font-family: Inter;\n            font-size: 3.4rem;\n            font-style: italic;\n            font-weight: 700;\n            line-height: normal;\n            letter-spacing: 0.15rem;\n        }\n    }\n    \n    .logo svg{\n        width: 10rem;\n        height: 2rem;\n    }\n    \n"]))),at=function(e){var n=e.onClick,r=e.className;return(0,qr.jsxs)("svg",{className:r,onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"90",height:"14",viewBox:"0 0 90 14",fill:"none",children:[(0,qr.jsx)("path",{d:"M49.6598 2.73711V13.8267H49.3088V2.73711H49.6598Z",fill:"white"}),(0,qr.jsx)("path",{d:"M53.1698 13.8267V2.73711H53.5208V7.63213H53.5647C53.7109 7.17007 53.923 6.77117 54.2009 6.43545C54.4787 6.09612 54.806 5.83621 55.1826 5.65571C55.5592 5.47161 55.9705 5.37956 56.4165 5.37956C57.0747 5.37956 57.6469 5.56907 58.1331 5.94811C58.6194 6.32715 58.996 6.84156 59.2629 7.49135C59.5298 8.14113 59.6633 8.87394 59.6633 9.68978C59.6633 10.5092 59.5298 11.2438 59.2629 11.8936C58.9997 12.5434 58.6249 13.0578 58.1386 13.4369C57.656 13.8123 57.082 14 56.4165 14C55.9668 14 55.5537 13.9079 55.1771 13.7238C54.8041 13.5397 54.4806 13.2798 54.2064 12.9441C53.9321 12.6048 53.7182 12.2059 53.5647 11.7474H53.5208V13.8267H53.1698ZM53.5208 9.68978C53.5208 10.4406 53.6378 11.1157 53.8718 11.7149C54.1058 12.3106 54.4385 12.7835 54.87 13.1336C55.3051 13.4802 55.8206 13.6534 56.4165 13.6534C57.0125 13.6534 57.5262 13.4802 57.9577 13.1336C58.3927 12.7835 58.7273 12.3106 58.9613 11.7149C59.1953 11.1157 59.3123 10.4406 59.3123 9.68978C59.3123 8.93892 59.1935 8.26567 58.9558 7.67004C58.7218 7.07079 58.3873 6.5979 57.9522 6.25135C57.5207 5.90119 57.0089 5.72611 56.4165 5.72611C55.8242 5.72611 55.3105 5.90119 54.8754 6.25135C54.444 6.5979 54.1095 7.07079 53.8718 7.67004C53.6378 8.26567 53.5208 8.93892 53.5208 9.68978Z",fill:"white"}),(0,qr.jsx)("path",{d:"M62.1367 13.8267V5.50951H62.4877V6.7441H62.5316C62.6852 6.33979 62.9594 6.0149 63.3543 5.76942C63.7528 5.52395 64.2318 5.40121 64.7912 5.40121C65.4273 5.40121 65.9337 5.55644 66.3103 5.86689C66.6906 6.17734 66.952 6.59248 67.0946 7.11231H67.1385C67.2774 6.59248 67.5589 6.17734 67.9831 5.86689C68.4072 5.55644 68.9373 5.40121 69.5735 5.40121C70.4181 5.40121 71.0415 5.66654 71.4437 6.1972C71.8495 6.72424 72.0524 7.40471 72.0524 8.2386V13.8267H71.7014V8.2386C71.7014 7.50218 71.5333 6.90293 71.1969 6.44087C70.8605 5.9788 70.3194 5.74777 69.5735 5.74777C68.8276 5.74777 68.2573 5.98241 67.8624 6.4517C67.4675 6.91737 67.2701 7.51301 67.2701 8.2386V13.8267H66.9191V8.2386C66.9191 7.50218 66.7509 6.90293 66.4145 6.44087C66.0782 5.9788 65.537 5.74777 64.7912 5.74777C64.2939 5.74777 63.8734 5.85426 63.5298 6.06724C63.1897 6.28023 62.9301 6.57443 62.751 6.94986C62.5755 7.32529 62.4877 7.75487 62.4877 8.2386V13.8267H62.1367Z",fill:"white"}),(0,qr.jsx)("path",{d:"M78.1908 14C77.4559 14 76.8124 13.8105 76.2603 13.4314C75.7119 13.0524 75.2859 12.538 74.9825 11.8882C74.679 11.2384 74.5273 10.5056 74.5273 9.68978C74.5273 8.87394 74.679 8.14113 74.9825 7.49135C75.2896 6.84156 75.7064 6.32715 76.2329 5.94811C76.7594 5.56907 77.3535 5.37956 78.0153 5.37956C78.5052 5.37956 78.9586 5.48244 79.3754 5.6882C79.7959 5.89397 80.1615 6.17915 80.4723 6.54375C80.7831 6.90835 81.0244 7.3289 81.1962 7.80541C81.3717 8.27831 81.4595 8.78369 81.4595 9.32157V9.66812H74.7028V9.32157H81.1085C81.1085 8.65374 80.9695 8.04908 80.6917 7.50759C80.4138 6.9625 80.0409 6.52931 79.5729 6.20803C79.1049 5.88675 78.5857 5.72611 78.0153 5.72611C77.4376 5.72611 76.9148 5.89577 76.4468 6.2351C75.9788 6.57443 75.604 7.0365 75.3225 7.6213C75.041 8.20611 74.8929 8.86672 74.8783 9.60314V9.64646C74.8783 10.372 75.0062 11.0399 75.2622 11.65C75.5218 12.2564 75.8983 12.7419 76.3919 13.1065C76.8855 13.4711 77.4852 13.6534 78.1908 13.6534C78.71 13.6534 79.1451 13.5632 79.4961 13.3827C79.8507 13.2022 80.1341 12.9946 80.3462 12.76C80.5619 12.5254 80.7209 12.325 80.8233 12.159L81.1085 12.3539C80.9842 12.5633 80.7977 12.7961 80.5491 13.0524C80.3005 13.3087 79.9824 13.5307 79.5948 13.7184C79.2072 13.9061 78.7392 14 78.1908 14Z",fill:"white"}),(0,qr.jsx)("path",{d:"M86.9726 14C86.2926 14 85.6856 13.8123 85.1518 13.4369C84.6217 13.0578 84.203 12.5434 83.8959 11.8936C83.5924 11.2438 83.4407 10.5092 83.4407 9.68978C83.4407 8.87755 83.5924 8.14654 83.8959 7.49676C84.1994 6.84337 84.6162 6.32715 85.1463 5.94811C85.6802 5.56907 86.2889 5.37956 86.9726 5.37956C87.4772 5.37956 87.9397 5.48785 88.3602 5.70445C88.7843 5.91743 89.139 6.21705 89.4241 6.60331C89.7093 6.98596 89.894 7.42998 89.9781 7.93537H89.6051C89.4918 7.28197 89.1901 6.75132 88.7002 6.3434C88.2139 5.93187 87.6381 5.72611 86.9726 5.72611C86.3693 5.72611 85.8264 5.89938 85.3438 6.24593C84.8648 6.58887 84.4864 7.05996 84.2085 7.65921C83.9306 8.25484 83.7917 8.9317 83.7917 9.68978C83.7917 10.4262 83.9252 11.094 84.1921 11.6933C84.4626 12.2925 84.8374 12.769 85.3164 13.1228C85.7953 13.4766 86.3474 13.6534 86.9726 13.6534C87.4223 13.6534 87.8355 13.5614 88.2121 13.3773C88.5887 13.1896 88.9013 12.9261 89.1499 12.5867C89.4022 12.2474 89.5612 11.8521 89.6271 11.4009H90C89.9196 11.9243 89.7367 12.381 89.4516 12.7708C89.1664 13.1607 88.8099 13.4639 88.3821 13.6805C87.9543 13.8935 87.4845 14 86.9726 14Z",fill:"white"}),(0,qr.jsx)("path",{d:"M0 3.55856V0.683474H11.57V3.55856H7.56597V13.8267H4.00399V3.55856H0Z",fill:"#CD0909"}),(0,qr.jsx)("path",{d:"M12.9301 13.8267V0.683474H22.524V3.55856H16.5441V5.81756H22.03V8.69264H16.5441V10.9516H22.498V13.8267H12.9301Z",fill:"#CD0909"}),(0,qr.jsx)("path",{d:"M29.4384 13.8267H24.3164V0.683474H29.3864C30.7557 0.683474 31.9387 0.946596 32.9354 1.47284C33.9364 1.9948 34.7077 2.7478 35.2494 3.73184C35.7954 4.71159 36.0684 5.88601 36.0684 7.2551C36.0684 8.62419 35.7975 9.80075 35.2559 10.7848C34.7142 11.7645 33.9472 12.5175 32.9549 13.0438C31.9626 13.5657 30.7904 13.8267 29.4384 13.8267ZM27.9304 10.7976H29.3084C29.9671 10.7976 30.5282 10.6928 30.9919 10.4832C31.4599 10.2735 31.8152 9.91199 32.0579 9.39858C32.3049 8.88517 32.4284 8.17068 32.4284 7.2551C32.4284 6.33952 32.3027 5.62503 32.0514 5.11162C31.8044 4.59821 31.4404 4.23669 30.9594 4.02705C30.4827 3.8174 29.8977 3.71258 29.2044 3.71258H27.9304V10.7976Z",fill:"#CD0909"}),(0,qr.jsx)("path",{d:"M40.2154 0L41.5804 2.39056H41.6453L43.0266 0H45.5453L43.0591 4.10727L45.6428 8.21453H43.0591L41.6453 5.77584H41.5804L40.1666 8.21453H37.5991L40.1504 4.10727L37.6804 0H40.2154Z",fill:"#CD0909"})]})};const st=function(){return(0,qr.jsxs)(ot,{children:[(0,qr.jsx)("div",{className:"boas-vindas",children:"Seja bem-vindo ao:"}),(0,qr.jsxs)("div",{className:"titulo",children:[(0,qr.jsx)("div",{className:"titulo-principal",children:"RECONSTRUINDO"}),(0,qr.jsx)("div",{className:"titulo-secundario",children:"O FUTURO"})]}),(0,qr.jsx)("div",{className:"logo",children:(0,qr.jsx)(at,{})})]})};var lt,ct=Tn.article(lt||(lt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    margin-top: 4rem;\n    z-index: 0;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    \n    img {\n        height: 40.3125rem;\n        z-index: 0;\n    }\n"])));const ut=function(){return(0,qr.jsx)(ct,{children:(0,qr.jsx)("img",{src:"imagens/telainicial.png"})})},dt=function(){return(0,qr.jsxs)(qr.Fragment,{children:[(0,qr.jsx)(st,{}),(0,qr.jsx)(ut,{}),(0,qr.jsx)(tt,{})]})};var mt=i(935),pt=i.t(mt,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]),new Map;const ft=n.startTransition;function gt(n){let{basename:r,children:t,future:i,window:o}=n,a=e.useRef();var s;null==a.current&&(a.current=(void 0===(s={window:o,v5Compat:!0})&&(s={}),function(e,n,r,t){void 0===t&&(t={});let{window:i=document.defaultView,v5Compat:o=!1}=t,a=i.history,s=Hn.Pop,l=null,c=u();function u(){return(a.state||{idx:null}).idx}function d(){s=Hn.Pop;let e=u(),n=null==e?null:e-c;c=e,l&&l({action:s,location:p.location,delta:n})}function m(e){let n="null"!==i.location.origin?i.location.origin:i.location.href,r="string"==typeof e?e:er(e);return qn(n,"No window.location.(origin|href) available to create URL for href: "+r),new URL(r,n)}null==c&&(c=0,a.replaceState($n({},a.state,{idx:c}),""));let p={get action(){return s},get location(){return e(i,a)},listen(e){if(l)throw new Error("A history only accepts one active listener");return i.addEventListener(Xn,d),l=e,()=>{i.removeEventListener(Xn,d),l=null}},createHref:e=>n(i,e),createURL:m,encodeLocation(e){let n=m(e);return{pathname:n.pathname,search:n.search,hash:n.hash}},push:function(e,n){s=Hn.Push;let t=Zn(p.location,e,n);r&&r(t,e),c=u()+1;let d=Yn(t,c),m=p.createHref(t);try{a.pushState(d,"",m)}catch(e){if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;i.location.assign(m)}o&&l&&l({action:s,location:p.location,delta:1})},replace:function(e,n){s=Hn.Replace;let t=Zn(p.location,e,n);r&&r(t,e),c=u();let i=Yn(t,c),d=p.createHref(t);a.replaceState(i,"",d),o&&l&&l({action:s,location:p.location,delta:0})},go:e=>a.go(e)};return p}((function(e,n){let{pathname:r="/",search:t="",hash:i=""}=nr(e.location.hash.substr(1));return r.startsWith("/")||r.startsWith(".")||(r="/"+r),Zn("",{pathname:r,search:t,hash:i},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}),(function(e,n){let r=e.document.querySelector("base"),t="";if(r&&r.getAttribute("href")){let n=e.location.href,r=n.indexOf("#");t=-1===r?n:n.slice(0,r)}return t+"#"+("string"==typeof n?n:er(n))}),(function(e,n){Kn("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(n)+")")}),s)));let l=a.current,[c,u]=e.useState({action:l.action,location:l.location}),{v7_startTransition:d}=i||{},m=e.useCallback((e=>{d&&ft?ft((()=>u(e))):u(e)}),[u,d]);return e.useLayoutEffect((()=>l.listen(m)),[l,m]),e.createElement(Gr,{basename:r,children:t,location:c.location,navigationType:c.action,navigator:l})}var Ct,ht,bt;pt.flushSync,"undefined"!=typeof window&&void 0!==window.document&&window.document.createElement,function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"}(Ct||(Ct={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(ht||(ht={}));var vt=Tn.header(bt||(bt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n    \n    .logo{\n        width: 9rem;\n        height: 1.375rem;\n    }\n    \n"]))),yt=function(e){var n=e.onClick;return(0,qr.jsxs)("svg",{onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 18 18",fill:"none",children:[(0,qr.jsx)("path",{d:"M16.2854 9.0002H8.27271",stroke:"white",strokeLinecap:"round",strokeLinejoin:"round"}),(0,qr.jsx)("path",{d:"M13.5101 12.6364L16.9999 9L13.5101 5.36363",stroke:"white",strokeLinecap:"round",strokeLinejoin:"round"}),(0,qr.jsx)("path",{d:"M10.4545 4V1H1V17H10.4545V14",stroke:"white",strokeLinecap:"round",strokeLinejoin:"round"})]})};const St=function(){var e=Nr();return(0,qr.jsxs)(vt,{children:[(0,qr.jsx)(at,{onClick:function(){e("/cronograma")},className:"logo"}),(0,qr.jsx)(yt,{onClick:function(){e("/")}})]})},Pt=function(e){return(0,qr.jsxs)(qr.Fragment,{children:[(0,qr.jsx)(St,{}),(0,qr.jsx)("div",{className:"container",children:e.children})]})};var At,_t,Dt=Tn.article(At||(At=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    gap: 2rem;\n    justify-content: center;\n\n    img {\n        width: 4.6875rem;\n        height: 4.6875rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n\n        border-radius: 3.125rem;\n        border: 2px solid #FFF;\n    }\n\n    &.posterior{\n        .nomePalestrante {\n            color: #A7A7A7 !important;\n        }\n        \n        img {\n            border-radius: 3.125rem;\n            border: 3px solid #878787;\n            filter: saturate(0%);\n        }\n    }\n    \n    &.dentro{\n        .nomePalestrante {\n            color: #CD0909 !important;\n        }\n        \n        img {\n            border: 2px solid #CD0909 !important;\n        }\n    }\n\n    .informacoesPalestrante {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n        \n        .nomePalestrante {\n            color: #FFF;\n            font-family: Inter;\n            font-size: 1.25rem;\n            font-style: normal;\n            font-weight: 900;\n            line-height: normal;\n\n            text-transform: uppercase;\n        }\n    }\n    \n    .setaEnviarParaPaginaPalestrante {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        cursor: pointer;\n\n        svg {\n            width: 2.5rem;\n            height: 2.5rem;\n        }\n    }\n"]))),Et=Tn.article(_t||(_t=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: none;\n    position: absolute;\n    width: 19rem;\n    height: 39.4375rem;\n    flex-shrink: 0;\n    border-radius: 0.625rem;\n    background: #FFF;\n    z-index: 2;\n    color: black;\n    padding-bottom: 2rem;\n    \n    &.active{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 2rem;\n    }\n    \n    img{\n        width: 17.5rem;\n        height: 17.5rem;\n        flex-shrink: 0;\n        aspect-ratio: 1/1;\n        border-radius: 0.625rem;\n        box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n    }\n    \n    .informacoes-convidado{\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        width: 14.5625rem;\n    }\n\n    .nome-convidado{\n        color: #000;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .horario{\n        color: #000;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .descricao-convidado{\n        width: 14.5625rem;\n        flex-shrink: 0;\n\n        color: #000;\n        font-family: Inter;\n        font-size: 0.75rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n"])));const Ot=function(e){var n=e.className,r=e.onClick;return(0,qr.jsxs)(Et,{className:n,children:[(0,qr.jsx)("div",{className:"fechar",onClick:r,children:"X"}),(0,qr.jsx)("img",{src:"imagens/fotoDefaultCronogramaPalestrante.png",alt:"Foto do convidado",className:"imagem-convidado"}),(0,qr.jsxs)("div",{className:"informacoes-convidado",children:[(0,qr.jsx)("div",{className:"nome-convidado",children:"Nome do Convidado"}),(0,qr.jsx)("div",{className:"horario",children:"10:00 - 11:00"})]}),(0,qr.jsx)("div",{className:"descricao-convidado",children:"Professor e Coordenador dos cursos de Publicidade e Propaganda no IBMEC, com mais de 10 anos de experiência no ensino superior e na indústria da comunicação, o Prof. Victor une sólida formação acadêmica a uma atuação prática e estratégica em marketing e branding."}),(0,qr.jsx)(Kr,{children:"DINÂMICA"})]})};function xt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return wt(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?wt(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wt(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const It=function(n){var r=n.urlFotoConvidado,t=void 0===r?"imagens/fotoDefaultCronogramaPalestrante.png":r,i=n.nomeConvidado,o=n.horarioInicio,a=n.horarioFim,s=n.onClick,l=n.onClickFinalizado,c=n.id,u=xt((0,e.useState)(new Date),2),d=(u[0],u[1]),m=xt((0,e.useState)(!1),2),p=m[0],f=m[1];(0,e.useEffect)((function(){var e=setInterval((function(){var e=new Date;d(e)}),6e4);return function(){return clearInterval(e)}}),[]);var g=function(e,n){var r,t,i,o=xt(e.split(":").map(Number),2),a=o[0],s=o[1],l=xt(n.split(":").map(Number),2),c=l[0],u=l[1],d=xt((r=new Date,t=r.getHours().toString().padStart(2,"0"),i=r.getMinutes().toString().padStart(2,"0"),"".concat(t,":").concat(i)).split(":").map(Number),2),m=d[0],p=d[1],f=new Date;f.setHours(a,s);var g=new Date;g.setHours(c,u);var C=new Date;return C.setHours(m,p),C<f?"anterior":C>g?"posterior":"dentro"},C=function(){f((function(e){return!e}))},h=g(o,a);return(0,qr.jsxs)(Dt,{className:h,id:c,onClick:C,children:[(0,qr.jsx)("img",{src:t,alt:"Foto do convidado",className:"fotoConvidado"}),(0,qr.jsxs)("div",{className:"informacoesPalestrante",children:[(0,qr.jsx)("div",{className:"nomePalestrante",children:i}),(0,qr.jsxs)("div",{className:"horarioPalestrante",children:[o," - ",a]})]}),(0,qr.jsxs)("div",{className:"setaEnviarParaPaginaPalestrante",children:["anterior"===g(o,a)&&(0,qr.jsx)("div",{className:"toolTip",children:(0,qr.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,qr.jsxs)("g",{clipPath:"url(#clip0_45_430)",children:[(0,qr.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2001 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8143 5.98995e-07H8.18572C7.44668 -0.000491588 6.7679 0.302368 6.28462 0.787555C5.79949 1.27083 5.49658 1.94912 5.49756 2.68816V5.83565C5.49756 7.72734 6.28041 9.53428 7.66056 10.8282L9.98751 13.0096C10.1156 13.1301 10.1887 13.2978 10.1887 13.474V14.5258C10.1887 14.702 10.1156 14.8692 9.98801 14.9894L7.66062 17.1717C6.28047 18.4651 5.49762 20.2725 5.49762 22.1642V25.3117C5.49663 26.0508 5.7996 26.7291 6.28468 27.2123C6.76801 27.6975 7.44673 28.0004 8.18578 27.9999H19.8143C20.5534 28.0004 21.2317 27.6975 21.715 27.2123C22.2001 26.729 22.503 26.0508 22.5026 25.3117V22.1643C22.5026 20.2726 21.7197 18.4652 20.3396 17.1718L18.0126 14.9899C17.884 14.8693 17.8115 14.7021 17.8115 14.5259V13.4741C17.8114 13.2979 17.884 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2637 25.7612C20.1454 25.878 19.9933 25.9472 19.8143 25.9477H8.18572C8.00673 25.9472 7.8541 25.878 7.73587 25.7612C7.61905 25.643 7.55031 25.4908 7.54982 25.3118V22.1643C7.54982 20.8402 8.09812 19.5745 9.06417 18.6692L11.3911 16.4869C11.9333 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9333 12.0205 11.3907 11.5126L9.06417 9.33084C8.09806 8.42554 7.54982 7.16029 7.54982 5.83576V2.68822C7.55031 2.50923 7.61905 2.35709 7.73587 2.23836C7.8541 2.12204 8.00673 2.05275 8.18572 2.05231H19.8143C19.9932 2.05275 20.1454 2.12198 20.2637 2.23836C20.3805 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6089 11.5126C16.0667 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6094 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"white"}),(0,qr.jsx)("path",{d:"M12.9752 20.7238L8.74622 24.9528H19.2532L15.0242 20.7238C14.4585 20.1586 13.5414 20.1586 12.9752 20.7238Z",fill:"white"})]}),(0,qr.jsx)("defs",{children:(0,qr.jsx)("clipPath",{id:"clip0_45_430",children:(0,qr.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]})}),"posterior"===g(o,a)&&(0,qr.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:l,children:(0,qr.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M36.6667 20C36.6667 29.2047 29.2047 36.6667 20 36.6667C10.7953 36.6667 3.33337 29.2047 3.33337 20C3.33337 10.7952 10.7953 3.33333 20 3.33333C29.2047 3.33333 36.6667 10.7952 36.6667 20ZM26.7172 14.9494C27.2054 15.4376 27.2054 16.2291 26.7172 16.7172L18.3839 25.0505C17.8957 25.5387 17.1044 25.5387 16.6162 25.0505L13.2828 21.7172C12.7947 21.229 12.7947 20.4377 13.2828 19.9495C13.771 19.4613 14.5624 19.4613 15.0506 19.9495L17.5 22.3988L21.2247 18.6742L24.9495 14.9494C25.4377 14.4613 26.229 14.4613 26.7172 14.9494Z",fill:"white"})}),"dentro"===g(o,a)&&(0,qr.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",onClick:s,children:[(0,qr.jsx)("path",{d:"M1.66663 25V15C1.66663 9.47715 6.14378 5 11.6666 5H28.3333C33.8561 5 38.3333 9.47715 38.3333 15V25C38.3333 30.5228 33.8561 35 28.3333 35H11.6666C6.14378 35 1.66663 30.5228 1.66663 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qr.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qr.jsx)("path",{d:"M23.3333 25V15L29.9999 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]})]}),(0,qr.jsx)(Ot,{className:p?"modal active":"modal",onClick:C})]})};var Ut,Ft=Tn.article(Ut||(Ut=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    border-top: 3px solid #fff;;\n    border-bottom: 3px solid #fff;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    padding: 1rem 0;\n    box-sizing: border-box;\n    margin: 0 2rem;\n\n    color: #FFF;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    \n    .horario{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n    }\n    \n    .break-time {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        \n        .break {\n            color: #CD0909;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 600;\n            line-height: normal;\n        }\n\n        .time {\n            color: #FFF;\n            text-shadow: 0px 0px 11px #CD0909;\n            font-family: Inter;\n            font-size: 1.5rem;\n            font-style: italic;\n            font-weight: 300;\n            line-height: normal;\n        }\n    }\n"])));const Rt=function(e){var n=e.horarioInicio,r=void 0===n?"11:00":n,t=e.horarioFim,i=void 0===t?"12:00":t;return(0,qr.jsxs)(Ft,{children:[(0,qr.jsx)("div",{className:"horario",children:r}),(0,qr.jsxs)("div",{className:"break-time",children:[(0,qr.jsx)("div",{className:"break",children:"BREAK"}),(0,qr.jsx)("div",{className:"time",children:"TIME"})]}),(0,qr.jsx)("div",{className:"horario",children:i})]})};var Lt,Nt=Tn.article(Lt||(Lt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 320px;\n    box-sizing: border-box;\n    justify-content: space-between;\n    \n    .titulo{\n        color: #FFF;\n        text-align: left;\n        font-family: Inter,serif;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n    \n    .subtitulo{\n        color: #FFF;\n        text-align: center;\n        font-family: Inter,serif;\n        font-size: 0.875rem;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    \n    .mini{\n        width: 6rem;\n    }\n"])));const kt=function(e){var n=e.id,r=e.titulo,t=e.subtitulo,i=e.style;return(0,qr.jsxs)(Nt,{id:n,style:i,children:[(0,qr.jsx)("div",{className:"titulo",children:r}),(0,qr.jsx)("div",{className:"subtitulo",children:t})]})};var jt,Wt=Tn.article(jt||(jt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    padding: 1.25rem 1.5rem;\n    flex-shrink: 0;\n    \n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 0.5rem;\n\n    border-radius: 0.625rem;\n    background: #FFF;\n\n    color: #000;\n    font-family: Inter,serif;\n    font-size: 0.9375rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    \n    position: absolute;\n    top: ","rem;\n    left: ","rem;\n    z-index: 99999;\n    \n    &.direita{\n        align-items: flex-end;\n    }\n    \n    .ponta{\n        position: absolute;\n    }\n    \n    .esquerda{\n        top: -0.6rem;\n        left: 0.4rem;\n    }\n    \n    .direita{\n        top: -0.6rem;\n        right: 0.4rem;\n    }\n    \n    .texto{\n        max-width: ","rem;\n    }\n    \n    button{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.9375rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n\n        width: 5.375rem;\n        height: 1.5rem;\n        flex-shrink: 0;\n        background: #CD0909;\n        border: none;\n        cursor: pointer;\n        \n        &:hover{\n            background: #A00000;\n        }\n        \n        &:active{\n            background: #CD0909;\n        }\n    }\n"])),(function(e){return e.top}),(function(e){return e.left}),16);const Mt=function(e){var n=e.children,r=e.left,t=e.top,i=e.className,o=e.onClick,a=e.id,s=e.style,l=e.orientation,c=void 0===l?"esquerda":l;return(0,qr.jsxs)(Wt,{id:a,className:"".concat(i," ").concat(c),left:r,top:t,style:s,children:[(0,qr.jsx)("svg",{className:"ponta ".concat(c),xmlns:"http://www.w3.org/2000/svg",width:"14",height:"12",viewBox:"0 0 14 12",fill:"none",children:(0,qr.jsx)("path",{d:"M7 0L13.9282 12H0.0717969L7 0Z",fill:"white"})}),(0,qr.jsx)("div",{className:"texto",children:n}),(0,qr.jsx)("button",{onClick:o,children:"Entendi!"})]})};var Tt,Bt=Tn.article(Tt||(Tt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.50);\n    \n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n"])));const zt=function(e){var n=e.className;return(0,qr.jsx)(Bt,{className:n})};var Vt,Jt=Tn.article(Vt||(Vt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    \n    .status{\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        gap: 1rem;\n    }\n"])));const Ht=function(){return(0,qr.jsxs)(Jt,{children:["Aqui você consegue vê o Status do palestrante. Pode ser:",(0,qr.jsxs)("div",{className:"status",children:[(0,qr.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"34",height:"34",viewBox:"0 0 34 34",fill:"none",children:(0,qr.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M33.6666 17C33.6666 26.2047 26.2046 33.6667 17 33.6667C7.79523 33.6667 0.333313 26.2047 0.333313 17C0.333313 7.79529 7.79523 0.333374 17 0.333374C26.2046 0.333374 33.6666 7.79529 33.6666 17ZM23.7171 11.9495C24.2053 12.4376 24.2053 13.2291 23.7171 13.7172L15.3838 22.0505C14.8956 22.5387 14.1043 22.5387 13.6161 22.0505L10.2828 18.7172C9.79461 18.229 9.79461 17.4377 10.2828 16.9495C10.7709 16.4614 11.5624 16.4614 12.0505 16.9495L14.5 19.3989L18.2246 15.6742L21.9495 11.9495C22.4376 11.4613 23.229 11.4613 23.7171 11.9495Z",fill:"black"})}),(0,qr.jsx)("span",{children:"Já aconteceu."})]}),(0,qr.jsxs)("div",{className:"status",children:[(0,qr.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",children:[(0,qr.jsx)("path",{d:"M1.66669 25V15C1.66669 9.47715 6.14384 5 11.6667 5H28.3334C33.8562 5 38.3334 9.47715 38.3334 15V25C38.3334 30.5228 33.8562 35 28.3334 35H11.6667C6.14384 35 1.66669 30.5228 1.66669 25Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qr.jsx)("path",{d:"M15 15C17.7615 15 20 17.2385 20 20C20 22.7615 17.7615 25 15 25C12.2386 25 10 22.7615 10 20C10 17.2385 12.2386 15 15 15Z",stroke:"#CD0909",strokeWidth:"1.5"}),(0,qr.jsx)("path",{d:"M23.3334 25V15L30 25V15",stroke:"#CD0909",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})]}),(0,qr.jsx)("span",{children:"Acontecendo."})]}),(0,qr.jsxs)("div",{className:"status",children:[(0,qr.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"28",height:"28",viewBox:"0 0 28 28",fill:"none",children:[(0,qr.jsxs)("g",{clipPath:"url(#clip0_45_641)",children:[(0,qr.jsx)("path",{d:"M18.0121 13.0106L20.3395 10.8283C21.7196 9.53433 22.5025 7.72745 22.5025 5.83576V2.68822C22.503 1.94917 22.2 1.27083 21.7149 0.78761C21.2316 0.302368 20.5534 -0.000491588 19.8142 5.98995e-07H8.18566C7.44662 -0.000491588 6.76784 0.302368 6.28456 0.787555C5.79943 1.27083 5.49652 1.94912 5.4975 2.68816V5.83565C5.4975 7.72734 6.28035 9.53428 7.6605 10.8282L9.98745 13.0096C10.1155 13.1301 10.1886 13.2978 10.1886 13.474V14.5258C10.1886 14.702 10.1155 14.8692 9.98795 14.9894L7.66055 17.1717C6.28041 18.4651 5.49755 20.2725 5.49755 22.1642V25.3117C5.49657 26.0508 5.79954 26.7291 6.28462 27.2123C6.76795 27.6975 7.44667 28.0004 8.18572 27.9999H19.8142C20.5534 28.0004 21.2316 27.6975 21.7149 27.2123C22.2 26.729 22.503 26.0508 22.5025 25.3117V22.1643C22.5025 20.2726 21.7196 18.4652 20.3395 17.1718L18.0126 14.9899C17.8839 14.8693 17.8114 14.7021 17.8114 14.5259V13.4741C17.8114 13.2979 17.8839 13.1303 18.0121 13.0106ZM20.4502 25.3118C20.4497 25.4908 20.3805 25.643 20.2636 25.7612C20.1454 25.878 19.9932 25.9472 19.8142 25.9477H8.18566C8.00667 25.9472 7.85404 25.878 7.7358 25.7612C7.61899 25.643 7.55025 25.4908 7.54976 25.3118V22.1643C7.54976 20.8402 8.09805 19.5745 9.06411 18.6692L11.3911 16.4869C11.9332 15.9791 12.2409 15.2688 12.2409 14.5259V13.4741C12.2409 12.7308 11.9332 12.0205 11.3906 11.5126L9.06411 9.33084C8.098 8.42554 7.54976 7.16029 7.54976 5.83576V2.68822C7.55025 2.50923 7.61899 2.35709 7.7358 2.23836C7.85404 2.12204 8.00667 2.05275 8.18566 2.05231H19.8142C19.9932 2.05275 20.1454 2.12198 20.2636 2.23836C20.3804 2.35709 20.4497 2.50917 20.4502 2.68822V5.8357C20.4502 7.16023 19.9019 8.42548 18.9358 9.33078L16.6088 11.5126C16.0666 12.0204 15.7591 12.7307 15.7591 13.474V14.5259C15.7591 15.2688 16.0667 15.979 16.6093 16.4877L18.9358 18.6687C19.9019 19.5745 20.4502 20.8401 20.4502 22.1642V25.3118Z",fill:"black"}),(0,qr.jsx)("path",{d:"M12.9752 20.7239L8.74622 24.9528H19.2532L15.0242 20.7239C14.4585 20.1586 13.5414 20.1586 12.9752 20.7239Z",fill:"black"})]}),(0,qr.jsx)("defs",{children:(0,qr.jsx)("clipPath",{id:"clip0_45_641",children:(0,qr.jsx)("rect",{width:"28",height:"28",fill:"white"})})})]}),(0,qr.jsx)("span",{children:"Ainda vai acontecer."})]})]})};function Gt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Qt(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Qt(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Qt(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const $t=function(){var n=Nr(),r=Gt((0,e.useState)(0),2),t=r[0],i=r[1],o=Gt((0,e.useState)("true"!==localStorage.getItem("toolTipCronograma")),2),a=o[0],s=o[1],l=function(e){n("/palestrante",{state:{palestrante:e}})},c=function(e){n("/ranking",{state:{palestrante:e}})},u=[{nome:"Convidado 1",horario_inicio:"09:00",horario_fim:"10:00"},{nome:"Convidado 2",horario_inicio:"10:00",horario_fim:"11:00"},{nome:"Convidado 3",horario_inicio:"12:00",horario_fim:"13:00"},{nome:"Convidado 4",horario_inicio:"13:00",horario_fim:"14:00"},{nome:"Convidado 5",horario_inicio:"14:00",horario_fim:"15:00"}],d=function(){i(t+1);var e=document.querySelector("#toolTip1"),n=document.querySelector("#toolTip2"),r=document.querySelector("#toolTip3"),o=document.querySelector("#tituloCronograma"),a=document.querySelector("#cardCronograma1"),l=document.querySelector("#cardCronograma2"),c=document.querySelector(".telaPreta");return 1===t?(n.style.display="none",r.style.display="flex",a.style.zIndex="0",void(l.style.zIndex="9999")):2===t?(r.style.display="none",c.style.display="none",l.style.zIndex="0",localStorage.setItem("toolTipCronograma","true"),void s(!1)):(e.style.display="none",n.style.display="flex",o.style.zIndex="0",void(a.style.zIndex="9999"))};return(0,qr.jsxs)(Pt,{children:[(0,qr.jsxs)("div",{style:{display:a?"flex":"none",position:"absolute",width:"320px"},children:[(0,qr.jsx)(Mt,{className:"toolTip",onClick:d,left:.5,top:-19,id:"toolTip1",children:"Seja bem-vindo ao cronograma do TEDX. Aqui você consegue vê o horário de cada palestrante"}),(0,qr.jsx)(Mt,{className:"toolTip",onClick:d,left:.6,top:-14,orientation:"direita",id:"toolTip2",style:{display:"none"},children:(0,qr.jsx)(Ht,{})}),(0,qr.jsx)(Mt,{className:"toolTip",onClick:d,left:.6,top:-7,id:"toolTip3",orientation:"direita",style:{display:"none"},children:"Você pode clicar em ON para participar da dinâmica do palestrante. É um Quiz que no final te permite fazer uma pergunta a ele."}),(0,qr.jsx)(zt,{className:"telaPreta"})]}),(0,qr.jsx)(kt,{titulo:"Cronograma",subtitulo:(0,qr.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 20 20",fill:"none",onClick:function(){s(!0);var e=document.querySelector("#toolTip1"),n=document.querySelector("#toolTip2"),r=document.querySelector("#toolTip3"),t=document.querySelector("#tituloCronograma"),o=document.querySelector(".telaPreta");e.style.display="flex",n.style.display="none",r.style.display="none",o.style.display="flex",t.style.zIndex="9999",i(0)},children:(0,qr.jsx)("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10ZM10 5.75C9.3787 5.75 8.875 6.25368 8.875 6.875C8.875 7.28921 8.5392 7.625 8.125 7.625C7.71079 7.625 7.375 7.28921 7.375 6.875C7.375 5.42525 8.5503 4.25 10 4.25C11.4497 4.25 12.625 5.42525 12.625 6.875C12.625 7.58584 12.3415 8.232 11.883 8.704C11.7907 8.7989 11.7027 8.8869 11.6187 8.9708C11.4029 9.1864 11.2138 9.3753 11.0479 9.5885C10.8289 9.8699 10.75 10.0768 10.75 10.25V11C10.75 11.4142 10.4142 11.75 10 11.75C9.5858 11.75 9.25 11.4142 9.25 11V10.25C9.25 9.5948 9.555 9.0644 9.8642 8.6672C10.0929 8.3733 10.3804 8.0863 10.6138 7.85346C10.6842 7.78321 10.7496 7.71789 10.807 7.65877C11.0046 7.45543 11.125 7.18004 11.125 6.875C11.125 6.25368 10.6213 5.75 10 5.75ZM10 15C10.5523 15 11 14.5523 11 14C11 13.4477 10.5523 13 10 13C9.4477 13 9 13.4477 9 14C9 14.5523 9.4477 15 10 15Z",fill:"white"})}),id:"tituloCronograma",style:{zIndex:"9999"}}),(0,qr.jsx)(It,{nomeConvidado:u[0].nome,horarioInicio:u[0].horario_inicio,horarioFim:u[0].horario_fim,onClick:l.bind(null,u[0]),onClickFinalizado:c.bind(null,u[0]),id:"cardCronograma1"},0),(0,qr.jsx)(It,{nomeConvidado:u[1].nome,horarioInicio:u[1].horario_inicio,horarioFim:u[1].horario_fim,onClick:l.bind(null,u[1]),onClickFinalizado:c.bind(null,u[1]),id:"cardCronograma2"},1),(0,qr.jsx)(Rt,{horarioFim:u[1].horario_fim,horarioInicio:u[2].horario_inicio}),u.slice(2,5).map((function(e,n){return(0,qr.jsx)(It,{nomeConvidado:e.nome,horarioInicio:e.horario_inicio,horarioFim:e.horario_fim,onClick:l.bind(null,e),onClickFinalizado:c.bind(null,e)},n)}))]})};var Xt,qt,Kt=Tn.header(Xt||(Xt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    height: 7.38rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.5rem;\n    border-bottom: 5px solid #fff;\n    margin-bottom: 1rem;\n"]))),Yt=Tn.article(qt||(qt=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 5rem;\n    height: 2.4375rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    \n    .valor{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"]))),Zt=function(){return(0,qr.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"21",height:"21",viewBox:"0 0 21 21",fill:"none",children:(0,qr.jsx)("path",{d:"M9.86046 3.85976C10.063 3.4053 10.1644 3.17807 10.3054 3.1081C10.4279 3.0473 10.5718 3.0473 10.6943 3.1081C10.8353 3.17807 10.9366 3.4053 11.1392 3.85976L12.7527 7.47957C12.8126 7.61392 12.8426 7.68109 12.8889 7.73253C12.9299 7.77805 12.98 7.81446 13.0359 7.83938C13.0992 7.86755 13.1723 7.87527 13.3186 7.89071L17.2599 8.30669C17.7547 8.35891 18.0021 8.38502 18.1122 8.49754C18.2079 8.59526 18.2523 8.73212 18.2324 8.86742C18.2094 9.02318 18.0247 9.18969 17.6551 9.5228L14.7109 12.176C14.6017 12.2744 14.5471 12.3237 14.5125 12.3836C14.4819 12.4367 14.4627 12.4956 14.4563 12.5565C14.4491 12.6254 14.4643 12.6973 14.4948 12.8412L15.3171 16.7181C15.4204 17.2049 15.472 17.4482 15.399 17.5877C15.3356 17.709 15.2192 17.7935 15.0844 17.8163C14.9292 17.8426 14.7137 17.7183 14.2826 17.4697L10.8496 15.4896C10.7222 15.4161 10.6585 15.3794 10.5907 15.365C10.5308 15.3523 10.4689 15.3523 10.4089 15.365C10.3412 15.3794 10.2775 15.4161 10.1501 15.4896L6.71704 17.4697C6.28604 17.7183 6.07053 17.8426 5.9153 17.8163C5.78045 17.7935 5.66404 17.709 5.60066 17.5877C5.52769 17.4482 5.57931 17.2049 5.68255 16.7181L6.50484 12.8412C6.53536 12.6973 6.55062 12.6254 6.54337 12.5565C6.53696 12.4956 6.51782 12.4367 6.4872 12.3836C6.45259 12.3237 6.39796 12.2744 6.2887 12.176L3.34465 9.5228C2.97504 9.18969 2.79024 9.02318 2.76726 8.86742C2.74731 8.73212 2.79177 8.59526 2.88744 8.49754C2.99758 8.38502 3.24499 8.35891 3.7398 8.30669L7.68106 7.89071C7.82734 7.87527 7.90047 7.86755 7.96372 7.83938C8.01967 7.81446 8.06978 7.77805 8.11078 7.73253C8.15711 7.68109 8.18705 7.61392 8.24695 7.47957L9.86046 3.85976Z",fill:"white",stroke:"white",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};const ei=function(e){var n=e.valor;return(0,qr.jsxs)(Yt,{children:[(0,qr.jsx)(Zt,{}),(0,qr.jsx)("div",{className:"valor",children:n})]})};var ni,ri=Tn.article(ni||(ni=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .perfil {\n        display: flex;\n        flex-direction: column;\n\n        .sair {\n            display: flex;\n            align-items: center;\n            \n            color: #FFF;\n            font-family: Inter;\n            font-size: 0.875rem;\n            font-style: normal;\n            font-weight: 400;\n            line-height: normal;\n            \n            cursor: pointer;\n        }\n    }\n}\n"]))),ti=function(e){var n=e.onClick;return(0,qr.jsx)("svg",{onClick:n,xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",children:(0,qr.jsx)("path",{d:"M18 12L6 12M6 12L11 17M6 12L11 7",stroke:"#CD0909",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})};function ii(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const oi=function(n){var r,t,i=n.onClick,o=(r=(0,e.useState)(localStorage.getItem("name")||"Jogador"),t=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(r,t)||function(e,n){if(e){if("string"==typeof e)return ii(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ii(e,n):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0];return o[1],(0,qr.jsxs)(ri,{children:[(0,qr.jsx)("img",{src:"imagens/perfilDefault.png",alt:"Perfil"}),(0,qr.jsxs)("div",{className:"perfil",children:[a,(0,qr.jsxs)("div",{className:"sair",onClick:i,children:[(0,qr.jsx)(ti,{}),"Sair do Quiz"]})]})]})};function ai(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}var si=(0,e.createContext)();function li(n){var r,t,i=n.children,o=(r=(0,e.useState)(localStorage.getItem("pontuacao")),t=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(r,t)||function(e,n){if(e){if("string"==typeof e)return ai(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ai(e,n):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,e.useEffect)((function(){var e=localStorage.getItem("pontuacao");e&&s(parseInt(e))}),[]),(0,e.useEffect)((function(){null!==a?localStorage.setItem("pontuacao",a.toString()):localStorage.removeItem("pontuacao")}),[a]);var l={pontuacao:a,adicionarPontos:function(){s((function(e){return e+20}))},resetarPontuacao:function(){s(0)}};return(0,qr.jsx)(si.Provider,{value:l,children:i})}function ci(){var n=(0,e.useContext)(si);if(void 0===n)throw new Error("usePontuacao deve ser usado dentro de um PontuacaoProvider");return n}const ui=function(){var e=Nr(),n=ci().pontuacao;return(0,qr.jsxs)(Kt,{children:[(0,qr.jsx)(oi,{onClick:function(){e("/cronograma")}}),(0,qr.jsx)(ei,{valor:n})]})},di=function(e){return(0,qr.jsxs)(qr.Fragment,{children:[(0,qr.jsx)(ui,{}),(0,qr.jsx)("div",{className:"container",children:e.children})]})};var mi,pi=Tn.article(mi||(mi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n    \n    .barTrack{\n        position: relative;\n        height: 0.625rem;\n        background-color: white;\n        border-radius: 999px;\n        overflow: hidden;\n    }\n    \n    .barFill{\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        background-color: red;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n    \n    .barText{\n        color: #FFF;\n        font-family: Inter;\n        font-size: 0.625rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        \n        text-align: right;\n        margin-bottom: 4px;\n        width: ","%;\n        transition: width 0.3s ease-out;\n    }\n"])),(function(e){return e.progress}),(function(e){return e.progress+6}));function fi(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const gi=function(n){var r,t,i=n.progress,o=void 0===i?20:i,a=n.color,s=void 0===a?"red":a,l=n.showPercentage,c=void 0===l||l,u=(r=(0,e.useState)(0),t=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(r,t)||function(e,n){if(e){if("string"==typeof e)return fi(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?fi(e,n):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),d=u[0],m=u[1];return(0,e.useEffect)((function(){var e=setTimeout((function(){d<o&&m((function(e){return Math.min(e+1,o)}))}),15);return function(){return clearTimeout(e)}}),[d,o]),(0,qr.jsxs)(pi,{progress:d,children:[c&&(0,qr.jsxs)("div",{className:"barText",children:[d,"%"]}),(0,qr.jsx)("div",{className:"barTrack",children:(0,qr.jsx)("div",{className:"barFill",color:s})})]})};var Ci,hi,bi=Tn.article(Ci||(Ci=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n"]))),vi=Tn.article(hi||(hi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    background: #FFF;\n    width: 16.875rem;\n    height: 3.0625rem;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding-left: 1.31rem;\n    gap: 1rem;\n    cursor: pointer;\n    transition: background 0.3s ease-in-out;\n    \n    &.ativo {\n        background: #CD0909;\n    }\n\n    &.incorreto {\n        background: #878787;\n    }\n    \n    &.correto {\n        background: #008000;\n    }\n\n    &.ativo, &.incorreto, &.correto {\n        .texto-alternativa, .letra-alternativa {\n            color: #FFF;\n        }\n    }\n\n    .letra-alternativa {\n        color: #CD0909;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        width: 2rem;\n    }\n\n    .texto-alternativa {\n        color: #000;\n        font-family: Inter;\n        font-size: 1rem;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n    }\n"])));const yi=function(e){var n=e.letraDaAlternativa,r=e.textoDaAlternativa,t=e.selecionado,i=e.incorreto,o=e.correto,a=e.onSelecao,s="";return t?s=i?"incorreto":o?"correto":"ativo":o&&(s="correto"),(0,qr.jsxs)(vi,{className:s,onClick:a,children:[(0,qr.jsx)("div",{className:"letra-alternativa",children:n}),(0,qr.jsx)("div",{className:"texto-alternativa",children:r})]})},Si=function(e){var n=e.alternativas,r=e.alternativaSelecionada,t=e.alternativaIncorreta,i=e.respostaCorreta,o=e.handleSelecao;return(0,qr.jsx)(bi,{children:n.map((function(e){return(0,qr.jsx)(yi,{letraDaAlternativa:(n=e.id,["A","B","C","D"][n-1]),textoDaAlternativa:e.texto,selecionado:r===e.id,incorreto:t===e.id,onSelecao:function(){return o(e.id)},correto:i===e.id},e.id);var n}))})};var Pi,Ai=Tn.article(Pi||(Pi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    color: #CD0909;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const _i=function(e){var n=e.pontos;return(0,qr.jsxs)(Ai,{children:["Valendo ",n," pontos"]})};var Di,Ei=Tn.article(Di||(Di=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n"])));const Oi=function(e){var n=e.children;return(0,qr.jsx)(Ei,{children:n})};var xi,wi=Tn.article(xi||(xi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    color: #FFF;\n    text-align: center;\n    font-family: Inter;\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n"])));const Ii=function(e){var n=e.children;return(0,qr.jsx)(wi,{children:n})};function Ui(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Fi(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Fi(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Fi(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const Ri=function(){var n,r=Ui((0,e.useState)(null),2),t=r[0],i=r[1],o=Ui((0,e.useState)(null),2),a=o[0],s=o[1],l=Ui((0,e.useState)(!1),2),c=l[0],u=l[1],d=Ui((0,e.useState)(0),2),m=d[0],p=d[1],f=Ui((0,e.useState)("ENVIAR"),2),g=f[0],C=f[1],h=ci(),b=(h.pontuacao,h.adicionarPontos),v=Nr(),y=(Rr().state.palestrante,[{id:1,pergunta:"Qual é o tema da palestra?",alternativas:[{id:1,texto:"Tema 1"},{id:2,texto:"Tema 2"},{id:3,texto:"Tema 3"},{id:4,texto:"Tema 4"}],resposta:2},{id:2,pergunta:"Qual é o público-alvo da palestra?",alternativas:[{id:1,texto:"Público 1"},{id:2,texto:"Público 2"},{id:3,texto:"Público 3"},{id:4,texto:"Público 4"}],resposta:3},{id:3,pergunta:"Qual é a duração da palestra?",alternativas:[{id:1,texto:"30 minutos"},{id:2,texto:"1 hora"},{id:3,texto:"1 hora e 30 minutos"},{id:4,texto:"2 horas"}],resposta:1}]);return(0,qr.jsxs)(di,{children:[(0,qr.jsx)(gi,{progress:(n=m/y.length*100,Math.round(100*n)/100),color:"blue",backgroundColor:"gray",height:10}),(0,qr.jsx)(Ii,{children:y[m].pergunta}),(0,qr.jsx)(Si,{alternativas:y[m].alternativas,alternativaSelecionada:t,alternativaIncorreta:a,respostaCorreta:c?y[m].resposta:null,handleSelecao:function(e){i(e)}}),(0,qr.jsx)(Kr,{disabled:!t,type:"button",onClick:function(){t===y[m].resposta?(u(!0),C("ACERTOU!!"),b(),setTimeout((function(){m===y.length-1?v("/ranking"):(p(m+1),i(null),u(!1),C("ENVIAR"))}),1e3)):(s(t),u(!0),C("ERROU.."),setTimeout((function(){m===y.length-1?v("/ranking"):(p(m+1),i(null),u(!1),C("ENVIAR"))}),1e3))},children:g}),(0,qr.jsx)(_i,{pontos:20}),(0,qr.jsx)(Oi,{children:(0,qr.jsx)(at,{})})]})};var Li,Ni,ki,ji=Tn.article(Li||(Li=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    gap: 0.5rem;\n    justify-content: flex-end;\n    align-items: flex-end;\n    height: 15rem;\n"])));function Wi(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var Mi=Bn(Ni||(Ni=Wi(["\n    from {\n        height: 0;\n        margin-top: auto;\n    }\n    to {\n        height: ","rem;\n        margin-top: 0;\n    }\n"])),(function(e){return e.altura})),Ti=Tn.article(ki||(ki=Wi(["\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n    \n    .icone{\n        img{\n            width: 3.95088rem;\n            height: 3.6875rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 63.21/59.00;\n        }\n    }\n    \n    .torre {\n        width: 3.4375rem;\n        height: ",";\n        flex-shrink: 0;\n        background: #CD0909;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #FFF;\n        font-family: Inter;\n        font-size: 1.25rem;\n        font-style: normal;\n        font-weight: 900;\n        line-height: normal;\n        animation: "," 5s ease-out forwards;\n        transform-origin: bottom;\n    }\n"])),(function(e){return e.altura||"7.75rem"}),Mi);const Bi=function(e){var n=e.posicaoNumero,r=void 0===n?1:n,t=e.nomeCompetidor,i=void 0===t?"michel":t,o=e.iconeCompetidor,a=void 0===o?"imagens/perfilDefault.png":o,s=e.altura,l=void 0===s?100:s;return(0,qr.jsxs)(Ti,{children:[(0,qr.jsx)("div",{className:"nome",children:i}),(0,qr.jsx)("div",{className:"icone",children:(0,qr.jsx)("img",{src:a,alt:"icone",style:{height:l}})}),(0,qr.jsx)("div",{className:"torre",style:{height:function(e){switch(e){case 1:return 7.75;case 2:return 5.0625;case 3:return 3.25}}(r)+"rem"},children:r})]})},zi=function(e){var n=e.top3;return(0,qr.jsxs)(ji,{children:[(0,qr.jsx)(Bi,{posicaoNumero:2,nomeCompetidor:n[1].nome,iconeCompetidor:n[1].icone}),(0,qr.jsx)(Bi,{posicaoNumero:1,nomeCompetidor:n[0].nome,iconeCompetidor:n[0].icone}),(0,qr.jsx)(Bi,{posicaoNumero:3,nomeCompetidor:n[2].nome,iconeCompetidor:n[2].icone})]})};var Vi,Ji,Hi,Gi=Tn.article(Vi||(Vi=function(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: 0.5rem;\n    width: 100%;\n"])));function Qi(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var $i=Bn(Ji||(Ji=Qi(["\n  from {\n    width: 0;\n  }\n  to {\n    width: ","rem;\n  }\n"])),(function(e){return e.largura})),Xi=Tn.article(Hi||(Hi=Qi(["\n    width: ","rem;\n    height: 3.625rem;\n    flex-shrink: 0;\n    background: #CD0909;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 1.125rem;\n    animation: "," 5s ease-out forwards;\n    \n    color: #FFF;\n    font-family: Inter;\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 900;\n    line-height: normal;\n    \n    .info {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        \n        img{\n            width: 2.27681rem;\n            height: 2.125rem !important;\n            flex-shrink: 0;\n            aspect-ratio: 36.43/34.00;\n            border: none;\n        }\n    }\n    \n    .container-pontuacao {\n        position: relative;\n        left: 3rem;\n    }\n"])),(function(e){return e.largura}),$i);const qi=function(e){var n=e.posicao,r=void 0===n?1:n,t=e.icone,i=void 0===t?"imagens/perfilDefault.png":t,o=e.nome,a=void 0===o?"michel":o,s=e.pontuacao,l=void 0===s?90:s,c=e.pontuacaoMaxima,u=void 0===c?100:c;return(0,qr.jsxs)(Xi,{largura:function(e){return e/u*15}(l),children:[(0,qr.jsxs)("div",{children:["#",r]}),(0,qr.jsxs)("div",{className:"info",children:[(0,qr.jsx)("img",{src:i,alt:"imagem de perfil",className:"imagem-perfil"}),a]}),(0,qr.jsx)("div",{className:"container-pontuacao",children:l})]})};function Ki(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const Yi=function(n){var r,t,i=n.top5,o=(r=(0,e.useState)(100),t=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(r,t)||function(e,n){if(e){if("string"==typeof e)return Ki(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ki(e,n):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],s=o[1];(0,e.useEffect)((function(){l()}),[]);var l=function(){var e=0;i.forEach((function(n){n.pontos>e&&(e=n.pontos)})),s(e)};return(0,qr.jsx)(Gi,{children:i.map((function(e,n){return(0,qr.jsx)(qi,{posicao:n+1,nome:e.nome,pontuacao:e.pontos,pontuacaoMaxima:a},n)}))})};function Zi(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var t,i,o,a,s=[],l=!0,c=!1;try{if(o=(r=r.call(e)).next,0===n){if(Object(r)!==r)return;l=!1}else for(;!(l=(t=o.call(r)).done)&&(s.push(t.value),s.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return eo(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?eo(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function eo(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}const no=function(){var n=Nr(),r=Zi((0,e.useState)([]),2),t=r[0],i=r[1],o=Zi((0,e.useState)(!0),2),a=(o[0],o[1]),s=Zi((0,e.useState)(localStorage.getItem("name")),2),l=s[0],c=(s[1],Zi((0,e.useState)(localStorage.getItem("pontuacao")),2)),u=c[0];c[1],(0,e.useEffect)((function(){m(),p()}),[]);var d=[{nome:"Lucas",pontos:100},{nome:"Maria",pontos:90},{nome:"João",pontos:80},{nome:"Ana",pontos:70},{nome:"Pedro",pontos:60}],m=function(){var e=[].concat(d,[{nome:l,pontos:u}]).sort((function(e,n){return n.pontos-e.pontos})).slice(0,5);i(e),console.log(e)},p=function(){a(!0);var e=setTimeout((function(){a(!1)}),5e3);return function(){return clearTimeout(e)}};return(0,qr.jsxs)(di,{children:[(0,qr.jsx)(kt,{titulo:"Resultado da dinâmica do convidado tal",subtitulo:(0,qr.jsx)(qr.Fragment,{children:(0,qr.jsx)(Kr,{className:"mini",onClick:function(){n("/cronograma")},children:"SAIR"})})}),t.length>4&&(0,qr.jsxs)(qr.Fragment,{children:[(0,qr.jsx)(zi,{top3:t.slice(0,3)}),(0,qr.jsx)(Yi,{top5:t})]}),(0,qr.jsx)(Oi,{children:(0,qr.jsx)(at,{})})]})};var ro=document.getElementById("root");(0,r.s)(ro).render((0,qr.jsx)(e.StrictMode,{children:(0,qr.jsx)(gt,{children:(0,qr.jsx)(li,{children:(0,qr.jsxs)(Qr,{children:[(0,qr.jsx)(Hr,{path:"/",element:(0,qr.jsx)(dt,{})}),(0,qr.jsx)(Hr,{path:"/cronograma",element:(0,qr.jsx)($t,{})}),(0,qr.jsx)(Hr,{path:"/palestrante",element:(0,qr.jsx)(Ri,{})}),(0,qr.jsx)(Hr,{path:"/ranking",element:(0,qr.jsx)(no,{})})]})})})}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,